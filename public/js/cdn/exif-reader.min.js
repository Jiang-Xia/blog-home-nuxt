!(function (e, t) {
  'object' == typeof exports && 'object' == typeof module
    ? (module.exports = t())
    : 'function' == typeof define && define.amd
      ? define([], t)
      : 'object' == typeof exports
        ? (exports.ExifReader = t())
        : (e.ExifReader = t());
})('undefined' != typeof self ? self : this, function () {
  return (function () {
    'use strict';
    function e(t) {
      return (
        (e =
          'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  'function' == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? 'symbol'
                  : typeof e;
              }),
        e(t)
      );
    }
    function t(t) {
      var n = (function (t) {
        if ('object' != e(t) || !t) return t;
        var n = t[Symbol.toPrimitive];
        if (void 0 !== n) {
          var r = n.call(t, 'string');
          if ('object' != e(r)) return r;
          throw new TypeError('@@toPrimitive must return a primitive value.');
        }
        return t + '';
      })(t);
      return 'symbol' == e(n) ? n : n + '';
    }
    function n(e, t, n) {
      try {
        return new DataView(e, t, n);
      } catch (r) {
        return new yn(e, t, n);
      }
    }
    function r(e, t, n) {
      for (var r = [], i = 0; i < n && t + i < e.byteLength; i++) r.push(e.getUint8(t + i));
      return u(r);
    }
    function i(e, t) {
      for (var n = [], r = 0; t + r < e.byteLength; ) {
        var i = e.getUint8(t + r);
        if (0 === i) break;
        (n.push(i), r++);
      }
      return u(n);
    }
    function o(e, t, n) {
      for (var r = [], i = 0; i < n && t + i < e.byteLength; i += 2) r.push(e.getUint16(t + i));
      return (0 === r[r.length - 1] && r.pop(), u(r));
    }
    function a(e, t) {
      var n = e.getUint8(t);
      return [n, r(e, t + 1, n)];
    }
    function u(e) {
      return e
        .map(function (e) {
          return String.fromCharCode(e);
        })
        .join('');
    }
    function c() {
      for (var e = 1; e < arguments.length; e++)
        for (var t in arguments[e]) arguments[0][t] = arguments[e][t];
      return arguments[0];
    }
    function f(e, t, n) {
      var r = 0;
      Object.defineProperty(e, t, {
        get: function () {
          return (
            r ||
              ((r = 1),
              Object.defineProperty(e, t, {
                configurable: 1,
                enumerable: 1,
                value: n.apply(e),
                writable: 1,
              })),
            e[t]
          );
        },
        configurable: 1,
        enumerable: 1,
      });
    }
    function s(e) {
      return 'undefined' != typeof btoa
        ? 'string' == typeof e
          ? btoa(e)
          : btoa(
              Array.prototype.reduce.call(
                new Uint8Array(e),
                function (e, t) {
                  return e + String.fromCharCode(t);
                },
                '',
              ),
            )
        : 'undefined' != typeof Buffer
          ? void 0 !== Buffer.from
            ? Buffer.from(e).toString('base64')
            : new Buffer(e).toString('base64')
          : void 0;
    }
    function l(e, t) {
      return Array(t + 1).join(e);
    }
    function d(e, t, n) {
      var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 'string';
      if (0 === t && 'function' == typeof DecompressionStream) {
        var i = new DecompressionStream('deflate'),
          o = new Blob([e]).stream().pipeThrough(i);
        return 'dataview' === r
          ? new Response(o).arrayBuffer().then(function (e) {
              return new DataView(e);
            })
          : new Response(o).arrayBuffer().then(function (e) {
              return new TextDecoder(n).decode(e);
            });
      }
      return void 0 !== t ? Promise.reject('Unknown compression method '.concat(t, '.')) : e;
    }
    function p(e) {
      return e
        .map(function (e) {
          return String.fromCharCode(e);
        })
        .join('');
    }
    function m(e) {
      if (e.length >= 8) {
        var t = p(e.slice(0, 8));
        if ('ASCII\0\0\0' === t) return p(e.slice(8));
        if ('JIS\0\0\0\0\0' === t) return '[JIS encoded text]';
        if ('UNICODE\0' === t) return '[Unicode encoded text]';
        if ('\0\0\0\0\0\0\0\0' === t) return '[Undefined encoding]';
      }
      return 'Undefined';
    }
    function g(e) {
      return e[0][0] / e[0][1] + e[1][0] / e[1][1] / 60 + e[2][0] / e[2][1] / 3600;
    }
    function h(e, t) {
      return e.getUint16(t) === Gn;
    }
    function v(e, t) {
      return e.getUint16(t) === jn;
    }
    function y(e, t) {
      var n = Nn.length;
      return e.getUint16(t) === Yn && r(e, t + wn, n) === Nn;
    }
    function S(e, t) {
      var n = Bn.length;
      return e.getUint16(t) === Yn && r(e, t + wn, n) === Bn;
    }
    function b(e, t) {
      var n = Qn.length;
      return e.getUint16(t) === Xn && r(e, t + wn, n) === Qn && 0 === e.getUint8(t + wn + n);
    }
    function I(e, t) {
      var n = er.length;
      return e.getUint16(t) === Jn && r(e, t + wn, n) === er && 0 === e.getUint8(t + wn + n);
    }
    function C(e, t) {
      return (
        e.getUint16(t) === Jn &&
        (function (e, t) {
          var n = tr.length;
          return r(e, t + wn, n) === tr;
        })(e, t)
      );
    }
    function U(e, t) {
      return (
        e.getUint16(t) === Jn &&
        (function (e, t) {
          var n = nr.length;
          return r(e, t + wn, n) === nr;
        })(e, t)
      );
    }
    function P(e, t) {
      return { dataOffset: e + Fn, length: t - (Fn - xn) };
    }
    function A(e, t) {
      return { dataOffset: e + Rn, length: t - (Rn - xn) };
    }
    function E(e, t) {
      var n = rr.length;
      return e.getUint16(t) === Kn && r(e, t + wn, n) === rr && 0 === e.getUint8(t + wn + n);
    }
    function w(e, t) {
      var n = e.getUint16(t);
      return (
        (n >= Xn && n <= qn) ||
        n === $n ||
        n === Gn ||
        n === jn ||
        n === zn ||
        n === Vn ||
        n === Hn ||
        n === Wn
      );
    }
    function x(e, t) {
      return e.getUint16(t) === Zn;
    }
    function T(e, t) {
      return 'IHDR' === r(e, t + cr, ar);
    }
    function O(e, t) {
      return r(e, t + cr, ar) === dr && r(e, t + fr, sr.length) === sr;
    }
    function M(e, t, n) {
      var i = r(e, t + cr, ar);
      return i === lr || i === dr || (i === pr && n);
    }
    function F(e, t) {
      return r(e, t + cr, ar) === hr;
    }
    function R(e, t) {
      return r(e, t + cr, ar) === vr;
    }
    function k(e, t) {
      var n = [mr, gr],
        i = r(e, t + cr, ar);
      return n.includes(i);
    }
    function D(e, t) {
      t += fr + sr.length + 1 + 1;
      for (var n = 0; n < 2 && t < e.byteLength; ) (0 === e.getUint8(t) && n++, t++);
      if (!(n < 2)) return t;
    }
    function N(e, t) {
      var n = i(e, t);
      return (
        (t += n.length + 1),
        { profileName: n, compressionMethod: e.getUint8(t), compressedProfileOffset: (t += 1) }
      );
    }
    function L(e, t, n, r, i, o, a, u) {
      if (void 0 === u) return [];
      for (var c = [], f = n.items, s = 0; s < u; s++) {
        var l = { extents: [] };
        ((l.itemId = _(e, f, t)),
          (f += r.item.itemId),
          (l.constructionMethod = 1 === t || 2 === t ? 15 & e.getUint16(f) : void 0),
          (f += r.item.constructionMethod),
          (l.dataReferenceIndex = e.getUint16(f)),
          (f += r.item.dataReferenceIndex),
          (l.baseOffset = G(e, f, r.item.baseOffset)),
          (f += r.item.baseOffset),
          (l.extentCount = e.getUint16(f)),
          (f += r.item.extentCount));
        for (var d = 0; d < l.extentCount; d++) {
          var p = {};
          ((p.extentIndex = B(e, t, f, a)),
            (f += r.item.extent.extentIndex),
            (p.extentOffset = G(e, f, i)),
            (f += r.item.extent.extentOffset),
            (p.extentLength = G(e, f, o)),
            (f += r.item.extent.extentLength),
            l.extents.push(p));
        }
        c.push(l);
      }
      return c;
    }
    function _(e, t, n) {
      return n < 2 ? e.getUint16(t) : 2 === n ? e.getUint32(t) : void 0;
    }
    function B(e, t, n, r) {
      if ((1 === t || 2 === t) && r > 0) return G(e, n, r);
    }
    function G(e, t, n) {
      return 4 === n
        ? e.getUint32(t)
        : 8 === n
          ? (console.warn(
              'This file uses an 8-bit offset which is currently not supported by ExifReader. Contact the maintainer to get it fixed.',
            ),
            (function (e, t) {
              return e.getUint32(t + 4);
            })(e, t))
          : 0;
    }
    function j(e, t) {
      var n = (function (e, t) {
          var n = e.getUint32(t);
          return (function (e) {
            return 0 === e;
          })(n)
            ? { length: e.byteLength - t, contentOffset: t + 4 + 4 }
            : (function (e) {
                  return 1 === e;
                })(n) &&
                (function (e, t) {
                  return 0 === e.getUint32(t + 8);
                })(e, t)
              ? { length: e.getUint32(t + 12), contentOffset: t + 4 + 4 + 8 }
              : { length: n, contentOffset: t + 4 + 4 };
        })(e, t),
        o = n.length,
        a = n.contentOffset;
      if (!(o < 8)) {
        var u = e.getUint32(t + 4);
        if (1718909296 === u)
          return (function (e, t, n) {
            return { type: 'ftyp', majorBrand: r(e, t, 4), length: n };
          })(e, a, o);
        if (1768977008 === u)
          return (function (e, t, n, r) {
            return { type: 'iprp', subBoxes: W(e, n, r - (n - t)), length: r };
          })(e, t, a, o);
        if (1768973167 === u)
          return (function (e, t, n, r) {
            return { type: 'ipco', properties: W(e, n, r - (n - t)), length: r };
          })(e, t, a, o);
        if (1668246642 === u)
          return (function (e, t, n) {
            return { type: 'colr', icc: H(e, t), length: n };
          })(e, a, o);
        var c = e.getUint8(a);
        return 1835365473 === u
          ? (function (e, t, n, r) {
              return { type: 'meta', subBoxes: W(e, n + 3, r - (n + 3 - t)), length: r };
            })(e, t, a + 1, o)
          : 1768714083 === u
            ? (function (e, t, n, r) {
                var i = (function (e, t) {
                    var n = { item: { dataReferenceIndex: 2, extentCount: 2, extent: {} } };
                    (e < 2
                      ? ((n.itemCount = 2), (n.item.itemId = 2))
                      : 2 === e && ((n.itemCount = 4), (n.item.itemId = 4)),
                      (n.item.constructionMethod = 1 === e || 2 === e ? 2 : 0));
                    var r = {
                      offsetSize: t,
                      lengthSize: t,
                      baseOffsetSize: t + 1,
                      indexSize: t + 1,
                    };
                    return (
                      (r.itemCount = t + 2),
                      (r.items = r.itemCount + n.itemCount),
                      (r.item = { itemId: 0 }),
                      (r.item.constructionMethod = r.item.itemId + n.item.itemId),
                      (r.item.dataReferenceIndex =
                        r.item.constructionMethod + n.item.constructionMethod),
                      { offsets: r, sizes: n }
                    );
                  })(t, n + 3),
                  o = i.offsets,
                  a = i.sizes,
                  u = e.getUint8(o.offsetSize) >> 4;
                a.item.extent.extentOffset = u;
                var c = 15 & e.getUint8(o.lengthSize);
                a.item.extent.extentLength = c;
                var f = e.getUint8(o.baseOffsetSize) >> 4;
                a.item.baseOffset = f;
                var s = (function (e, t, n) {
                  if (1 === n || 2 === n) return 15 & e.getUint8(t);
                })(e, o.indexSize, t);
                a.item.extent.extentIndex = void 0 !== s ? s : 0;
                var l = (function (e, t, n) {
                  return n < 2 ? e.getUint16(t) : 2 === n ? e.getUint32(t) : void 0;
                })(e, o.itemCount, t);
                return { type: 'iloc', items: L(e, t, o, a, u, c, s, l), length: r };
              })(e, c, a + 1, o)
            : 1768517222 === u
              ? (function (e, t, n, r, i) {
                  var o = (function (e, t) {
                      var n = { entryCount: t + 3 },
                        r = {};
                      return (
                        (r.entryCount = 0 === e ? 2 : 4),
                        (n.itemInfos = n.entryCount + r.entryCount),
                        { offsets: n }
                      );
                    })(n, r),
                    a = o.offsets;
                  return {
                    type: 'iinf',
                    itemInfos: W(e, a.itemInfos, i - (a.itemInfos - t)),
                    length: i,
                  };
                })(e, t, c, a + 1, o)
              : 1768842853 === u
                ? (function (e, t, n, r, o) {
                    r += 3;
                    var a = { type: 'infe', length: o };
                    return (
                      (0 !== n && 1 !== n) ||
                        ((a.itemId = e.getUint16(r)),
                        (r += 2),
                        (a.itemProtectionIndex = e.getUint16(r)),
                        (r += 2),
                        (a.itemName = i(e, r)),
                        (r += a.itemName.length + 1)),
                      n >= 2 &&
                        (2 === n
                          ? ((a.itemId = e.getUint16(r)), (r += 2))
                          : 3 === n && ((a.itemId = e.getUint32(r)), (r += 4)),
                        (a.itemProtectionIndex = e.getUint16(r)),
                        (r += 2),
                        (a.itemType = e.getUint32(r)),
                        (r += 4),
                        (a.itemName = i(e, r)),
                        (r += a.itemName.length + 1),
                        a.itemType === Sr
                          ? ((a.contentType = i(e, r)),
                            t + o > (r += a.contentType.length + 1) &&
                              ((a.contentEncoding = i(e, r)), (r += a.contentEncoding.length + 1)))
                          : 1970432288 === a.itemType &&
                            ((a.itemUri = i(e, r)), (r += a.itemUri.length + 1))),
                      a
                    );
                  })(e, t, c, a + 1, o)
                : { type: void 0, length: o };
      }
    }
    function z(e) {
      if (bn.USE_EXIF || bn.USE_XMP || bn.USE_ICC) {
        var t = {},
          n = (function (e) {
            for (var t = 0; t + 4 + 4 <= e.byteLength; ) {
              var n = j(e, t);
              if (void 0 === n) break;
              if ('meta' === n.type) return n;
              t += n.length;
            }
          })(e);
        return n
          ? (bn.USE_EXIF &&
              (t.tiffHeaderOffset = (function (e, t) {
                try {
                  var n = (function (e) {
                      return e.subBoxes
                        .find(function (e) {
                          return 'iinf' === e.type;
                        })
                        .itemInfos.find(function (e) {
                          return e.itemType === yr;
                        });
                    })(t).itemId,
                    r = V(t, n);
                  return (function (e, t) {
                    return t + 4 + e.getUint32(t);
                  })(e, r.baseOffset + r.extents[0].extentOffset);
                } catch (e) {
                  return;
                }
              })(e, n)),
            bn.USE_XMP &&
              (t.xmpChunks = (function (e) {
                try {
                  var t = (function (e) {
                      return e.subBoxes
                        .find(function (e) {
                          return 'iinf' === e.type;
                        })
                        .itemInfos.find(function (e) {
                          return e.itemType === Sr && 'application/rdf+xml' === e.contentType;
                        });
                    })(e).itemId,
                    n = V(e, t),
                    r = V(e, t).extents[0];
                  return [{ dataOffset: n.baseOffset + r.extentOffset, length: r.extentLength }];
                } catch (e) {
                  return;
                }
              })(n)),
            bn.USE_ICC &&
              (t.iccChunks = (function (e) {
                try {
                  var t = e.subBoxes
                    .find(function (e) {
                      return 'iprp' === e.type;
                    })
                    .subBoxes.find(function (e) {
                      return 'ipco' === e.type;
                    })
                    .properties.find(function (e) {
                      return 'colr' === e.type;
                    }).icc;
                  if (t) return [t];
                } catch (e) {}
              })(n)),
            (t.hasAppMarkers =
              void 0 !== t.tiffHeaderOffset || void 0 !== t.xmpChunks || void 0 !== t.iccChunks),
            t)
          : { hasAppMarkers: 0 };
      }
      return {};
    }
    function V(e, t) {
      return e.subBoxes
        .find(function (e) {
          return 'iloc' === e.type;
        })
        .items.find(function (e) {
          return e.itemId === t;
        });
    }
    function H(e, t) {
      var n = r(e, t, 4);
      if ('prof' === n || 'rICC' === n)
        return { offset: t + 4, length: e.getUint32(t + 4), chunkNumber: 1, chunksTotal: 1 };
    }
    function W(e, t, n) {
      for (var r = [yr, Sr], i = [], o = t; o < t + n; ) {
        var a = j(e, o);
        if (void 0 === a) break;
        (void 0 === a.type || (void 0 !== a.itemType && -1 === r.indexOf(a.itemType)) || i.push(a),
          (o += a.length));
      }
      return i;
    }
    function X(e, t, n) {
      return c({}, e, { fileType: { value: t, description: n } });
    }
    function J(e) {
      return new TextDecoder('utf-16').decode(new Uint8Array(e)).replace(/\u0000+$/, '');
    }
    function Y(e, t) {
      (null == t || t > e.length) && (t = e.length);
      for (var n = 0, r = Array(t); n < t; n++) r[n] = e[n];
      return r;
    }
    function K(e, t) {
      (null == t || t > e.length) && (t = e.length);
      for (var n = 0, r = Array(t); n < t; n++) r[n] = e[n];
      return r;
    }
    function q(e) {
      return (
        (q =
          'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  'function' == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? 'symbol'
                  : typeof e;
              }),
        q(e)
      );
    }
    function $(e, t, n) {
      return (
        (t = (function (e) {
          var t = (function (e) {
            if ('object' != q(e) || !e) return e;
            var t = e[Symbol.toPrimitive];
            if (void 0 !== t) {
              var n = t.call(e, 'string');
              if ('object' != q(n)) return n;
              throw new TypeError('@@toPrimitive must return a primitive value.');
            }
            return e + '';
          })(e);
          return 'symbol' == q(t) ? t : t + '';
        })(t)) in e
          ? Object.defineProperty(e, t, { value: n, enumerable: 1, configurable: 1, writable: 1 })
          : (e[t] = n),
        e
      );
    }
    function Z(e, t) {
      return e.getUint8(t);
    }
    function Q(e, t, n) {
      return e.getUint32(t, n === Cn);
    }
    function ee(e, t, n) {
      return e.getInt32(t, n === Cn);
    }
    function te(e, t, n) {
      return t + Br.getLongAt(e, t + 4, n);
    }
    function ne(e, t, n, r, i, o) {
      var a = Br.getTypeSize('SHORT'),
        u = {},
        c = (function (e, t, n) {
          return t + Br.getTypeSize('SHORT') <= e.byteLength ? Br.getShortAt(e, t, n) : 0;
        })(e, r, i);
      r += a;
      for (var f = 0; f < c && !(r + 12 > e.byteLength); f++) {
        var s = re(e, t, n, r, i, o);
        (void 0 !== s &&
          ((u[s.name] = { id: s.id, value: s.value, description: s.description }),
          ('MakerNote' === s.name || (t === Dr && 'LevelInfo' === s.name)) &&
            (u[s.name].__offset = s.__offset)),
          (r += 12));
      }
      if (bn.USE_THUMBNAIL && r < e.byteLength - Br.getTypeSize('LONG')) {
        var l = Br.getLongAt(e, r, i);
        0 !== l && t === Mr && (u.Thumbnail = ne(e, '1st', n, n + l, i, o));
      }
      return u;
    }
    function re(e, t, n, r, i, o) {
      var a,
        u,
        c = Br.getTypeSize('SHORT'),
        f = c + Br.getTypeSize('SHORT'),
        s = f + Br.getTypeSize('LONG'),
        l = Br.getShortAt(e, r, i),
        d = Br.getShortAt(e, r + c, i),
        p = Br.getLongAt(e, r + f, i);
      if (void 0 !== Br.typeSizes[d] && (o || void 0 !== Nr[t][l])) {
        ((a = (function (e, t) {
          return Br.typeSizes[e] * t <= Br.getTypeSize('LONG');
        })(d, p)
          ? ie(e, (u = r + s), d, p, i)
          : (function (e, t, n, r, i) {
                return t + n + Br.typeSizes[r] * i <= e.byteLength;
              })(e, n, (u = Br.getLongAt(e, r + s, i)), d, p)
            ? ie(e, n + u, d, p, i, 33723 === l)
            : '<faulty value>'),
          d === Br.tagTypes.ASCII &&
            (a = (function (e) {
              try {
                return e.map(function (e) {
                  return decodeURIComponent(escape(e));
                });
              } catch (t) {
                return e;
              }
            })(
              (a = (function (e) {
                for (var t = [], n = 0, r = 0; r < e.length; r++)
                  '\0' !== e[r] ? (void 0 === t[n] && (t[n] = ''), (t[n] += e[r])) : n++;
                return t;
              })(a)),
            )));
        var m = 'undefined-'.concat(l),
          g = a;
        if (void 0 !== Nr[t][l])
          if (void 0 !== Nr[t][l].name && void 0 !== Nr[t][l].description) {
            m = Nr[t][l].name;
            try {
              g = Nr[t][l].description(a);
            } catch (e) {
              g = oe(a);
            }
          } else
            d === Br.tagTypes.RATIONAL || d === Br.tagTypes.SRATIONAL
              ? ((m = Nr[t][l]), (g = '' + a[0] / a[1]))
              : ((m = Nr[t][l]), (g = oe(a)));
        return { id: l, name: m, value: a, description: g, __offset: u };
      }
    }
    function ie(e, t, n, r, i) {
      var o = [];
      arguments.length > 5 &&
        void 0 !== arguments[5] &&
        arguments[5] &&
        ((r *= Br.typeSizes[n]), (n = Br.tagTypes.BYTE));
      for (var a = 0; a < r; a++) (o.push(Gr[n](e, t, i)), (t += Br.typeSizes[n]));
      return (
        n === Br.tagTypes.ASCII ? (o = Br.getAsciiValue(o)) : 1 === o.length && (o = o[0]),
        o
      );
    }
    function oe(e) {
      return e instanceof Array ? e.join(', ') : e;
    }
    function ae(e, t, n, r, i) {
      return void 0 !== e[jr] ? c(e, ne(t, Fr, n, n + e[jr].value, r, i)) : e;
    }
    function ue(e, t, n, r, i) {
      return void 0 !== e[zr] ? c(e, ne(t, 'gps', n, n + e[zr].value, r, i)) : e;
    }
    function ce(e, t, n, r, i) {
      return void 0 !== e[Vr] ? c(e, ne(t, Rr, n, n + e[Vr].value, r, i)) : e;
    }
    function fe(e, t, n, r) {
      if (r === Cn) {
        for (var i = 0, o = 0; o < n; o++) i += e[t + o] << (8 * o);
        return i;
      }
      for (var a = 0, u = 0; u < n; u++) a += e[t + u] << (8 * (n - 1 - u));
      return a;
    }
    function se(e) {
      var t = [(e >> 31) & 1, (e >> 30) & 1, (e >> 29) & 1],
        n = [];
      return (
        t[0] && n.push('Dependent Parent Image'),
        t[1] && n.push('Dependent Child Image'),
        t[2] && n.push('Representative Image'),
        { value: t, description: n.join(', ') || 'None' }
      );
    }
    function le(e) {
      var t = (e >> 24) & 7;
      return { value: t, description: 0 === t ? 'JPEG' : 'Unknown' };
    }
    function de(e) {
      var t = 16777215 & e;
      return {
        value: t,
        description:
          {
            196608: 'Baseline MP Primary Image',
            65537: 'Large Thumbnail (VGA equivalent)',
            65538: 'Large Thumbnail (Full HD equivalent)',
            131073: 'Multi-Frame Image (Panorama)',
            131074: 'Multi-Frame Image (Disparity)',
            131075: 'Multi-Frame Image (Multi-Angle)',
            0: 'Undefined',
          }[t] || 'Unknown',
      };
    }
    function pe(e, t, n, r) {
      return (function (e) {
        return 0 === e;
      })(e)
        ? 0
        : fe(t.value, e * Xr + 8, Br.getTypeSize('LONG'), n) + r;
    }
    function me(e, t, n) {
      if (!(3 > n)) {
        var r = Br.getByteAt(e, t + 2);
        return { value: r, description: '' + r };
      }
    }
    function ge(e, t, n) {
      if (!(5 > n)) {
        var r = Br.getShortAt(e, t + 3);
        return { value: r, description: ''.concat(r, 'px') };
      }
    }
    function he(e, t, n) {
      if (!(7 > n)) {
        var r = Br.getShortAt(e, t + 5);
        return { value: r, description: ''.concat(r, 'px') };
      }
    }
    function ve(e, t, n, r) {
      if (!(8 + 3 * n > r)) {
        for (var i = [], o = 0; o < n; o++) {
          var a = t + 8 + 3 * o;
          i.push([Br.getByteAt(e, a), Br.getByteAt(e, a + 1), Br.getByteAt(e, a + 2)]);
        }
        return { value: i, description: i.length > 1 ? ye(i) + Se(i) : '' };
      }
    }
    function ye(e) {
      var t = { 1: 'Y', 2: 'Cb', 3: 'Cr', 4: 'I', 5: 'Q' };
      return e
        .map(function (e) {
          return t[e[0]];
        })
        .join('');
    }
    function Se(e) {
      var t = {
        17: '4:4:4 (1 1)',
        18: '4:4:0 (1 2)',
        20: '4:4:1 (1 4)',
        33: '4:2:2 (2 1)',
        34: '4:2:0 (2 2)',
        36: '4:2:1 (2 4)',
        65: '4:1:1 (4 1)',
        66: '4:1:0 (4 2)',
      };
      return 0 === e.length || void 0 === e[0][1] || void 0 === t[e[0][1]] ? '' : t[e[0][1]];
    }
    function be(e, t, n) {
      if (!(9 > n)) {
        var r = Br.getByteAt(e, t + 7),
          i = Br.getByteAt(e, t + 7 + 1);
        return { value: 256 * r + i, description: r + '.' + i };
      }
    }
    function Ie(e, t, n) {
      if (!(10 > n)) {
        var r = Br.getByteAt(e, t + 9);
        return { value: r, description: Ce(r) };
      }
    }
    function Ce(e) {
      return 0 === e ? 'None' : 1 === e ? 'inches' : 2 === e ? 'cm' : 'Unknown';
    }
    function Ue(e, t, n) {
      if (!(12 > n)) {
        var r = Br.getShortAt(e, t + 10);
        return { value: r, description: '' + r };
      }
    }
    function Pe(e, t, n) {
      if (!(14 > n)) {
        var r = Br.getShortAt(e, t + 12);
        return { value: r, description: '' + r };
      }
    }
    function Ae(e) {
      var t = p(e);
      return t.length >= 8 ? t.substr(0, 4) + '-' + t.substr(4, 2) + '-' + t.substr(6, 2) : t;
    }
    function Ee(e) {
      var t = p(e),
        n = t;
      return (
        t.length >= 6 &&
          ((n = t.substr(0, 2) + ':' + t.substr(2, 2) + ':' + t.substr(4, 2)),
          11 === t.length && (n += t.substr(6, 1) + t.substr(7, 2) + ':' + t.substr(9, 2))),
        n
      );
    }
    function we(e) {
      var t = p(e);
      return '%G' === t
        ? 'UTF-8'
        : '%5' === t
          ? 'Windows-1252'
          : '%/G' === t
            ? 'UTF-8 Level 1'
            : '%/H' === t
              ? 'UTF-8 Level 2'
              : '%/I' === t
                ? 'UTF-8 Level 3'
                : '/A' === t
                  ? 'ISO-8859-1'
                  : '/B' === t
                    ? 'ISO-8859-2'
                    : '/C' === t
                      ? 'ISO-8859-3'
                      : '/D' === t
                        ? 'ISO-8859-4'
                        : '/@' === t
                          ? 'ISO-8859-5'
                          : '/G' === t
                            ? 'ISO-8859-6'
                            : '/F' === t
                              ? 'ISO-8859-7'
                              : '/H' === t
                                ? 'ISO-8859-8'
                                : 'Unknown';
    }
    function xe(e, t) {
      if (943868237 !== e.getUint32(t, 0)) throw Error('Not an IPTC resource block.');
      var n = e.getUint8(t + 4 + 2),
        r = (n % 2 == 0 ? n + 1 : n) + 1;
      return { headerSize: 6 + r + 4, type: e.getUint16(t + 4), size: e.getUint32(t + 4 + 2 + r) };
    }
    function Te(e) {
      return 1028 === e.type;
    }
    function Oe(e) {
      return e.size % 2 != 0 ? 1 : 0;
    }
    function Me(e, t, n, r) {
      for (var i = {}, o = void 0, a = n + t.size; n < a && n < e.byteLength; ) {
        var u = Fe(e, n, i, o, r),
          c = u.tag,
          f = u.tagSize;
        if (null === c) break;
        (c &&
          ('encoding' in c && (o = c.encoding),
          void 0 === i[c.name] || void 0 === c.repeatable
            ? (i[c.name] = { id: c.id, value: c.value, description: c.description })
            : (i[c.name] instanceof Array ||
                (i[c.name] = [
                  { id: i[c.name].id, value: i[c.name].value, description: i[c.name].description },
                ]),
              i[c.name].push({ id: c.id, value: c.value, description: c.description }))),
          (n += 5 + f));
      }
      return i;
    }
    function Fe(e, t, n, r, i) {
      if (
        (function (e, t) {
          return 28 !== e.getUint8(t);
        })(e, t)
      )
        return { tag: null, tagSize: 0 };
      var o = e.getUint16(t + 1),
        a = e.getUint16(t + 3);
      if (!i && !Kr.iptc[o]) return { tag: void 0, tagSize: a };
      var u = (function (e, t, n) {
          for (var r = [], i = 0; i < n; i++) r.push(e.getUint8(t + i));
          return r;
        })(e, t + 5, a),
        c = { id: o, name: Re(Kr.iptc[o], o, u), value: u, description: ke(Kr.iptc[o], u, n, r) };
      return (
        (function (e) {
          return Kr.iptc[e] && Kr.iptc[e].repeatable;
        })(o) && (c.repeatable = 1),
        (function (e) {
          return Kr.iptc[e] && void 0 !== Kr.iptc[e].encoding_name;
        })(o) && (c.encoding = Kr.iptc[o].encoding_name(u)),
        { tag: c, tagSize: a }
      );
    }
    function Re(e, t, n) {
      return e
        ? (function (e) {
            return 'string' == typeof e;
          })(e)
          ? e
          : (function (e) {
                return 'function' == typeof e.name;
              })(e)
            ? e.name(n)
            : e.name
        : 'undefined-'.concat(t);
    }
    function ke(e, t, n, r) {
      if (
        (function (e) {
          return e && void 0 !== e.description;
        })(e)
      )
        try {
          return e.description(t, n);
        } catch (e) {}
      return (function (e, t) {
        return e && t instanceof Array;
      })(e, t)
        ? qr(r, t)
        : t;
    }
    function De(e, t) {
      (null == t || t > e.length) && (t = e.length);
      for (var n = 0, r = Array(t); n < t; n++) r[n] = e[n];
      return r;
    }
    function Ne(e, t) {
      return Le(t) ? e(t.split('/')) : t;
    }
    function Le(e) {
      return /^-?\d+\/-?\d+$/.test(e);
    }
    function _e(e) {
      var t,
        n =
          (function (e) {
            if (Array.isArray(e)) return e;
          })((t = e.split(','))) ||
          (function (e) {
            var t =
              null == e
                ? null
                : ('undefined' != typeof Symbol && e[Symbol.iterator]) || e['@@iterator'];
            if (null != t) {
              var n,
                r,
                i,
                o,
                a = [],
                u = 1,
                c = 0;
              try {
                for (
                  i = (t = t.call(e)).next;
                  !(u = (n = i.call(t)).done) && (a.push(n.value), 2 !== a.length);
                  u = 1
                );
              } catch (e) {
                ((c = 1), (r = e));
              } finally {
                try {
                  if (!u && null != t.return && ((o = t.return()), Object(o) !== o)) return;
                } finally {
                  if (c) throw r;
                }
              }
              return a;
            }
          })(t) ||
          (function (e) {
            if (e) {
              if ('string' == typeof e) return De(e, 2);
              var t = {}.toString.call(e).slice(8, -1);
              return (
                'Object' === t && e.constructor && (t = e.constructor.name),
                'Map' === t || 'Set' === t
                  ? Array.from(e)
                  : 'Arguments' === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)
                    ? De(e, 2)
                    : void 0
              );
            }
          })(t) ||
          (function () {
            throw new TypeError(
              'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
            );
          })(),
        r = n[0],
        i = n[1];
      if (void 0 !== r && void 0 !== i) {
        var o = parseFloat(r),
          a = parseFloat(i),
          u = i.charAt(i.length - 1);
        if (!Number.isNaN(o) && !Number.isNaN(a)) return '' + (o + a / 60) + u;
      }
      return e;
    }
    function Be(e) {
      return (
        (Be =
          'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  'function' == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? 'symbol'
                  : typeof e;
              }),
        Be(e)
      );
    }
    function Ge(e, t) {
      (null == t || t > e.length) && (t = e.length);
      for (var n = 0, r = Array(t); n < t; n++) r[n] = e[n];
      return r;
    }
    function je(e) {
      var t = 'function' == typeof Map ? new Map() : void 0;
      return (
        (je = function (e) {
          function n() {
            return (function (e, t, n) {
              if (ze()) return Reflect.construct.apply(null, arguments);
              var r = [null];
              r.push.apply(r, t);
              var i = new (e.bind.apply(e, r))();
              return (n && Ve(i, n.prototype), i);
            })(e, arguments, He(this).constructor);
          }
          if (
            null === e ||
            !(function (e) {
              try {
                return -1 !== Function.toString.call(e).indexOf('[native code]');
              } catch (t) {
                return 'function' == typeof e;
              }
            })(e)
          )
            return e;
          if ('function' != typeof e)
            throw new TypeError('Super expression must either be null or a function');
          if (void 0 !== t) {
            if (t.has(e)) return t.get(e);
            t.set(e, n);
          }
          return (
            (n.prototype = Object.create(e.prototype, {
              constructor: { value: n, enumerable: 0, writable: 1, configurable: 1 },
            })),
            Ve(n, e)
          );
        }),
        je(e)
      );
    }
    function ze() {
      try {
        var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
      } catch (e) {}
      return (ze = function () {
        return !!e;
      })();
    }
    function Ve(e, t) {
      return (
        (Ve = Object.setPrototypeOf
          ? Object.setPrototypeOf.bind()
          : function (e, t) {
              return ((e.__proto__ = t), e);
            }),
        Ve(e, t)
      );
    }
    function He(e) {
      return (
        (He = Object.setPrototypeOf
          ? Object.getPrototypeOf.bind()
          : function (e) {
              return e.__proto__ || Object.getPrototypeOf(e);
            }),
        He(e)
      );
    }
    function We(e, t) {
      for (
        var n = t.reduce(function (e, t) {
            return e + t.length;
          }, 0),
          r = new Uint8Array(n),
          i = 0,
          o = 0;
        o < t.length;
        o++
      ) {
        var a = t[o],
          u = e.buffer.slice(a.dataOffset, a.dataOffset + a.length);
        (r.set(new Uint8Array(u), i), (i += a.length));
      }
      return new DataView(r.buffer);
    }
    function Xe(e, t, n) {
      try {
        var i = (function (e, t) {
            var n = (function (e) {
              if (e) return e;
              if ('undefined' != typeof DOMParser) return new DOMParser();
              try {
                var t = require('@xmldom/xmldom');
                return new (0, t.DOMParser)({ onError: t.onErrorStopParsing });
              } catch (e) {
                return;
              }
            })(t);
            if (!n)
              throw (
                console.warn(
                  'Warning: DOMParser is not available. It is needed to be able to parse XMP tags.',
                ),
                Error()
              );
            var i = 'string' == typeof e ? e : r(e, 0, e.byteLength);
            return {
              doc: Je(
                n,
                i
                  .replace(/^.+(<\?xpacket begin)/, '$1')
                  .replace(/(<\?xpacket end=".*"\?>).+$/, '$1'),
              ),
              raw: i,
            };
          })(t, n),
          o = i.doc,
          a = i.raw;
        return ((e._raw = (e._raw || '') + a), c(e, $e(Ke(Ye(o), 1))), 1);
      } catch (e) {
        return 0;
      }
    }
    function Je(e, t) {
      var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
      try {
        var r = e.parseFromString(t, 'application/xml'),
          i = r.getElementsByTagName('parsererror');
        if (i.length > 0) throw new ti(i[0].textContent);
        return r;
      } catch (r) {
        if (
          'ParseError' === r.name &&
          (function (e) {
            for (
              var t = [
                  'prefix is non-null and namespace is null',
                  'prefix not bound to a namespace',
                  'prefix inte bundet till en namnrymd',
                  /Namespace prefix .+ is not defined/,
                ],
                n = 0;
              n < t.length;
              n++
            )
              if (RegExp(t[n]).test(e.message)) return 1;
            return 0;
          })(r) &&
          !n
        )
          return Je(
            e,
            (function (e) {
              var t = e.match(/<([A-Za-z_][A-Za-z0-9._-]*)([^>]*)>/);
              if (!t) return e;
              var n = t[1],
                r = (function (e) {
                  for (
                    var t, n = [], r = /xmlns:([\w-]+)=["'][^"']+["']/g;
                    null !== (t = r.exec(e));

                  )
                    -1 === n.indexOf(t[1]) && n.push(t[1]);
                  return n;
                })(e),
                i = (function (e) {
                  for (
                    var t, n = [], r = /\b([A-Za-z_][A-Za-z0-9._-]*):[A-Za-z_][A-Za-z0-9._-]*\b/g;
                    null !== (t = r.exec(e));

                  ) {
                    var i = t[1];
                    'xmlns' !== i && 'xml' !== i && -1 === n.indexOf(i) && n.push(i);
                  }
                  return n;
                })(e).filter(function (e) {
                  return -1 === r.indexOf(e);
                });
              return 0 === i.length
                ? e
                : (function (e, t, n) {
                    var r = RegExp('<' + t + '([^>]*)>');
                    return e.replace(r, '<' + t + '$1' + n + '>');
                  })(
                    e,
                    n,
                    (function (e) {
                      for (var t = [], n = 0; n < e.length; n++) {
                        var r = e[n],
                          i = Qr[r] || 'http://fallback.namespace/' + r;
                        t.push(' xmlns:' + r + '="' + i + '"');
                      }
                      return t.join('');
                    })(i),
                  );
            })(t),
            1,
          );
        throw r;
      }
    }
    function Ye(e) {
      for (var t = 0; t < e.childNodes.length; t++) {
        if ('x:xmpmeta' === e.childNodes[t].tagName) return Ye(e.childNodes[t]);
        if ('rdf:RDF' === e.childNodes[t].tagName) return e.childNodes[t];
      }
      throw Error();
    }
    function Ke(e) {
      var t,
        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
        r = (function (e) {
          for (var t = [], n = 0; n < e.childNodes.length; n++) t.push(e.childNodes[n]);
          return t;
        })(e);
      return 1 === (t = r).length && '#text' === t[0].nodeName
        ? n
          ? {}
          : (function (e) {
              return e.nodeValue;
            })(r[0])
        : (function (e) {
            var t = {};
            return (
              e.forEach(function (e) {
                if (
                  (function (e) {
                    return e.nodeName && '#text' !== e.nodeName;
                  })(e)
                ) {
                  var n = (function (e) {
                    return { attributes: qe(e), value: Ke(e) };
                  })(e);
                  void 0 !== t[e.nodeName]
                    ? (Array.isArray(t[e.nodeName]) || (t[e.nodeName] = [t[e.nodeName]]),
                      t[e.nodeName].push(n))
                    : (t[e.nodeName] = n);
                }
              }),
              t
            );
          })(r);
    }
    function qe(e) {
      for (var t = {}, n = 0; n < e.attributes.length; n++)
        t[e.attributes[n].nodeName] = decodeURIComponent(escape(e.attributes[n].value));
      return t;
    }
    function $e(e) {
      var t = {};
      if ('string' == typeof e) return e;
      for (var n in e) {
        var r = e[n];
        (Array.isArray(r) || (r = [r]),
          r.forEach(function (e) {
            (c(t, Ze(e.attributes)), 'object' === Be(e.value) && c(t, it(e.value)));
          }));
      }
      return t;
    }
    function Ze(e) {
      var t = {};
      for (var n in e)
        try {
          Qe(n) && (t[tt(n)] = { value: e[n], attributes: {}, description: nt(e[n], n) });
        } catch (e) {}
      return t;
    }
    function Qe(e) {
      return 'rdf:parseType' !== e && !et(e);
    }
    function et(e) {
      return 'xmlns' === e.split(':')[0];
    }
    function tt(e) {
      return /^MicrosoftPhoto(_\d+_)?:Rating$/i.test(e) ? 'RatingPercent' : e.split(':')[1];
    }
    function nt(e) {
      var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;
      if (Array.isArray(e)) {
        var n = (function (e) {
          return e
            .map(function (e) {
              return void 0 !== e.value ? nt(e.value) : nt(e);
            })
            .join(', ');
        })(e);
        return t && 'function' == typeof Zr[t] ? Zr[t](e, n) : n;
      }
      if ('object' === Be(e))
        return (function (e) {
          var t = [];
          for (var n in e) t.push(''.concat(rt(n), ': ').concat(nt(e[n].value)));
          return t.join('; ');
        })(e);
      try {
        return t && 'function' == typeof Zr[t] ? Zr[t](e) : decodeURIComponent(escape(e));
      } catch (t) {
        return e;
      }
    }
    function rt(e) {
      return 'CiAdrCity' === e
        ? 'CreatorCity'
        : 'CiAdrCtry' === e
          ? 'CreatorCountry'
          : 'CiAdrExtadr' === e
            ? 'CreatorAddress'
            : 'CiAdrPcode' === e
              ? 'CreatorPostalCode'
              : 'CiAdrRegion' === e
                ? 'CreatorRegion'
                : 'CiEmailWork' === e
                  ? 'CreatorWorkEmail'
                  : 'CiTelWork' === e
                    ? 'CreatorWorkPhone'
                    : 'CiUrlWork' === e
                      ? 'CreatorWorkUrl'
                      : e;
    }
    function it(e) {
      var t = {};
      for (var n in e)
        try {
          et(n) || (t[tt(n)] = ot(e[n], n));
        } catch (e) {}
      return t;
    }
    function ot(e, t) {
      return (function (e) {
        return Array.isArray(e);
      })(e)
        ? (function (e, t) {
            return mt(e[e.length - 1], t);
          })(e, t)
        : (function (e) {
              return (
                'Resource' === e.attributes['rdf:parseType'] &&
                'string' == typeof e.value &&
                '' === e.value.trim()
              );
            })(e)
          ? { value: '', attributes: {}, description: '' }
          : at(e)
            ? ut(e, t)
            : ft(e)
              ? st(e, t)
              : lt(e)
                ? dt(e, t)
                : (function (e) {
                      return void 0 !== pt(e.value);
                    })(e)
                  ? (function (e, t) {
                      var n = pt(e.value).value['rdf:li'],
                        r = ct(e),
                        i = [];
                      return (
                        void 0 === n ? (n = []) : Array.isArray(n) || (n = [n]),
                        n.forEach(function (e) {
                          i.push(
                            (function (e) {
                              return at(e)
                                ? ut(e)
                                : ft(e)
                                  ? st(e).value
                                  : lt(e)
                                    ? dt(e).value
                                    : mt(e);
                            })(e),
                          );
                        }),
                        { value: i, attributes: r, description: nt(i, t) }
                      );
                    })(e, t)
                  : mt(e, t);
    }
    function at(e) {
      return (
        ('Resource' === e.attributes['rdf:parseType'] && void 0 !== e.value['rdf:value']) ||
        (void 0 !== e.value['rdf:Description'] &&
          void 0 !== e.value['rdf:Description'].value['rdf:value'])
      );
    }
    function ut(e, t) {
      var n = ct(e);
      (void 0 !== e.value['rdf:Description'] && (e = e.value['rdf:Description']),
        c(
          n,
          ct(e),
          (function (e) {
            var t = {};
            for (var n in e.value) 'rdf:value' === n || et(n) || (t[tt(n)] = e.value[n].value);
            return t;
          })(e),
        ));
      var r = (function (e) {
        return gt(e.value['rdf:value']) || e.value['rdf:value'].value;
      })(e);
      return { value: r, attributes: n, description: nt(r, t) };
    }
    function ct(e) {
      var t = {};
      for (var n in e.attributes)
        'rdf:parseType' === n || 'rdf:resource' === n || et(n) || (t[tt(n)] = e.attributes[n]);
      return t;
    }
    function ft(e) {
      return (
        'Resource' === e.attributes['rdf:parseType'] ||
        (void 0 !== e.value['rdf:Description'] &&
          void 0 === e.value['rdf:Description'].value['rdf:value'])
      );
    }
    function st(e, t) {
      var n = { value: {}, attributes: {} };
      return (
        void 0 !== e.value['rdf:Description'] &&
          (c(n.value, Ze(e.value['rdf:Description'].attributes)),
          c(n.attributes, ct(e)),
          (e = e.value['rdf:Description'])),
        c(n.value, it(e.value)),
        (n.description = nt(n.value, t)),
        n
      );
    }
    function lt(e) {
      return (
        0 === Object.keys(e.value).length &&
        void 0 === e.attributes['xml:lang'] &&
        void 0 === e.attributes['rdf:resource']
      );
    }
    function dt(e, t) {
      var n = Ze(e.attributes);
      return { value: n, attributes: {}, description: nt(n, t) };
    }
    function pt(e) {
      return e['rdf:Bag'] || e['rdf:Seq'] || e['rdf:Alt'];
    }
    function mt(e, t) {
      var n = gt(e) || $e(e.value);
      return { value: n, attributes: ct(e), description: nt(n, t) };
    }
    function gt(e) {
      return e.attributes && e.attributes['rdf:resource'];
    }
    function ht(e) {
      return (
        (ht =
          'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  'function' == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? 'symbol'
                  : typeof e;
              }),
        ht(e)
      );
    }
    function vt(e, t, n) {
      return (
        (t = (function (e) {
          var t = (function (e) {
            if ('object' != ht(e) || !e) return e;
            var t = e[Symbol.toPrimitive];
            if (void 0 !== t) {
              var n = t.call(e, 'string');
              if ('object' != ht(n)) return n;
              throw new TypeError('@@toPrimitive must return a primitive value.');
            }
            return e + '';
          })(e);
          return 'symbol' == ht(t) ? t : t + '';
        })(t)) in e
          ? Object.defineProperty(e, t, { value: n, enumerable: 1, configurable: 1, writable: 1 })
          : (e[t] = n),
        e
      );
    }
    function yt(e, t) {
      (null == t || t > e.length) && (t = e.length);
      for (var n = 0, r = Array(t); n < t; n++) r[n] = e[n];
      return r;
    }
    function St(e, t) {
      for (var n = [], r = 0; r < 24; r += 8) n.push(bt(e, t + r));
      return n;
    }
    function bt(e, t) {
      var n = It(e, t, 8);
      return [It(e, t + 4, 8), n];
    }
    function It(e, t, n) {
      var r,
        i = Br.getLongAt(e, t),
        o = i >>> 31 == 0 ? 1 : -1,
        a = (2130706432 & i) >>> (32 - n),
        u = i & parseInt(l('1', 32 - n), 2);
      return (
        o *
        (function (e) {
          return parseInt(e.replace('.', ''), 2) / Math.pow(2, (e.split('.')[1] || '').length);
        })(a.toString(2) + '.' + (l('0', 32 - n - (r = u.toString(2)).length) + r))
      );
    }
    function Ct(e, t) {
      (null == t || t > e.length) && (t = e.length);
      for (var n = 0, r = Array(t); n < t; n++) r[n] = e[n];
      return r;
    }
    function Ut(e, t) {
      var n,
        r =
          (function (e) {
            if (Array.isArray(e)) return e;
          })((n = a(e, t))) ||
          (function (e) {
            var t =
              null == e
                ? null
                : ('undefined' != typeof Symbol && e[Symbol.iterator]) || e['@@iterator'];
            if (null != t) {
              var n,
                r,
                i,
                o,
                a = [],
                u = 1,
                c = 0;
              try {
                for (
                  i = (t = t.call(e)).next;
                  !(u = (n = i.call(t)).done) && (a.push(n.value), 2 !== a.length);
                  u = 1
                );
              } catch (e) {
                ((c = 1), (r = e));
              } finally {
                try {
                  if (!u && null != t.return && ((o = t.return()), Object(o) !== o)) return;
                } finally {
                  if (c) throw r;
                }
              }
              return a;
            }
          })(n) ||
          (function (e) {
            if (e) {
              if ('string' == typeof e) return Ct(e, 2);
              var t = {}.toString.call(e).slice(8, -1);
              return (
                'Object' === t && e.constructor && (t = e.constructor.name),
                'Map' === t || 'Set' === t
                  ? Array.from(e)
                  : 'Arguments' === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)
                    ? Ct(e, 2)
                    : void 0
              );
            }
          })(n) ||
          (function () {
            throw new TypeError(
              'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
            );
          })(),
        i = r[0];
      return { tagName: r[1], tagNameSize: 1 + i + (i % 2 == 0 ? 1 : 0) };
    }
    function Pt(e) {
      switch (e.toLowerCase()) {
        case 'appl':
          return 'Apple';
        case 'adbe':
          return 'Adobe';
        case 'msft':
          return 'Microsoft';
        case 'sunw':
          return 'Sun Microsystems';
        case 'sgi':
          return 'Silicon Graphics';
        case 'tgnt':
          return 'Taligent';
        default:
          return e;
      }
    }
    function At(e, t) {
      return e.length < t + Si;
    }
    function Et(e) {
      var t = e.buffer,
        n = e.getUint32();
      if (e.byteLength !== n) throw Error('ICC profile length not matching');
      if (e.length < di) throw Error('ICC profile too short');
      for (var i = {}, a = Object.keys(si), u = 0; u < a.length; u++) {
        var c = a[u],
          f = si[c],
          s = f.value(e, parseInt(c, 10)),
          l = s;
        (f.description && (l = f.description(s)), (i[f.name] = { value: s, description: l }));
      }
      if (wt(t.slice(36, 40)) !== mi) throw Error('ICC profile: missing signature');
      if (
        (function (e) {
          return e.length < pi + 4;
        })(t)
      )
        return i;
      for (var d = e.getUint32(128), p = 132, m = 0; m < d; m++) {
        if (At(t, p)) return i;
        var g = r(e, p, 4),
          h = e.getUint32(p + 4),
          v = e.getUint32(p + 8);
        if (h > t.length) return i;
        var y = r(e, h, 4);
        if (y === gi) {
          var S = e.getUint32(h + 8);
          if (S > v) return i;
          xt(i, g, wt(t.slice(h + 12, h + S + 11)));
        } else if (y === hi) {
          for (
            var b = e.getUint32(h + 8), I = e.getUint32(h + 12), C = h + 16, U = [], P = 0;
            P < b;
            P++
          ) {
            var A = r(e, C + 0, 2),
              E = r(e, C + 2, 2),
              w = e.getUint32(C + 4),
              x = e.getUint32(C + 8),
              T = o(e, h + x, w);
            (U.push({ languageCode: A, countryCode: E, text: T }), (C += I));
          }
          if (1 === b) xt(i, g, U[0].text);
          else {
            for (var O = {}, M = 0; M < U.length; M++)
              O[''.concat(U[M].languageCode, '-').concat(U[M].countryCode)] = U[M].text;
            xt(i, g, O);
          }
        } else
          y === vi
            ? xt(i, g, wt(t.slice(h + 8, h + v - 7)))
            : y === yi && xt(i, g, wt(t.slice(h + 8, h + 12)));
        p += 12;
      }
      return i;
    }
    function wt(e) {
      return String.fromCharCode.apply(null, new Uint8Array(e));
    }
    function xt(e, t, n) {
      fi[t]
        ? (e[fi[t].name] = { value: n, description: n })
        : (e[t] = { value: n, description: n });
    }
    function Tt(e) {
      return '' + -0.5 * e;
    }
    function Ot(e) {
      return '' + -0.5 * e;
    }
    function Mt(e, t) {
      if (!(t + 0 + 4 > e.byteLength)) {
        var n = Br.getLongAt(e, t);
        return { value: n, description: ''.concat(n, 'px') };
      }
    }
    function Ft(e, t) {
      if (!(t + 4 + 4 > e.byteLength)) {
        var n = Br.getLongAt(e, t + 4);
        return { value: n, description: ''.concat(n, 'px') };
      }
    }
    function Rt(e, t) {
      if (!(t + 8 + 1 > e.byteLength)) {
        var n = Br.getByteAt(e, t + 8);
        return { value: n, description: ''.concat(n) };
      }
    }
    function kt(e, t) {
      if (!(t + 9 + 1 > e.byteLength)) {
        var n = Br.getByteAt(e, t + 9);
        return {
          value: n,
          description:
            {
              0: 'Grayscale',
              2: 'RGB',
              3: 'Palette',
              4: 'Grayscale with Alpha',
              6: 'RGB with Alpha',
            }[n] || 'Unknown',
        };
      }
    }
    function Dt(e, t) {
      if (!(t + 10 + 1 > e.byteLength)) {
        var n = Br.getByteAt(e, t + 10);
        return { value: n, description: 0 === n ? 'Deflate/Inflate' : 'Unknown' };
      }
    }
    function Nt(e, t) {
      if (!(t + 11 + 1 > e.byteLength)) {
        var n = Br.getByteAt(e, t + 11);
        return { value: n, description: 0 === n ? 'Adaptive' : 'Unknown' };
      }
    }
    function Lt(e, t) {
      if (!(t + 12 + 1 > e.byteLength)) {
        var n = Br.getByteAt(e, t + 12);
        return {
          value: n,
          description: { 0: 'Noninterlaced', 1: 'Adam7 Interlace' }[n] || 'Unknown',
        };
      }
    }
    function _t(e) {
      return (
        (_t =
          'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  'function' == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? 'symbol'
                  : typeof e;
              }),
        _t(e)
      );
    }
    function Bt(e, t, n, r, i) {
      for (var o, a = [], u = [], c = [], f = Ei, s = Sn, l = 0; l < n && t + l < e.byteLength; l++)
        if (f !== wi) {
          if (f === Oi) {
            o = new DataView(e.buffer.slice(t + l, t + n));
            break;
          }
          var p = e.getUint8(t + l);
          0 === p
            ? (f = jt(r, f))
            : f === Ei
              ? a.push(p)
              : f === xi
                ? u.push(p)
                : f === Ti && c.push(p);
        } else
          ((s = Gt({ type: r, dataView: e, offset: t + l })),
            r === dr && (l += Mi),
            (f = jt(r, f)));
      if (s !== Sn && !i) return {};
      var m = d(
        o,
        s,
        (function (e) {
          return e === lr || e === pr ? 'latin1' : 'utf-8';
        })(r),
      );
      return m instanceof Promise
        ? m
            .then(function (e) {
              return zt(e, r, u, a);
            })
            .catch(function () {
              return zt('<text using unknown compression>'.split(''), r, u, a);
            })
        : zt(m, r, u, a);
    }
    function Gt(e) {
      var t = e.type,
        n = e.dataView,
        r = e.offset;
      if (t === dr) {
        if (n.getUint8(r) === Fi) return n.getUint8(r + 1);
      } else if (t === pr) return n.getUint8(r);
      return Sn;
    }
    function jt(e, t) {
      return t === Ei && [dr, pr].includes(e)
        ? wi
        : t === wi
          ? e === dr
            ? xi
            : Oi
          : t === xi
            ? Ti
            : Oi;
    }
    function zt(e, t, n, i) {
      var o = (function (e) {
        return e instanceof DataView ? r(e, 0, e.byteLength) : e;
      })(e);
      return { name: Vt(t, n, i), value: o, description: t === dr ? Ht(e) : o };
    }
    function Vt(e, t, n) {
      var r = u(n);
      if (e === lr || 0 === t.length) return r;
      var i = u(t);
      return ''.concat(r, ' (').concat(i, ')');
    }
    function Ht(e) {
      return qr('UTF-8', e);
    }
    function Wt(e, t) {
      return 'raw profile type exif' === e.toLowerCase() && 'exif' === t.substring(1, 5);
    }
    function Xt(e, t) {
      return 'raw profile type iptc' === e.toLowerCase() && 'iptc' === t.substring(1, 5);
    }
    function Jt(e) {
      return (function (e) {
        for (var t = new DataView(new ArrayBuffer(e.length / 2)), n = 0; n < e.length; n += 2)
          t.setUint8(n / 2, parseInt(e.substring(n, n + 2), 16));
        return t;
      })(e.match(/\n(exif|iptc)\n\s*\d+\n([\s\S]*)$/)[2].replace(/\n/g, ''));
    }
    function Yt(e, t, n) {
      if (Zt(e, t, n, 0, 4)) {
        var r = Br.getLongAt(e, t + fr + 0);
        return { value: r, description: '' + r };
      }
    }
    function Kt(e, t, n) {
      if (Zt(e, t, n, 4, 4)) {
        var r = Br.getLongAt(e, t + fr + 4);
        return { value: r, description: '' + r };
      }
    }
    function qt(e, t, n) {
      if (Zt(e, t, n, 8, 1)) {
        var r = Br.getByteAt(e, t + fr + 8);
        return { value: r, description: 1 === r ? 'meters' : 'Unknown' };
      }
    }
    function $t(e, t, n) {
      if (Zt(e, t, n, 0, 7)) {
        var r = Br.getShortAt(e, t + fr),
          i = Br.getByteAt(e, t + fr + 2),
          o = Br.getByteAt(e, t + fr + 3),
          a = Br.getByteAt(e, t + fr + 4),
          u = Br.getByteAt(e, t + fr + 5),
          c = Br.getByteAt(e, t + fr + 6);
        return {
          value: [r, i, o, a, u, c],
          description: ''
            .concat(Qt(r, 4), '-')
            .concat(Qt(i, 2), '-')
            .concat(Qt(o, 2), ' ')
            .concat(Qt(a, 2), ':')
            .concat(Qt(u, 2), ':')
            .concat(Qt(c, 2)),
        };
      }
    }
    function Zt(e, t, n, r, i) {
      return r + i <= n && t + fr + r + i <= e.byteLength;
    }
    function Qt(e, t) {
      return ''.concat('0'.repeat(t - ('' + e).length)).concat(e);
    }
    function en(e, t) {
      var n =
        Br.getByteAt(e, t) + 256 * Br.getByteAt(e, t + 1) + 65536 * Br.getByteAt(e, t + 2) + 1;
      return { value: n, description: n + 'px' };
    }
    function tn(e) {
      if (!(6 > e.byteLength)) {
        var t = r(e, 3, 3);
        return { value: t, description: t };
      }
    }
    function nn(e) {
      if (!(8 > e.byteLength)) {
        var t = e.getUint16(6, 1);
        return { value: t, description: ''.concat(t, 'px') };
      }
    }
    function rn(e) {
      if (!(10 > e.byteLength)) {
        var t = e.getUint16(8, 1);
        return { value: t, description: ''.concat(t, 'px') };
      }
    }
    function on(e) {
      if (!(11 > e.byteLength)) {
        var t = (128 & e.getUint8(10)) >>> 7;
        return { value: t, description: 1 === t ? 'Yes' : 'No' };
      }
    }
    function an(e) {
      if (!(11 > e.byteLength)) {
        var t = 1 + ((112 & e.getUint8(10)) >>> 4);
        return { value: t, description: ''.concat(t, ' ').concat(1 === t ? 'bit' : 'bits') };
      }
    }
    function un(e) {
      if (!(11 > e.byteLength)) {
        var t = 1 + (7 & e.getUint8(10));
        return { value: t, description: ''.concat(t, ' ').concat(1 === t ? 'bit' : 'bits') };
      }
    }
    function cn(e, t, n) {
      return n && e.exif && e.exif[t] ? e.exif[t].value : !n && e[t] ? e[t].value : void 0;
    }
    function fn(e) {
      ((this.name = 'MetadataMissingError'),
        (this.message = e || 'No Exif data'),
        (this.stack = Error().stack));
    }
    function sn(e) {
      var t,
        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      return (function (e) {
        return 'string' == typeof e;
      })(e)
        ? ((n.async = 1),
          (function (e, t) {
            return /^\w+:\/\//.test(e)
              ? 'undefined' != typeof fetch
                ? (function (e) {
                    var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {})
                        .length,
                      n = { method: 'GET' };
                    return (
                      Number.isInteger(t) &&
                        t >= 0 &&
                        (n.headers = { range: 'bytes=0-'.concat(t - 1) }),
                      fetch(e, n).then(function (e) {
                        return e.arrayBuffer();
                      })
                    );
                  })(e, t)
                : (function (e) {
                    var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {})
                      .length;
                    return new Promise(function (n, r) {
                      var i = {};
                      Number.isInteger(t) &&
                        t >= 0 &&
                        (i.headers = { range: 'bytes=0-'.concat(t - 1) });
                      var o = (function (e) {
                        return /^https:\/\//.test(e) ? require('https').get : require('http').get;
                      })(e);
                      o(e, i, function (e) {
                        if (e.statusCode >= 200 && e.statusCode <= 299) {
                          var t = [];
                          (e.on('data', function (e) {
                            return t.push(Buffer.from(e));
                          }),
                            e.on('error', function (e) {
                              return r(e);
                            }),
                            e.on('end', function () {
                              return n(Buffer.concat(t));
                            }));
                        } else
                          (r(
                            'Could not fetch file: '
                              .concat(e.statusCode, ' ')
                              .concat(e.statusMessage),
                          ),
                            e.resume());
                      }).on('error', function (e) {
                        return r(e);
                      });
                    });
                  })(e, t)
              : (function (e) {
                    return /^data:[^;,]*(;base64)?,/.test(e);
                  })(e)
                ? Promise.resolve(
                    (function (e) {
                      var t = e.substring(e.indexOf(',') + 1);
                      if (-1 !== e.indexOf(';base64')) {
                        if ('undefined' != typeof atob)
                          return Uint8Array.from(atob(t), function (e) {
                            return e.charCodeAt(0);
                          }).buffer;
                        if ('undefined' == typeof Buffer) return;
                        return void 0 !== Buffer.from
                          ? Buffer.from(t, 'base64')
                          : new Buffer(t, 'base64');
                      }
                      var n = decodeURIComponent(t);
                      return 'undefined' != typeof Buffer
                        ? void 0 !== Buffer.from
                          ? Buffer.from(n)
                          : new Buffer(n)
                        : Uint8Array.from(n, function (e) {
                            return e.charCodeAt(0);
                          }).buffer;
                    })(e),
                  )
                : (function (e) {
                    var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {})
                      .length;
                    return new Promise(function (n, r) {
                      var i = (function () {
                        try {
                          return require('fs');
                        } catch (e) {
                          return;
                        }
                      })();
                      i.open(e, function (o, a) {
                        o
                          ? r(o)
                          : i.stat(e, function (o, u) {
                              if (o) r(o);
                              else {
                                var c = Math.min(u.size, void 0 !== t ? t : u.size),
                                  f = Buffer.alloc(c),
                                  s = { buffer: f, length: c };
                                i.read(a, s, function (t) {
                                  t
                                    ? r(t)
                                    : i.close(a, function (t) {
                                        (t &&
                                          console.warn('Could not close file '.concat(e, ':'), t),
                                          n(f));
                                      });
                                });
                              }
                            });
                      });
                    });
                  })(e, t);
          })(e, n).then(function (e) {
            return ln(e, n);
          }))
        : (function (e) {
              return 'undefined' != typeof File && e instanceof File;
            })(e)
          ? ((n.async = 1),
            ((t = e),
            new Promise(function (e, n) {
              var r = new FileReader();
              ((r.onload = function (t) {
                return e(t.target.result);
              }),
                (r.onerror = function () {
                  return n(r.error);
                }),
                r.readAsArrayBuffer(t));
            })).then(function (e) {
              return ln(e, n);
            }))
          : ln(e, n);
    }
    function ln(e, t) {
      return (
        (function (e) {
          try {
            return Buffer.isBuffer(e);
          } catch (e) {
            return 0;
          }
        })(e) && (e = new Uint8Array(e).buffer),
        dn(
          (function (e) {
            try {
              return new DataView(e);
            } catch (t) {
              return new yn(e);
            }
          })(e),
          t,
        )
      );
    }
    function dn(e) {
      function t(e) {
        o ? (h.icc = e) : (h = c({}, h, e));
      }
      function n(e) {
        if (o) {
          for (var t = 0, n = ['exif', 'iptc']; t < n.length; t++) {
            var r = n[t],
              i = '__'.concat(r);
            e[i] && ((h[r] = h[r] ? c({}, h.exif, e[i]) : e[i]), delete e[i]);
          }
          ((h.png = h.png ? c({}, h.png, e) : e), (h.pngText = h.pngText ? c({}, h.png, e) : e));
        } else
          (delete (h = c({}, h, e.__exif ? e.__exif : {}, e.__iptc ? e.__iptc : {}, e)).__exif,
            delete h.__iptc);
      }
      var r =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : { expanded: 0, async: 0, includeUnknown: 0, domParser: void 0 },
        i = r.expanded,
        o = void 0 === i ? 0 : i,
        a = r.async,
        f = void 0 === a ? 0 : a,
        s = r.includeUnknown,
        l = void 0 === s ? 0 : s,
        d = r.domParser,
        p = void 0 === d ? void 0 : d,
        m = 0,
        h = {},
        v = [],
        y = Pr.parseAppMarkers(e, f),
        S = y.fileType,
        b = y.fileDataOffset,
        I = y.jfifDataOffset,
        C = y.tiffHeaderOffset,
        U = y.iptcDataOffset,
        P = y.xmpChunks,
        A = y.iccChunks,
        E = y.mpfDataOffset,
        w = y.pngHeaderOffset,
        x = y.pngTextChunks,
        T = y.pngChunkOffsets,
        O = y.vp8xChunkOffset,
        M = y.gifHeaderOffset;
      if (
        bn.USE_JPEG &&
        bn.USE_FILE &&
        (function (e) {
          return void 0 !== e;
        })(b)
      ) {
        m = 1;
        var F = Jr.read(e, b);
        o ? (h.file = F) : (h = c({}, h, F));
      }
      if (
        bn.USE_JPEG &&
        bn.USE_JFIF &&
        (function (e) {
          return void 0 !== e;
        })(I)
      ) {
        m = 1;
        var R = Yr.read(e, I);
        o ? (h.jfif = R) : (h = c({}, h, R));
      }
      if (
        bn.USE_EXIF &&
        (function (e) {
          return void 0 !== e;
        })(C)
      ) {
        m = 1;
        var k = Hr.read(e, C, l),
          D = k.tags,
          N = k.byteOrder;
        if (
          (D.Thumbnail && ((h.Thumbnail = D.Thumbnail), delete D.Thumbnail),
          o
            ? ((h.exif = D),
              (function (e) {
                if (e.exif) {
                  if (e.exif.GPSLatitude && e.exif.GPSLatitudeRef)
                    try {
                      ((e.gps = e.gps || {}),
                        (e.gps.Latitude = g(e.exif.GPSLatitude.value)),
                        'S' === e.exif.GPSLatitudeRef.value.join('') &&
                          (e.gps.Latitude = -e.gps.Latitude));
                    } catch (e) {}
                  if (e.exif.GPSLongitude && e.exif.GPSLongitudeRef)
                    try {
                      ((e.gps = e.gps || {}),
                        (e.gps.Longitude = g(e.exif.GPSLongitude.value)),
                        'W' === e.exif.GPSLongitudeRef.value.join('') &&
                          (e.gps.Longitude = -e.gps.Longitude));
                    } catch (e) {}
                  if (e.exif.GPSAltitude && e.exif.GPSAltitudeRef)
                    try {
                      ((e.gps = e.gps || {}),
                        (e.gps.Altitude =
                          e.exif.GPSAltitude.value[0] / e.exif.GPSAltitude.value[1]),
                        1 === e.exif.GPSAltitudeRef.value && (e.gps.Altitude = -e.gps.Altitude));
                    } catch (e) {}
                }
              })(h))
            : (h = c({}, h, D)),
          bn.USE_TIFF && bn.USE_IPTC && D['IPTC-NAA'] && !pn(U))
        ) {
          var L = $r.read(D['IPTC-NAA'].value, 0, l);
          o ? (h.iptc = L) : (h = c({}, h, L));
        }
        if (bn.USE_TIFF && bn.USE_XMP && D.ApplicationNotes && !mn(P)) {
          var _ = ei.read(u(D.ApplicationNotes.value), void 0, p);
          o ? (h.xmp = _) : (delete _._raw, (h = c({}, h, _)));
        }
        if (bn.USE_PHOTOSHOP && D.ImageSourceData) {
          var B = ii.read(D.PhotoshopSettings.value, l);
          o ? (h.photoshop = B) : (h = c({}, h, B));
        }
        if (bn.USE_TIFF && bn.USE_ICC && D.ICC_Profile && !gn(A)) {
          var G = li.read(D.ICC_Profile.value, [
            { offset: 0, length: D.ICC_Profile.value.length, chunkNumber: 1, chunksTotal: 1 },
          ]);
          o ? (h.icc = G) : (h = c({}, h, G));
        }
        if (bn.USE_MAKER_NOTES && D.MakerNote)
          if (
            (function (e) {
              return (
                e.Make &&
                e.Make.value &&
                Array.isArray(e.Make.value) &&
                'Canon' === e.Make.value[0] &&
                e.MakerNote &&
                e.MakerNote.__offset
              );
            })(D)
          ) {
            var j = bi.read(e, C, D.MakerNote.__offset, N, l);
            o ? (h.makerNotes = j) : (h = c({}, h, j));
          } else if (
            (function (e) {
              return (
                e.MakerNote.value.length > 7 &&
                'PENTAX ' === u(e.MakerNote.value.slice(0, 7)) &&
                e.MakerNote.__offset
              );
            })(D)
          ) {
            var z = Ui.read(e, C, D.MakerNote.__offset, l);
            o ? (h.makerNotes = z) : (h = c({}, h, z));
          }
        D.MakerNote && delete D.MakerNote.__offset;
      }
      if (bn.USE_JPEG && bn.USE_IPTC && pn(U)) {
        m = 1;
        var V = $r.read(e, U, l);
        o ? (h.iptc = V) : (h = c({}, h, V));
      }
      if (bn.USE_XMP && mn(P)) {
        m = 1;
        var H = ei.read(e, P, p);
        o ? (h.xmp = H) : (delete H._raw, (h = c({}, h, H)));
      }
      if ((bn.USE_JPEG || bn.USE_WEBP) && bn.USE_ICC && gn(A)) {
        m = 1;
        var W = li.read(e, A, f);
        W instanceof Promise ? v.push(W.then(t)) : t(W);
      }
      if (
        bn.USE_MPF &&
        (function (e) {
          return void 0 !== e;
        })(E)
      ) {
        m = 1;
        var X = Wr.read(e, E, l);
        o ? (h.mpf = X) : (h = c({}, h, X));
      }
      if (bn.USE_PNG && bn.USE_PNG_FILE && void 0 !== w) {
        m = 1;
        var J = Pi.read(e, w);
        o ? ((h.png = h.png ? c({}, h.png, J) : J), (h.pngFile = J)) : (h = c({}, h, J));
      }
      if (
        bn.USE_PNG &&
        (function (e) {
          return void 0 !== e;
        })(x)
      ) {
        m = 1;
        var Y = Ai.read(e, x, f, l),
          K = Y.readTags,
          q = Y.readTagsPromise;
        (n(K),
          q &&
            v.push(
              q.then(function (e) {
                return e.forEach(n);
              }),
            ));
      }
      if (
        bn.USE_PNG &&
        (function (e) {
          return void 0 !== e;
        })(T)
      ) {
        m = 1;
        var $ = ki.read(e, T);
        o ? (h.png = h.png ? c({}, h.png, $) : $) : (h = c({}, h, $));
      }
      if (
        bn.USE_WEBP &&
        (function (e) {
          return void 0 !== e;
        })(O)
      ) {
        m = 1;
        var Z = Di.read(e, O);
        o ? (h.riff = h.riff ? c({}, h.riff, Z) : Z) : (h = c({}, h, Z));
      }
      if (
        bn.USE_GIF &&
        (function (e) {
          return void 0 !== e;
        })(M)
      ) {
        m = 1;
        var Q = _i.read(e, M);
        o ? (h.gif = h.gif ? c({}, h.gif, Q) : Q) : (h = c({}, h, Q));
      }
      var ee = ji.get(h, o);
      ee && (o ? (h.composite = ee) : (h = c({}, h, ee)));
      var te =
        (bn.USE_JPEG || bn.USE_WEBP) &&
        bn.USE_EXIF &&
        bn.USE_THUMBNAIL &&
        Gi.get(e, h.Thumbnail, C);
      if (
        (te ? ((m = 1), (h.Thumbnail = te)) : delete h.Thumbnail,
        S && (o ? (h.file || (h.file = {}), (h.file.FileType = S)) : (h.FileType = S), (m = 1)),
        !m)
      )
        throw new zi.MetadataMissingError();
      return f
        ? Promise.all(v).then(function () {
            return h;
          })
        : h;
    }
    function pn(e) {
      return void 0 !== e;
    }
    function mn(e) {
      return Array.isArray(e) && e.length > 0;
    }
    function gn(e) {
      return Array.isArray(e) && e.length > 0;
    }
    var hn = {
        d: function (e, t) {
          for (var n in t)
            hn.o(t, n) && !hn.o(e, n) && Object.defineProperty(e, n, { enumerable: 1, get: t[n] });
        },
        o: function (e, t) {
          return Object.prototype.hasOwnProperty.call(e, t);
        },
        r: function (e) {
          ('undefined' != typeof Symbol &&
            Symbol.toStringTag &&
            Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
            Object.defineProperty(e, '__esModule', { value: 1 }));
        },
      },
      vn = {};
    (hn.r(vn),
      hn.d(vn, {
        default: function () {
          return Vi;
        },
        errors: function () {
          return Hi;
        },
        load: function () {
          return sn;
        },
        loadView: function () {
          return dn;
        },
      }));
    var yn = (function () {
        return (
          (n = function t(n) {
            if (
              ((function (e, t) {
                if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function');
              })(this, t),
              (function (t) {
                return (
                  'object' !== e(t) ||
                  void 0 === t.length ||
                  void 0 === t.readUInt8 ||
                  void 0 === t.readUInt16LE ||
                  void 0 === t.readUInt16BE ||
                  void 0 === t.readUInt32LE ||
                  void 0 === t.readUInt32BE ||
                  void 0 === t.readInt32LE ||
                  void 0 === t.readInt32BE
                );
              })(n))
            )
              throw Error('DataView: Passed buffer type is unsupported.');
            ((this.buffer = n), (this.byteLength = this.buffer.length));
          }),
          (r = [
            {
              key: 'getUint8',
              value: function (e) {
                return this.buffer.readUInt8(e);
              },
            },
            {
              key: 'getUint16',
              value: function (e, t) {
                return t ? this.buffer.readUInt16LE(e) : this.buffer.readUInt16BE(e);
              },
            },
            {
              key: 'getUint32',
              value: function (e, t) {
                return t ? this.buffer.readUInt32LE(e) : this.buffer.readUInt32BE(e);
              },
            },
            {
              key: 'getInt32',
              value: function (e, t) {
                return t ? this.buffer.readInt32LE(e) : this.buffer.readInt32BE(e);
              },
            },
          ]) &&
            (function (e, n) {
              for (var r = 0; r < n.length; r++) {
                var i = n[r];
                ((i.enumerable = i.enumerable || 0),
                  (i.configurable = 1),
                  'value' in i && (i.writable = 1),
                  Object.defineProperty(e, t(i.key), i));
              }
            })(n.prototype, r),
          Object.defineProperty(n, 'prototype', { writable: 0 }),
          n
        );
        var n, r;
      })(),
      Sn = void 0,
      bn = {
        USE_FILE: 1,
        USE_JFIF: 1,
        USE_PNG_FILE: 1,
        USE_EXIF: 1,
        USE_IPTC: 1,
        USE_XMP: 1,
        USE_ICC: 1,
        USE_MPF: 1,
        USE_PHOTOSHOP: 1,
        USE_THUMBNAIL: 1,
        USE_TIFF: 1,
        USE_JPEG: 1,
        USE_PNG: 1,
        USE_HEIC: 1,
        USE_AVIF: 1,
        USE_WEBP: 1,
        USE_GIF: 1,
        USE_MAKER_NOTES: 1,
      },
      In = 18761,
      Cn = In,
      Un = function (e, t) {
        if (e.getUint16(t) === In) return In;
        if (19789 === e.getUint16(t)) return 19789;
        throw Error('Illegal byte order value. Faulty image.');
      },
      Pn = 2,
      An = 65496,
      En = 2,
      wn = 4,
      xn = 2,
      Tn = 2,
      On = 10,
      Mn = 18,
      Fn = 33,
      Rn = 79,
      kn = 18,
      Dn = 8,
      Nn = 'ICC_PROFILE\0',
      Ln = wn + Nn.length,
      _n = Ln + 1,
      Bn = 'MPF\0',
      Gn = 65472,
      jn = 65474,
      zn = 65476,
      Vn = 65499,
      Hn = 65501,
      Wn = 65498,
      Xn = 65504,
      Jn = 65505,
      Yn = 65506,
      Kn = 65517,
      qn = 65519,
      $n = 65534,
      Zn = 65535,
      Qn = 'JFIF',
      er = 'Exif',
      tr = 'http://ns.adobe.com/xap/1.0/\0',
      nr = 'http://ns.adobe.com/xmp/extension/\0',
      rr = 'Photoshop 3.0',
      ir = 'PNG\r\n\n',
      or = 4,
      ar = 4,
      ur = 0,
      cr = or,
      fr = or + ar,
      sr = 'XML:com.adobe.xmp\0',
      lr = 'tEXt',
      dr = 'iTXt',
      pr = 'zTXt',
      mr = 'pHYs',
      gr = 'tIME',
      hr = 'eXIf',
      vr = 'iCCP',
      yr = 1165519206,
      Sr = 1835625829,
      br = 6,
      Ir = ['GIF87a', 'GIF89a'],
      Cr = 0,
      Ur = '<?xpacket begin',
      Pr = {
        parseAppMarkers: function (e, t) {
          if (
            bn.USE_TIFF &&
            (function (e) {
              return (
                !!e &&
                e.byteLength >= 4 &&
                (function (e) {
                  var t = e.getUint16(0) === Cn;
                  return 42 === e.getUint16(2, t);
                })(e)
              );
            })(e)
          )
            return X(bn.USE_EXIF ? { hasAppMarkers: 1, tiffHeaderOffset: 0 } : {}, 'tiff', 'TIFF');
          if (
            bn.USE_JPEG &&
            (function (e) {
              return !!e && e.byteLength >= Pn && e.getUint16(0) === An;
            })(e)
          )
            return X(
              (function (e) {
                for (var t, n, r, i, o, a, u, c, f, s = En; s + wn + 5 <= e.byteLength; ) {
                  if (bn.USE_FILE && h(e, s)) ((t = e.getUint16(s + xn)), (n = s + xn));
                  else if (bn.USE_FILE && v(e, s)) ((t = e.getUint16(s + xn)), (r = s + xn));
                  else if (bn.USE_JFIF && b(e, s)) ((t = e.getUint16(s + xn)), (i = s + Tn));
                  else if (bn.USE_EXIF && I(e, s)) ((t = e.getUint16(s + xn)), (o = s + On));
                  else if (bn.USE_XMP && C(e, s))
                    (u || (u = []), (t = e.getUint16(s + xn)), u.push(P(s, t)));
                  else if (bn.USE_XMP && U(e, s))
                    (u || (u = []), (t = e.getUint16(s + xn)), u.push(A(s, t)));
                  else if (bn.USE_IPTC && E(e, s)) ((t = e.getUint16(s + xn)), (a = s + Mn));
                  else if (bn.USE_ICC && y(e, s)) {
                    t = e.getUint16(s + xn);
                    var l = s + kn,
                      d = t - (kn - xn),
                      p = e.getUint8(s + Ln),
                      m = e.getUint8(s + _n);
                    (c || (c = []),
                      c.push({ offset: l, length: d, chunkNumber: p, chunksTotal: m }));
                  } else if (bn.USE_MPF && S(e, s)) ((t = e.getUint16(s + xn)), (f = s + Dn));
                  else {
                    if (!w(e, s)) {
                      if (x(e, s)) {
                        s++;
                        continue;
                      }
                      break;
                    }
                    t = e.getUint16(s + xn);
                  }
                  s += xn + t;
                }
                return {
                  hasAppMarkers: s > En,
                  fileDataOffset: n || r,
                  jfifDataOffset: i,
                  tiffHeaderOffset: o,
                  iptcDataOffset: a,
                  xmpChunks: u,
                  iccChunks: c,
                  mpfDataOffset: f,
                };
              })(e),
              'jpeg',
              'JPEG',
            );
          if (
            bn.USE_PNG &&
            (function (e) {
              return !!e && r(e, 0, ir.length) === ir;
            })(e)
          )
            return X(
              (function (e, t) {
                for (var n = { hasAppMarkers: 0 }, i = ir.length; i + or + ar <= e.byteLength; ) {
                  if (bn.USE_PNG_FILE && T(e, i))
                    ((n.hasAppMarkers = 1), (n.pngHeaderOffset = i + fr));
                  else if (bn.USE_XMP && O(e, i)) {
                    var o = D(e, i);
                    void 0 !== o &&
                      ((n.hasAppMarkers = 1),
                      (n.xmpChunks = [
                        { dataOffset: o, length: e.getUint32(i + ur) - (o - (i + fr)) },
                      ]));
                  } else if (M(e, i, t)) {
                    n.hasAppMarkers = 1;
                    var a = r(e, i + cr, ar);
                    (n.pngTextChunks || (n.pngTextChunks = []),
                      n.pngTextChunks.push({
                        length: e.getUint32(i + ur),
                        type: a,
                        offset: i + fr,
                      }));
                  } else if (F(e, i)) ((n.hasAppMarkers = 1), (n.tiffHeaderOffset = i + fr));
                  else if (bn.USE_ICC && t && R(e, i)) {
                    n.hasAppMarkers = 1;
                    var u = e.getUint32(i + ur),
                      c = i + fr,
                      f = N(e, c),
                      s = f.profileName,
                      l = f.compressionMethod,
                      d = f.compressedProfileOffset;
                    (n.iccChunks || (n.iccChunks = []),
                      n.iccChunks.push({
                        offset: d,
                        length: u - (d - c),
                        chunkNumber: 1,
                        chunksTotal: 1,
                        profileName: s,
                        compressionMethod: l,
                      }));
                  } else
                    k(e, i) &&
                      ((n.hasAppMarkers = 1),
                      n.pngChunkOffsets || (n.pngChunkOffsets = []),
                      n.pngChunkOffsets.push(i + ur));
                  i += e.getUint32(i + ur) + or + ar + 4;
                }
                return n;
              })(e, t),
              'png',
              'PNG',
            );
          if (
            bn.USE_HEIC &&
            (function (e) {
              if (!e) return 0;
              try {
                var t = j(e, 0);
                return (
                  t &&
                  -1 !==
                    [
                      'heic',
                      'heix',
                      'hevc',
                      'hevx',
                      'heim',
                      'heis',
                      'hevm',
                      'hevs',
                      'mif1',
                    ].indexOf(t.majorBrand)
                );
              } catch (e) {
                return 0;
              }
            })(e)
          )
            return X(
              (function (e) {
                return z(e);
              })(e),
              'heic',
              'HEIC',
            );
          if (
            bn.USE_AVIF &&
            (function (e) {
              if (!e) return 0;
              try {
                var t = j(e, 0);
                return t && 'avif' === t.majorBrand;
              } catch (e) {
                return 0;
              }
            })(e)
          )
            return X(
              (function (e) {
                return z(e);
              })(e),
              'avif',
              'AVIF',
            );
          if (
            bn.USE_WEBP &&
            (function (e) {
              return !!e && 'RIFF' === r(e, 0, 4) && 'WEBP' === r(e, 8, 4);
            })(e)
          )
            return X(
              (function (e) {
                for (var t, n, i, o, a = 12, u = 0; a + 8 < e.byteLength; ) {
                  var c = r(e, a, 4),
                    f = e.getUint32(a + 4, 1);
                  (bn.USE_EXIF && 'EXIF' === c
                    ? ((u = 1), (t = 'Exif\0\0' === r(e, a + 8, 6) ? a + 8 + 6 : a + 8))
                    : bn.USE_XMP && 'XMP ' === c
                      ? ((u = 1), (n = [{ dataOffset: a + 8, length: f }]))
                      : bn.USE_ICC && 'ICCP' === c
                        ? ((u = 1),
                          (i = [{ offset: a + 8, length: f, chunkNumber: 1, chunksTotal: 1 }]))
                        : 'VP8X' === c && ((u = 1), (o = a + 8)),
                    (a += 8 + (f % 2 == 0 ? f : f + 1)));
                }
                return {
                  hasAppMarkers: u,
                  tiffHeaderOffset: t,
                  xmpChunks: n,
                  iccChunks: i,
                  vp8xChunkOffset: o,
                };
              })(e),
              'webp',
              'WebP',
            );
          if (
            bn.USE_GIF &&
            (function (e) {
              return !!e && Ir.includes(r(e, 0, br));
            })(e)
          )
            return X({ gifHeaderOffset: 0 }, 'gif', 'GIF');
          if (
            bn.USE_XMP &&
            (function (e) {
              return !!e && r(e, Cr, Ur.length) === Ur;
            })(e)
          )
            return X(
              (function (e) {
                var t = [];
                return (t.push({ dataOffset: Cr, length: e.byteLength }), { xmpChunks: t });
              })(e),
              'xml',
              'XML',
            );
          throw Error('Invalid image format');
        },
      },
      Ar = {
        ApertureValue: function (e) {
          return Math.pow(Math.sqrt(2), e[0] / e[1]).toFixed(2);
        },
        ColorSpace: function (e) {
          return 1 === e ? 'sRGB' : 65535 === e ? 'Uncalibrated' : 'Unknown';
        },
        ComponentsConfiguration: function (e) {
          return e
            .map(function (e) {
              return 49 === e
                ? 'Y'
                : 50 === e
                  ? 'Cb'
                  : 51 === e
                    ? 'Cr'
                    : 52 === e
                      ? 'R'
                      : 53 === e
                        ? 'G'
                        : 54 === e
                          ? 'B'
                          : void 0;
            })
            .join('');
        },
        Contrast: function (e) {
          return 0 === e ? 'Normal' : 1 === e ? 'Soft' : 2 === e ? 'Hard' : 'Unknown';
        },
        CustomRendered: function (e) {
          return 0 === e ? 'Normal process' : 1 === e ? 'Custom process' : 'Unknown';
        },
        ExposureMode: function (e) {
          return 0 === e
            ? 'Auto exposure'
            : 1 === e
              ? 'Manual exposure'
              : 2 === e
                ? 'Auto bracket'
                : 'Unknown';
        },
        ExposureProgram: function (e) {
          return 0 === e
            ? 'Undefined'
            : 1 === e
              ? 'Manual'
              : 2 === e
                ? 'Normal program'
                : 3 === e
                  ? 'Aperture priority'
                  : 4 === e
                    ? 'Shutter priority'
                    : 5 === e
                      ? 'Creative program'
                      : 6 === e
                        ? 'Action program'
                        : 7 === e
                          ? 'Portrait mode'
                          : 8 === e
                            ? 'Landscape mode'
                            : 9 === e
                              ? 'Bulb'
                              : 'Unknown';
        },
        ExposureTime: function (e) {
          if (e[0] / e[1] > 0.25) {
            var t = e[0] / e[1];
            return Number.isInteger(t) ? '' + t : t.toFixed(1);
          }
          return 0 !== e[0] ? '1/'.concat(Math.round(e[1] / e[0])) : '0/'.concat(e[1]);
        },
        FNumber: function (e) {
          return 'f/'.concat(Number(e[0] / e[1]).toFixed(1));
        },
        FocalLength: function (e) {
          return e[0] / e[1] + ' mm';
        },
        FocalPlaneResolutionUnit: function (e) {
          return 2 === e ? 'inches' : 3 === e ? 'centimeters' : 'Unknown';
        },
        LightSource: function (e) {
          return 1 === e
            ? 'Daylight'
            : 2 === e
              ? 'Fluorescent'
              : 3 === e
                ? 'Tungsten (incandescent light)'
                : 4 === e
                  ? 'Flash'
                  : 9 === e
                    ? 'Fine weather'
                    : 10 === e
                      ? 'Cloudy weather'
                      : 11 === e
                        ? 'Shade'
                        : 12 === e
                          ? 'Daylight fluorescent (D 5700 – 7100K)'
                          : 13 === e
                            ? 'Day white fluorescent (N 4600 – 5400K)'
                            : 14 === e
                              ? 'Cool white fluorescent (W 3900 – 4500K)'
                              : 15 === e
                                ? 'White fluorescent (WW 3200 – 3700K)'
                                : 17 === e
                                  ? 'Standard light A'
                                  : 18 === e
                                    ? 'Standard light B'
                                    : 19 === e
                                      ? 'Standard light C'
                                      : 20 === e
                                        ? 'D55'
                                        : 21 === e
                                          ? 'D65'
                                          : 22 === e
                                            ? 'D75'
                                            : 23 === e
                                              ? 'D50'
                                              : 24 === e
                                                ? 'ISO studio tungsten'
                                                : 255 === e
                                                  ? 'Other light source'
                                                  : 'Unknown';
        },
        MeteringMode: function (e) {
          return 1 === e
            ? 'Average'
            : 2 === e
              ? 'CenterWeightedAverage'
              : 3 === e
                ? 'Spot'
                : 4 === e
                  ? 'MultiSpot'
                  : 5 === e
                    ? 'Pattern'
                    : 6 === e
                      ? 'Partial'
                      : 255 === e
                        ? 'Other'
                        : 'Unknown';
        },
        ResolutionUnit: function (e) {
          return 2 === e ? 'inches' : 3 === e ? 'centimeters' : 'Unknown';
        },
        Saturation: function (e) {
          return 0 === e
            ? 'Normal'
            : 1 === e
              ? 'Low saturation'
              : 2 === e
                ? 'High saturation'
                : 'Unknown';
        },
        SceneCaptureType: function (e) {
          return 0 === e
            ? 'Standard'
            : 1 === e
              ? 'Landscape'
              : 2 === e
                ? 'Portrait'
                : 3 === e
                  ? 'Night scene'
                  : 'Unknown';
        },
        Sharpness: function (e) {
          return 0 === e ? 'Normal' : 1 === e ? 'Soft' : 2 === e ? 'Hard' : 'Unknown';
        },
        ShutterSpeedValue: function (e) {
          var t = Math.pow(2, e[0] / e[1]);
          return t <= 1 ? ''.concat(Math.round(1 / t)) : '1/'.concat(Math.round(t));
        },
        WhiteBalance: function (e) {
          return 0 === e ? 'Auto white balance' : 1 === e ? 'Manual white balance' : 'Unknown';
        },
        XResolution: function (e) {
          return '' + Math.round(e[0] / e[1]);
        },
        YResolution: function (e) {
          return '' + Math.round(e[0] / e[1]);
        },
      },
      Er = {
        11: 'ProcessingSoftware',
        254: {
          name: 'SubfileType',
          description: function (e) {
            return (
              {
                0: 'Full-resolution image',
                1: 'Reduced-resolution image',
                2: 'Single page of multi-page image',
                3: 'Single page of multi-page reduced-resolution image',
                4: 'Transparency mask',
                5: 'Transparency mask of reduced-resolution image',
                6: 'Transparency mask of multi-page image',
                7: 'Transparency mask of reduced-resolution multi-page image',
                65537: 'Alternate reduced-resolution image',
                4294967295: 'Invalid',
              }[e] || 'Unknown'
            );
          },
        },
        255: {
          name: 'OldSubfileType',
          description: function (e) {
            return (
              {
                0: 'Full-resolution image',
                1: 'Reduced-resolution image',
                2: 'Single page of multi-page image',
              }[e] || 'Unknown'
            );
          },
        },
        256: 'ImageWidth',
        257: 'ImageLength',
        258: 'BitsPerSample',
        259: 'Compression',
        262: 'PhotometricInterpretation',
        263: {
          name: 'Thresholding',
          description: function (e) {
            return (
              {
                1: 'No dithering or halftoning',
                2: 'Ordered dither or halfton',
                3: 'Randomized dither',
              }[e] || 'Unknown'
            );
          },
        },
        264: 'CellWidth',
        265: 'CellLength',
        266: {
          name: 'FillOrder',
          description: function (e) {
            return { 1: 'Normal', 2: 'Reversed' }[e] || 'Unknown';
          },
        },
        269: 'DocumentName',
        270: 'ImageDescription',
        271: 'Make',
        272: 'Model',
        273: 'StripOffsets',
        274: {
          name: 'Orientation',
          description: function (e) {
            return 1 === e
              ? 'top-left'
              : 2 === e
                ? 'top-right'
                : 3 === e
                  ? 'bottom-right'
                  : 4 === e
                    ? 'bottom-left'
                    : 5 === e
                      ? 'left-top'
                      : 6 === e
                        ? 'right-top'
                        : 7 === e
                          ? 'right-bottom'
                          : 8 === e
                            ? 'left-bottom'
                            : 'Undefined';
          },
        },
        277: 'SamplesPerPixel',
        278: 'RowsPerStrip',
        279: 'StripByteCounts',
        280: 'MinSampleValue',
        281: 'MaxSampleValue',
        282: { name: 'XResolution', description: Ar.XResolution },
        283: { name: 'YResolution', description: Ar.YResolution },
        284: 'PlanarConfiguration',
        285: 'PageName',
        286: {
          name: 'XPosition',
          description: function (e) {
            return '' + Math.round(e[0] / e[1]);
          },
        },
        287: {
          name: 'YPosition',
          description: function (e) {
            return '' + Math.round(e[0] / e[1]);
          },
        },
        290: {
          name: 'GrayResponseUnit',
          description: function (e) {
            return { 1: '0.1', 2: '0.001', 3: '0.0001', 4: '1e-05', 5: '1e-06' }[e] || 'Unknown';
          },
        },
        296: { name: 'ResolutionUnit', description: Ar.ResolutionUnit },
        297: 'PageNumber',
        301: 'TransferFunction',
        305: 'Software',
        306: 'DateTime',
        315: 'Artist',
        316: 'HostComputer',
        317: 'Predictor',
        318: {
          name: 'WhitePoint',
          description: function (e) {
            return e
              .map(function (e) {
                return ''.concat(e[0], '/').concat(e[1]);
              })
              .join(', ');
          },
        },
        319: {
          name: 'PrimaryChromaticities',
          description: function (e) {
            return e
              .map(function (e) {
                return ''.concat(e[0], '/').concat(e[1]);
              })
              .join(', ');
          },
        },
        321: 'HalftoneHints',
        322: 'TileWidth',
        323: 'TileLength',
        330: 'A100DataOffset',
        332: {
          name: 'InkSet',
          description: function (e) {
            return { 1: 'CMYK', 2: 'Not CMYK' }[e] || 'Unknown';
          },
        },
        337: 'TargetPrinter',
        338: {
          name: 'ExtraSamples',
          description: function (e) {
            return (
              { 0: 'Unspecified', 1: 'Associated Alpha', 2: 'Unassociated Alpha' }[e] || 'Unknown'
            );
          },
        },
        339: {
          name: 'SampleFormat',
          description: function (e) {
            var t = {
              1: 'Unsigned',
              2: 'Signed',
              3: 'Float',
              4: 'Undefined',
              5: 'Complex int',
              6: 'Complex float',
            };
            return Array.isArray(e)
              ? e
                  .map(function (e) {
                    return t[e] || 'Unknown';
                  })
                  .join(', ')
              : 'Unknown';
          },
        },
        513: 'JPEGInterchangeFormat',
        514: 'JPEGInterchangeFormatLength',
        529: {
          name: 'YCbCrCoefficients',
          description: function (e) {
            return e
              .map(function (e) {
                return '' + e[0] / e[1];
              })
              .join('/');
          },
        },
        530: 'YCbCrSubSampling',
        531: {
          name: 'YCbCrPositioning',
          description: function (e) {
            return 1 === e ? 'centered' : 2 === e ? 'co-sited' : 'undefined ' + e;
          },
        },
        532: {
          name: 'ReferenceBlackWhite',
          description: function (e) {
            return e
              .map(function (e) {
                return '' + e[0] / e[1];
              })
              .join(', ');
          },
        },
        700: 'ApplicationNotes',
        18246: 'Rating',
        18249: 'RatingPercent',
        33432: {
          name: 'Copyright',
          description: function (e) {
            return e.join('; ');
          },
        },
        33550: 'PixelScale',
        33723: 'IPTC-NAA',
        33920: 'IntergraphMatrix',
        33922: 'ModelTiePoint',
        34118: 'SEMInfo',
        34264: 'ModelTransform',
        34377: 'PhotoshopSettings',
        34665: 'Exif IFD Pointer',
        34675: 'ICC_Profile',
        34735: 'GeoTiffDirectory',
        34736: 'GeoTiffDoubleParams',
        34737: 'GeoTiffAsciiParams',
        34853: 'GPS Info IFD Pointer',
        40091: { name: 'XPTitle', description: J },
        40092: { name: 'XPComment', description: J },
        40093: { name: 'XPAuthor', description: J },
        40094: { name: 'XPKeywords', description: J },
        40095: { name: 'XPSubject', description: J },
        42112: 'GDALMetadata',
        42113: 'GDALNoData',
        50341: 'PrintIM',
        50707: 'DNGBackwardVersion',
        50708: 'UniqueCameraModel',
        50709: 'LocalizedCameraModel',
        50721: 'ColorMatrix1',
        50722: 'ColorMatrix2',
        50723: 'CameraCalibration1',
        50724: 'CameraCalibration2',
        50725: 'ReductionMatrix1',
        50726: 'ReductionMatrix2',
        50727: 'AnalogBalance',
        50728: 'AsShotNeutral',
        50729: 'AsShotWhiteXY',
        50730: 'BaselineExposure',
        50731: 'BaselineNoise',
        50732: 'BaselineSharpness',
        50734: 'LinearResponseLimit',
        50735: 'CameraSerialNumber',
        50736: 'DNGLensInfo',
        50739: 'ShadowScale',
        50741: {
          name: 'MakerNoteSafety',
          description: function (e) {
            return { 0: 'Unsafe', 1: 'Safe' }[e] || 'Unknown';
          },
        },
        50778: { name: 'CalibrationIlluminant1', description: Ar.LightSource },
        50779: { name: 'CalibrationIlluminant2', description: Ar.LightSource },
        50781: 'RawDataUniqueID',
        50827: 'OriginalRawFileName',
        50828: 'OriginalRawFileData',
        50831: 'AsShotICCProfile',
        50832: 'AsShotPreProfileMatrix',
        50833: 'CurrentICCProfile',
        50834: 'CurrentPreProfileMatrix',
        50879: 'ColorimetricReference',
        50885: 'SRawType',
        50898: 'PanasonicTitle',
        50899: 'PanasonicTitle2',
        50931: 'CameraCalibrationSig',
        50932: 'ProfileCalibrationSig',
        50933: 'ProfileIFD',
        50934: 'AsShotProfileName',
        50936: 'ProfileName',
        50937: 'ProfileHueSatMapDims',
        50938: 'ProfileHueSatMapData1',
        50939: 'ProfileHueSatMapData2',
        50940: 'ProfileToneCurve',
        50941: {
          name: 'ProfileEmbedPolicy',
          description: function (e) {
            return (
              { 0: 'Allow Copying', 1: 'Embed if Used', 2: 'Never Embed', 3: 'No Restrictions' }[
                e
              ] || 'Unknown'
            );
          },
        },
        50942: 'ProfileCopyright',
        50964: 'ForwardMatrix1',
        50965: 'ForwardMatrix2',
        50966: 'PreviewApplicationName',
        50967: 'PreviewApplicationVersion',
        50968: 'PreviewSettingsName',
        50969: 'PreviewSettingsDigest',
        50970: {
          name: 'PreviewColorSpace',
          description: function (e) {
            return (
              { 1: 'Gray Gamma 2.2', 2: 'sRGB', 3: 'Adobe RGB', 4: 'ProPhoto RGB' }[e] || 'Unknown'
            );
          },
        },
        50971: 'PreviewDateTime',
        50972: 'RawImageDigest',
        50973: 'OriginalRawFileDigest',
        50981: 'ProfileLookTableDims',
        50982: 'ProfileLookTableData',
        51043: 'TimeCodes',
        51044: 'FrameRate',
        51058: 'TStop',
        51081: 'ReelName',
        51089: 'OriginalDefaultFinalSize',
        51090: 'OriginalBestQualitySize',
        51091: 'OriginalDefaultCropSize',
        51105: 'CameraLabel',
        51107: {
          name: 'ProfileHueSatMapEncoding',
          description: function (e) {
            return { 0: 'Linear', 1: 'sRGB' }[e] || 'Unknown';
          },
        },
        51108: {
          name: 'ProfileLookTableEncoding',
          description: function (e) {
            return { 0: 'Linear', 1: 'sRGB' }[e] || 'Unknown';
          },
        },
        51109: 'BaselineExposureOffset',
        51110: {
          name: 'DefaultBlackRender',
          description: function (e) {
            return { 0: 'Auto', 1: 'None' }[e] || 'Unknown';
          },
        },
        51111: 'NewRawImageDigest',
        51112: 'RawToPreviewGain',
      },
      wr = {
        0: {
          name: 'GPSVersionID',
          description: function (e) {
            return 2 === e[0] && 2 === e[1] && 0 === e[2] && 0 === e[3] ? 'Version 2.2' : 'Unknown';
          },
        },
        1: {
          name: 'GPSLatitudeRef',
          description: function (e) {
            var t = e.join('');
            return 'N' === t ? 'North latitude' : 'S' === t ? 'South latitude' : 'Unknown';
          },
        },
        2: { name: 'GPSLatitude', description: g },
        3: {
          name: 'GPSLongitudeRef',
          description: function (e) {
            var t = e.join('');
            return 'E' === t ? 'East longitude' : 'W' === t ? 'West longitude' : 'Unknown';
          },
        },
        4: { name: 'GPSLongitude', description: g },
        5: {
          name: 'GPSAltitudeRef',
          description: function (e) {
            return 0 === e
              ? 'Sea level'
              : 1 === e
                ? 'Sea level reference (negative value)'
                : 'Unknown';
          },
        },
        6: {
          name: 'GPSAltitude',
          description: function (e) {
            return e[0] / e[1] + ' m';
          },
        },
        7: {
          name: 'GPSTimeStamp',
          description: function (e) {
            return e
              .map(function (e) {
                var t,
                  n =
                    (function (e) {
                      if (Array.isArray(e)) return e;
                    })((t = e)) ||
                    (function (e) {
                      var t =
                        null == e
                          ? null
                          : ('undefined' != typeof Symbol && e[Symbol.iterator]) || e['@@iterator'];
                      if (null != t) {
                        var n,
                          r,
                          i,
                          o,
                          a = [],
                          u = 1,
                          c = 0;
                        try {
                          for (
                            i = (t = t.call(e)).next;
                            !(u = (n = i.call(t)).done) && (a.push(n.value), 2 !== a.length);
                            u = 1
                          );
                        } catch (e) {
                          ((c = 1), (r = e));
                        } finally {
                          try {
                            if (!u && null != t.return && ((o = t.return()), Object(o) !== o))
                              return;
                          } finally {
                            if (c) throw r;
                          }
                        }
                        return a;
                      }
                    })(t) ||
                    (function (e) {
                      if (e) {
                        if ('string' == typeof e) return K(e, 2);
                        var t = {}.toString.call(e).slice(8, -1);
                        return (
                          'Object' === t && e.constructor && (t = e.constructor.name),
                          'Map' === t || 'Set' === t
                            ? Array.from(e)
                            : 'Arguments' === t ||
                                /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)
                              ? K(e, 2)
                              : void 0
                        );
                      }
                    })(t) ||
                    (function () {
                      throw new TypeError(
                        'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
                      );
                    })(),
                  r = n[0] / n[1];
                return /^\d(\.|$)/.test(''.concat(r)) ? '0'.concat(r) : r;
              })
              .join(':');
          },
        },
        8: 'GPSSatellites',
        9: {
          name: 'GPSStatus',
          description: function (e) {
            var t = e.join('');
            return 'A' === t
              ? 'Measurement in progress'
              : 'V' === t
                ? 'Measurement Interoperability'
                : 'Unknown';
          },
        },
        10: {
          name: 'GPSMeasureMode',
          description: function (e) {
            var t = e.join('');
            return '2' === t
              ? '2-dimensional measurement'
              : '3' === t
                ? '3-dimensional measurement'
                : 'Unknown';
          },
        },
        11: 'GPSDOP',
        12: {
          name: 'GPSSpeedRef',
          description: function (e) {
            var t = e.join('');
            return 'K' === t
              ? 'Kilometers per hour'
              : 'M' === t
                ? 'Miles per hour'
                : 'N' === t
                  ? 'Knots'
                  : 'Unknown';
          },
        },
        13: 'GPSSpeed',
        14: {
          name: 'GPSTrackRef',
          description: function (e) {
            var t = e.join('');
            return 'T' === t ? 'True direction' : 'M' === t ? 'Magnetic direction' : 'Unknown';
          },
        },
        15: 'GPSTrack',
        16: {
          name: 'GPSImgDirectionRef',
          description: function (e) {
            var t = e.join('');
            return 'T' === t ? 'True direction' : 'M' === t ? 'Magnetic direction' : 'Unknown';
          },
        },
        17: 'GPSImgDirection',
        18: 'GPSMapDatum',
        19: {
          name: 'GPSDestLatitudeRef',
          description: function (e) {
            var t = e.join('');
            return 'N' === t ? 'North latitude' : 'S' === t ? 'South latitude' : 'Unknown';
          },
        },
        20: {
          name: 'GPSDestLatitude',
          description: function (e) {
            return e[0][0] / e[0][1] + e[1][0] / e[1][1] / 60 + e[2][0] / e[2][1] / 3600;
          },
        },
        21: {
          name: 'GPSDestLongitudeRef',
          description: function (e) {
            var t = e.join('');
            return 'E' === t ? 'East longitude' : 'W' === t ? 'West longitude' : 'Unknown';
          },
        },
        22: {
          name: 'GPSDestLongitude',
          description: function (e) {
            return e[0][0] / e[0][1] + e[1][0] / e[1][1] / 60 + e[2][0] / e[2][1] / 3600;
          },
        },
        23: {
          name: 'GPSDestBearingRef',
          description: function (e) {
            var t = e.join('');
            return 'T' === t ? 'True direction' : 'M' === t ? 'Magnetic direction' : 'Unknown';
          },
        },
        24: 'GPSDestBearing',
        25: {
          name: 'GPSDestDistanceRef',
          description: function (e) {
            var t = e.join('');
            return 'K' === t ? 'Kilometers' : 'M' === t ? 'Miles' : 'N' === t ? 'Knots' : 'Unknown';
          },
        },
        26: 'GPSDestDistance',
        27: { name: 'GPSProcessingMethod', description: m },
        28: { name: 'GPSAreaInformation', description: m },
        29: 'GPSDateStamp',
        30: {
          name: 'GPSDifferential',
          description: function (e) {
            return 0 === e
              ? 'Measurement without differential correction'
              : 1 === e
                ? 'Differential correction applied'
                : 'Unknown';
          },
        },
        31: 'GPSHPositioningError',
      },
      xr = {
        1: 'InteroperabilityIndex',
        2: {
          name: 'InteroperabilityVersion',
          description: function (e) {
            return p(e);
          },
        },
        4096: 'RelatedImageFileFormat',
        4097: 'RelatedImageWidth',
        4098: 'RelatedImageHeight',
      },
      Tr = {
        45056: {
          name: 'MPFVersion',
          description: function (e) {
            return p(e);
          },
        },
        45057: 'NumberOfImages',
        45058: 'MPEntry',
        45059: 'ImageUIDList',
        45060: 'TotalFrames',
      },
      Or = c({}, Er, {
        33434: { name: 'ExposureTime', description: Ar.ExposureTime },
        33437: { name: 'FNumber', description: Ar.FNumber },
        34850: { name: 'ExposureProgram', description: Ar.ExposureProgram },
        34852: 'SpectralSensitivity',
        34855: 'ISOSpeedRatings',
        34856: {
          name: 'OECF',
          description: function () {
            return '[Raw OECF table data]';
          },
        },
        34858: 'TimeZoneOffset',
        34859: 'SelfTimerMode',
        34864: {
          name: 'SensitivityType',
          description: function (e) {
            return (
              {
                1: 'Standard Output Sensitivity',
                2: 'Recommended Exposure Index',
                3: 'ISO Speed',
                4: 'Standard Output Sensitivity and Recommended Exposure Index',
                5: 'Standard Output Sensitivity and ISO Speed',
                6: 'Recommended Exposure Index and ISO Speed',
                7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed',
              }[e] || 'Unknown'
            );
          },
        },
        34865: 'StandardOutputSensitivity',
        34866: 'RecommendedExposureIndex',
        34867: 'ISOSpeed',
        34868: 'ISOSpeedLatitudeyyy',
        34869: 'ISOSpeedLatitudezzz',
        36864: {
          name: 'ExifVersion',
          description: function (e) {
            return p(e);
          },
        },
        36867: 'DateTimeOriginal',
        36868: 'DateTimeDigitized',
        36873: 'GooglePlusUploadCode',
        36880: 'OffsetTime',
        36881: 'OffsetTimeOriginal',
        36882: 'OffsetTimeDigitized',
        37121: { name: 'ComponentsConfiguration', description: Ar.ComponentsConfiguration },
        37122: 'CompressedBitsPerPixel',
        37377: { name: 'ShutterSpeedValue', description: Ar.ShutterSpeedValue },
        37378: { name: 'ApertureValue', description: Ar.ApertureValue },
        37379: 'BrightnessValue',
        37380: 'ExposureBiasValue',
        37381: {
          name: 'MaxApertureValue',
          description: function (e) {
            return Math.pow(Math.sqrt(2), e[0] / e[1]).toFixed(2);
          },
        },
        37382: {
          name: 'SubjectDistance',
          description: function (e) {
            return e[0] / e[1] + ' m';
          },
        },
        37383: { name: 'MeteringMode', description: Ar.MeteringMode },
        37384: { name: 'LightSource', description: Ar.LightSource },
        37385: {
          name: 'Flash',
          description: function (e) {
            return 0 === e
              ? 'Flash did not fire'
              : 1 === e
                ? 'Flash fired'
                : 5 === e
                  ? 'Strobe return light not detected'
                  : 7 === e
                    ? 'Strobe return light detected'
                    : 9 === e
                      ? 'Flash fired, compulsory flash mode'
                      : 13 === e
                        ? 'Flash fired, compulsory flash mode, return light not detected'
                        : 15 === e
                          ? 'Flash fired, compulsory flash mode, return light detected'
                          : 16 === e
                            ? 'Flash did not fire, compulsory flash mode'
                            : 24 === e
                              ? 'Flash did not fire, auto mode'
                              : 25 === e
                                ? 'Flash fired, auto mode'
                                : 29 === e
                                  ? 'Flash fired, auto mode, return light not detected'
                                  : 31 === e
                                    ? 'Flash fired, auto mode, return light detected'
                                    : 32 === e
                                      ? 'No flash function'
                                      : 65 === e
                                        ? 'Flash fired, red-eye reduction mode'
                                        : 69 === e
                                          ? 'Flash fired, red-eye reduction mode, return light not detected'
                                          : 71 === e
                                            ? 'Flash fired, red-eye reduction mode, return light detected'
                                            : 73 === e
                                              ? 'Flash fired, compulsory flash mode, red-eye reduction mode'
                                              : 77 === e
                                                ? 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected'
                                                : 79 === e
                                                  ? 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected'
                                                  : 89 === e
                                                    ? 'Flash fired, auto mode, red-eye reduction mode'
                                                    : 93 === e
                                                      ? 'Flash fired, auto mode, return light not detected, red-eye reduction mode'
                                                      : 95 === e
                                                        ? 'Flash fired, auto mode, return light detected, red-eye reduction mode'
                                                        : 'Unknown';
          },
        },
        37386: { name: 'FocalLength', description: Ar.FocalLength },
        37393: 'ImageNumber',
        37394: {
          name: 'SecurityClassification',
          description: function (e) {
            return (
              {
                C: 'Confidential',
                R: 'Restricted',
                S: 'Secret',
                T: 'Top Secret',
                U: 'Unclassified',
              }[e] || 'Unknown'
            );
          },
        },
        37395: 'ImageHistory',
        37396: {
          name: 'SubjectArea',
          description: function (e) {
            return 2 === e.length
              ? 'Location; X: '.concat(e[0], ', Y: ').concat(e[1])
              : 3 === e.length
                ? 'Circle; X: '.concat(e[0], ', Y: ').concat(e[1], ', diameter: ').concat(e[2])
                : 4 === e.length
                  ? 'Rectangle; X: '
                      .concat(e[0], ', Y: ')
                      .concat(e[1], ', width: ')
                      .concat(e[2], ', height: ')
                      .concat(e[3])
                  : 'Unknown';
          },
        },
        37500: {
          name: 'MakerNote',
          description: function () {
            return '[Raw maker note data]';
          },
        },
        37510: { name: 'UserComment', description: m },
        37520: 'SubSecTime',
        37521: 'SubSecTimeOriginal',
        37522: 'SubSecTimeDigitized',
        37724: 'ImageSourceData',
        37888: {
          name: 'AmbientTemperature',
          description: function (e) {
            return e[0] / e[1] + ' °C';
          },
        },
        37889: {
          name: 'Humidity',
          description: function (e) {
            return e[0] / e[1] + ' %';
          },
        },
        37890: {
          name: 'Pressure',
          description: function (e) {
            return e[0] / e[1] + ' hPa';
          },
        },
        37891: {
          name: 'WaterDepth',
          description: function (e) {
            return e[0] / e[1] + ' m';
          },
        },
        37892: {
          name: 'Acceleration',
          description: function (e) {
            return e[0] / e[1] + ' mGal';
          },
        },
        37893: {
          name: 'CameraElevationAngle',
          description: function (e) {
            return e[0] / e[1] + ' °';
          },
        },
        40960: {
          name: 'FlashpixVersion',
          description: function (e) {
            return e
              .map(function (e) {
                return String.fromCharCode(e);
              })
              .join('');
          },
        },
        40961: { name: 'ColorSpace', description: Ar.ColorSpace },
        40962: 'PixelXDimension',
        40963: 'PixelYDimension',
        40964: 'RelatedSoundFile',
        40965: 'Interoperability IFD Pointer',
        41483: 'FlashEnergy',
        41484: {
          name: 'SpatialFrequencyResponse',
          description: function () {
            return '[Raw SFR table data]';
          },
        },
        41486: 'FocalPlaneXResolution',
        41487: 'FocalPlaneYResolution',
        41488: { name: 'FocalPlaneResolutionUnit', description: Ar.FocalPlaneResolutionUnit },
        41492: {
          name: 'SubjectLocation',
          description: function (e) {
            var t,
              n =
                (function (e) {
                  if (Array.isArray(e)) return e;
                })((t = e)) ||
                (function (e) {
                  var t =
                    null == e
                      ? null
                      : ('undefined' != typeof Symbol && e[Symbol.iterator]) || e['@@iterator'];
                  if (null != t) {
                    var n,
                      r,
                      i,
                      o,
                      a = [],
                      u = 1,
                      c = 0;
                    try {
                      for (
                        i = (t = t.call(e)).next;
                        !(u = (n = i.call(t)).done) && (a.push(n.value), 2 !== a.length);
                        u = 1
                      );
                    } catch (e) {
                      ((c = 1), (r = e));
                    } finally {
                      try {
                        if (!u && null != t.return && ((o = t.return()), Object(o) !== o)) return;
                      } finally {
                        if (c) throw r;
                      }
                    }
                    return a;
                  }
                })(t) ||
                (function (e) {
                  if (e) {
                    if ('string' == typeof e) return Y(e, 2);
                    var t = {}.toString.call(e).slice(8, -1);
                    return (
                      'Object' === t && e.constructor && (t = e.constructor.name),
                      'Map' === t || 'Set' === t
                        ? Array.from(e)
                        : 'Arguments' === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)
                          ? Y(e, 2)
                          : void 0
                    );
                  }
                })(t) ||
                (function () {
                  throw new TypeError(
                    'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
                  );
                })(),
              r = n[0],
              i = n[1];
            return 'X: '.concat(r, ', Y: ').concat(i);
          },
        },
        41493: 'ExposureIndex',
        41495: {
          name: 'SensingMethod',
          description: function (e) {
            return 1 === e
              ? 'Undefined'
              : 2 === e
                ? 'One-chip color area sensor'
                : 3 === e
                  ? 'Two-chip color area sensor'
                  : 4 === e
                    ? 'Three-chip color area sensor'
                    : 5 === e
                      ? 'Color sequential area sensor'
                      : 7 === e
                        ? 'Trilinear sensor'
                        : 8 === e
                          ? 'Color sequential linear sensor'
                          : 'Unknown';
          },
        },
        41728: {
          name: 'FileSource',
          description: function (e) {
            return 3 === e ? 'DSC' : 'Unknown';
          },
        },
        41729: {
          name: 'SceneType',
          description: function (e) {
            return 1 === e ? 'A directly photographed image' : 'Unknown';
          },
        },
        41730: {
          name: 'CFAPattern',
          description: function () {
            return '[Raw CFA pattern table data]';
          },
        },
        41985: { name: 'CustomRendered', description: Ar.CustomRendered },
        41986: { name: 'ExposureMode', description: Ar.ExposureMode },
        41987: { name: 'WhiteBalance', description: Ar.WhiteBalance },
        41988: {
          name: 'DigitalZoomRatio',
          description: function (e) {
            return 0 === e[0] ? 'Digital zoom was not used' : '' + e[0] / e[1];
          },
        },
        41989: {
          name: 'FocalLengthIn35mmFilm',
          description: function (e) {
            return 0 === e ? 'Unknown' : e + ' mm';
          },
        },
        41990: { name: 'SceneCaptureType', description: Ar.SceneCaptureType },
        41991: {
          name: 'GainControl',
          description: function (e) {
            return 0 === e
              ? 'None'
              : 1 === e
                ? 'Low gain up'
                : 2 === e
                  ? 'High gain up'
                  : 3 === e
                    ? 'Low gain down'
                    : 4 === e
                      ? 'High gain down'
                      : 'Unknown';
          },
        },
        41992: { name: 'Contrast', description: Ar.Contrast },
        41993: { name: 'Saturation', description: Ar.Saturation },
        41994: { name: 'Sharpness', description: Ar.Sharpness },
        41995: {
          name: 'DeviceSettingDescription',
          description: function () {
            return '[Raw device settings table data]';
          },
        },
        41996: {
          name: 'SubjectDistanceRange',
          description: function (e) {
            return 1 === e
              ? 'Macro'
              : 2 === e
                ? 'Close view'
                : 3 === e
                  ? 'Distant view'
                  : 'Unknown';
          },
        },
        42016: 'ImageUniqueID',
        42032: 'CameraOwnerName',
        42033: 'BodySerialNumber',
        42034: {
          name: 'LensSpecification',
          description: function (e) {
            var t = parseFloat((e[0][0] / e[0][1]).toFixed(5)),
              n = parseFloat((e[1][0] / e[1][1]).toFixed(5)),
              r = ''.concat(t, '-').concat(n, ' mm');
            if (0 === e[3][1]) return ''.concat(r, ' f/?');
            var i = 1 / (e[2][1] / e[2][1] / (e[3][0] / e[3][1]));
            return ''.concat(r, ' f/').concat(parseFloat(i.toFixed(5)));
          },
        },
        42035: 'LensMake',
        42036: 'LensModel',
        42037: 'LensSerialNumber',
        42080: {
          name: 'CompositeImage',
          description: function (e) {
            return (
              {
                1: 'Not a Composite Image',
                2: 'General Composite Image',
                3: 'Composite Image Captured While Shooting',
              }[e] || 'Unknown'
            );
          },
        },
        42081: 'SourceImageNumberOfCompositeImage',
        42082: 'SourceExposureTimesOfCompositeImage',
        42240: 'Gamma',
        59932: 'Padding',
        59933: 'OffsetSchema',
        65000: 'OwnerName',
        65001: 'SerialNumber',
        65002: 'Lens',
        65100: 'RawFile',
        65101: 'Converter',
        65102: 'WhiteBalance',
        65105: 'Exposure',
        65106: 'Shadows',
        65107: 'Brightness',
        65108: 'Contrast',
        65109: 'Saturation',
        65110: 'Sharpness',
        65111: 'Smoothness',
        65112: 'MoireFilter',
      }),
      Mr = '0th',
      Fr = 'exif',
      Rr = 'interoperability',
      kr = 'canon',
      Dr = 'pentax',
      Nr = $(
        $(
          $(
            $($($($($({}, Mr, Or), '1st', Er), Fr, Or), 'gps', wr), Rr, xr),
            'mpf',
            bn.USE_MPF ? Tr : {},
          ),
          kr,
          bn.USE_MAKER_NOTES
            ? {
                4: {
                  name: 'ShotInfo',
                  description: function (e) {
                    return e;
                  },
                },
              }
            : {},
        ),
        Dr,
        bn.USE_MAKER_NOTES
          ? {
              0: {
                name: 'PentaxVersion',
                description: function (e) {
                  return e.join('.');
                },
              },
              5: 'PentaxModelID',
              555: 'LevelInfo',
            }
          : {},
      ),
      Lr = { 1: 1, 2: 1, 3: 2, 4: 4, 5: 8, 7: 1, 9: 4, 10: 8, 13: 4 },
      _r = {
        BYTE: 1,
        ASCII: 2,
        SHORT: 3,
        LONG: 4,
        RATIONAL: 5,
        UNDEFINED: 7,
        SLONG: 9,
        SRATIONAL: 10,
        IFD: 13,
      },
      Br = {
        getAsciiValue: function (e) {
          return e.map(function (e) {
            return String.fromCharCode(e);
          });
        },
        getByteAt: Z,
        getAsciiAt: function (e, t) {
          return e.getUint8(t);
        },
        getShortAt: function (e, t, n) {
          return e.getUint16(t, n === Cn);
        },
        getLongAt: Q,
        getRationalAt: function (e, t, n) {
          return [Q(e, t, n), Q(e, t + 4, n)];
        },
        getUndefinedAt: function (e, t) {
          return Z(e, t);
        },
        getSlongAt: ee,
        getSrationalAt: function (e, t, n) {
          return [ee(e, t, n), ee(e, t + 4, n)];
        },
        getIfdPointerAt: function (e, t, n) {
          return Q(e, t, n);
        },
        typeSizes: Lr,
        tagTypes: _r,
        getTypeSize: function (e) {
          if (void 0 === _r[e]) throw Error('No such type found.');
          return Lr[_r[e]];
        },
      },
      Gr = {
        1: Br.getByteAt,
        2: Br.getAsciiAt,
        3: Br.getShortAt,
        4: Br.getLongAt,
        5: Br.getRationalAt,
        7: Br.getUndefinedAt,
        9: Br.getSlongAt,
        10: Br.getSrationalAt,
        13: Br.getIfdPointerAt,
      },
      jr = 'Exif IFD Pointer',
      zr = 'GPS Info IFD Pointer',
      Vr = 'Interoperability IFD Pointer',
      Hr = {
        read: function (e, t, n) {
          var r = Un(e, t),
            i = (function (e, t, n, r) {
              return ne(e, Mr, t, te(e, t, n), n, r);
            })(e, t, r, n);
          return {
            tags: (i = ce((i = ue((i = ae(i, e, t, r, n)), e, t, r, n)), e, t, r, n)),
            byteOrder: r,
          };
        },
      },
      Wr = {
        read: function (e, t, n) {
          var r = Un(e, t);
          return (function (e, t, n, r) {
            if (!n.MPEntry) return n;
            for (var i = [], o = 0; o < Math.ceil(n.MPEntry.value.length / Xr); o++) {
              i[o] = {};
              var a = fe(n.MPEntry.value, o * Xr, Br.getTypeSize('LONG'), r);
              ((i[o].ImageFlags = se(a)), (i[o].ImageFormat = le(a)), (i[o].ImageType = de(a)));
              var u = fe(n.MPEntry.value, o * Xr + 4, Br.getTypeSize('LONG'), r);
              i[o].ImageSize = { value: u, description: '' + u };
              var c = pe(o, n.MPEntry, r, t);
              i[o].ImageOffset = { value: c, description: '' + c };
              var l = fe(n.MPEntry.value, o * Xr + 12, Br.getTypeSize('SHORT'), r);
              i[o].DependentImage1EntryNumber = { value: l, description: '' + l };
              var d = fe(n.MPEntry.value, o * Xr + 14, Br.getTypeSize('SHORT'), r);
              ((i[o].DependentImage2EntryNumber = { value: d, description: '' + d }),
                (i[o].image = e.buffer.slice(c, c + u)),
                f(i[o], 'base64', function () {
                  return s(this.image);
                }));
            }
            return ((n.Images = i), n);
          })(e, t, ne(e, 'mpf', t, te(e, t, r), r, n), r);
        },
      },
      Xr = 16,
      Jr = {
        read: function (e, t) {
          var n = (function (e, t) {
              return Br.getShortAt(e, t);
            })(e, t),
            r = (function (e, t, n) {
              if (!(8 > n)) {
                var r = Br.getByteAt(e, t + 7);
                return { value: r, description: '' + r };
              }
            })(e, t, n);
          return {
            'Bits Per Sample': me(e, t, n),
            'Image Height': ge(e, t, n),
            'Image Width': he(e, t, n),
            'Color Components': r,
            'Subsampling': r && ve(e, t, r.value, n),
          };
        },
      },
      Yr = {
        read: function (e, t) {
          var n = (function (e, t) {
              return Br.getShortAt(e, t);
            })(e, t),
            r = (function (e, t, n) {
              if (!(15 > n)) {
                var r = Br.getByteAt(e, t + 14);
                return { value: r, description: ''.concat(r, 'px') };
              }
            })(e, t, n),
            i = (function (e, t, n) {
              if (!(16 > n)) {
                var r = Br.getByteAt(e, t + 15);
                return { value: r, description: ''.concat(r, 'px') };
              }
            })(e, t, n),
            o = {
              'JFIF Version': be(e, t, n),
              'Resolution Unit': Ie(e, t, n),
              'XResolution': Ue(e, t, n),
              'YResolution': Pe(e, t, n),
              'JFIF Thumbnail Width': r,
              'JFIF Thumbnail Height': i,
            };
          if (void 0 !== r && void 0 !== i) {
            var a = (function (e, t, n, r) {
              if (!(0 === n || 16 + n > r))
                return {
                  value: e.buffer.slice(t + 16, t + 16 + n),
                  description: '<24-bit RGB pixel data>',
                };
            })(e, t, 3 * r.value * i.value, n);
            a && (o['JFIF Thumbnail'] = a);
          }
          for (var u in o) void 0 === o[u] && delete o[u];
          return o;
        },
      },
      Kr = {
        iptc: {
          256: {
            name: 'Model Version',
            description: function (e) {
              return '' + ((e[0] << 8) + e[1]);
            },
          },
          261: { name: 'Destination', repeatable: 1 },
          276: {
            name: 'File Format',
            description: function (e) {
              return '' + ((e[0] << 8) + e[1]);
            },
          },
          278: {
            name: 'File Format Version',
            description: function (e) {
              return '' + ((e[0] << 8) + e[1]);
            },
          },
          286: 'Service Identifier',
          296: 'Envelope Number',
          306: 'Product ID',
          316: 'Envelope Priority',
          326: { name: 'Date Sent', description: Ae },
          336: { name: 'Time Sent', description: Ee },
          346: { name: 'Coded Character Set', description: we, encoding_name: we },
          356: 'UNO',
          376: {
            name: 'ARM Identifier',
            description: function (e) {
              return '' + ((e[0] << 8) + e[1]);
            },
          },
          378: {
            name: 'ARM Version',
            description: function (e) {
              return '' + ((e[0] << 8) + e[1]);
            },
          },
          512: {
            name: 'Record Version',
            description: function (e) {
              return '' + ((e[0] << 8) + e[1]);
            },
          },
          515: 'Object Type Reference',
          516: 'Object Attribute Reference',
          517: 'Object Name',
          519: 'Edit Status',
          520: {
            name: 'Editorial Update',
            description: function (e) {
              return '01' === p(e) ? 'Additional Language' : 'Unknown';
            },
          },
          522: 'Urgency',
          524: {
            name: 'Subject Reference',
            repeatable: 1,
            description: function (e) {
              var t = p(e).split(':');
              return t[2] + (t[3] ? '/' + t[3] : '') + (t[4] ? '/' + t[4] : '');
            },
          },
          527: 'Category',
          532: { name: 'Supplemental Category', repeatable: 1 },
          534: 'Fixture Identifier',
          537: { name: 'Keywords', repeatable: 1 },
          538: { name: 'Content Location Code', repeatable: 1 },
          539: { name: 'Content Location Name', repeatable: 1 },
          542: 'Release Date',
          547: 'Release Time',
          549: 'Expiration Date',
          550: 'Expiration Time',
          552: 'Special Instructions',
          554: {
            name: 'Action Advised',
            description: function (e) {
              var t = p(e);
              return '01' === t
                ? 'Object Kill'
                : '02' === t
                  ? 'Object Replace'
                  : '03' === t
                    ? 'Object Append'
                    : '04' === t
                      ? 'Object Reference'
                      : 'Unknown';
            },
          },
          557: { name: 'Reference Service', repeatable: 1 },
          559: { name: 'Reference Date', repeatable: 1 },
          562: { name: 'Reference Number', repeatable: 1 },
          567: { name: 'Date Created', description: Ae },
          572: { name: 'Time Created', description: Ee },
          574: { name: 'Digital Creation Date', description: Ae },
          575: { name: 'Digital Creation Time', description: Ee },
          577: 'Originating Program',
          582: 'Program Version',
          587: {
            name: 'Object Cycle',
            description: function (e) {
              var t = p(e);
              return 'a' === t ? 'morning' : 'p' === t ? 'evening' : 'b' === t ? 'both' : 'Unknown';
            },
          },
          592: { name: 'By-line', repeatable: 1 },
          597: { name: 'By-line Title', repeatable: 1 },
          602: 'City',
          604: 'Sub-location',
          607: 'Province/State',
          612: 'Country/Primary Location Code',
          613: 'Country/Primary Location Name',
          615: 'Original Transmission Reference',
          617: 'Headline',
          622: 'Credit',
          627: 'Source',
          628: 'Copyright Notice',
          630: { name: 'Contact', repeatable: 1 },
          632: 'Caption/Abstract',
          634: { name: 'Writer/Editor', repeatable: 1 },
          637: {
            name: 'Rasterized Caption',
            description: function (e) {
              return e;
            },
          },
          642: 'Image Type',
          643: {
            name: 'Image Orientation',
            description: function (e) {
              var t = p(e);
              return 'P' === t
                ? 'Portrait'
                : 'L' === t
                  ? 'Landscape'
                  : 'S' === t
                    ? 'Square'
                    : 'Unknown';
            },
          },
          647: 'Language Identifier',
          662: {
            name: 'Audio Type',
            description: function (e) {
              var t = p(e),
                n = t.charAt(0),
                r = t.charAt(1),
                i = '';
              return (
                '1' === n ? (i += 'Mono') : '2' === n && (i += 'Stereo'),
                'A' === r
                  ? (i += ', actuality')
                  : 'C' === r
                    ? (i += ', question and answer session')
                    : 'M' === r
                      ? (i += ', music, transmitted by itself')
                      : 'Q' === r
                        ? (i += ', response to a question')
                        : 'R' === r
                          ? (i += ', raw sound')
                          : 'S' === r
                            ? (i += ', scener')
                            : 'V' === r
                              ? (i += ', voicer')
                              : 'W' === r && (i += ', wrap'),
                '' !== i ? i : t
              );
            },
          },
          663: {
            name: 'Audio Sampling Rate',
            description: function (e) {
              return parseInt(p(e), 10) + ' Hz';
            },
          },
          664: {
            name: 'Audio Sampling Resolution',
            description: function (e) {
              var t = parseInt(p(e), 10);
              return t + (1 === t ? ' bit' : ' bits');
            },
          },
          665: {
            name: 'Audio Duration',
            description: function (e) {
              var t = p(e);
              return t.length >= 6
                ? t.substr(0, 2) + ':' + t.substr(2, 2) + ':' + t.substr(4, 2)
                : t;
            },
          },
          666: 'Audio Outcue',
          698: 'Short Document ID',
          699: 'Unique Document ID',
          700: 'Owner ID',
          712: {
            name: function (e) {
              return 2 === e.length ? 'ObjectData Preview File Format' : 'Record 2 destination';
            },
            description: function (e) {
              if (2 === e.length) {
                var t = (e[0] << 8) + e[1];
                return 0 === t
                  ? 'No ObjectData'
                  : 1 === t
                    ? 'IPTC-NAA Digital Newsphoto Parameter Record'
                    : 2 === t
                      ? 'IPTC7901 Recommended Message Format'
                      : 3 === t
                        ? 'Tagged Image File Format (Adobe/Aldus Image data)'
                        : 4 === t
                          ? 'Illustrator (Adobe Graphics data)'
                          : 5 === t
                            ? 'AppleSingle (Apple Computer Inc)'
                            : 6 === t
                              ? 'NAA 89-3 (ANPA 1312)'
                              : 7 === t
                                ? 'MacBinary II'
                                : 8 === t
                                  ? 'IPTC Unstructured Character Oriented File Format (UCOFF)'
                                  : 9 === t
                                    ? 'United Press International ANPA 1312 variant'
                                    : 10 === t
                                      ? 'United Press International Down-Load Message'
                                      : 11 === t
                                        ? 'JPEG File Interchange (JFIF)'
                                        : 12 === t
                                          ? 'Photo-CD Image-Pac (Eastman Kodak)'
                                          : 13 === t
                                            ? 'Microsoft Bit Mapped Graphics File [*.BMP]'
                                            : 14 === t
                                              ? 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)'
                                              : 15 === t
                                                ? 'Audio plus Moving Video [*.AVI] (Microsoft)'
                                                : 16 === t
                                                  ? 'PC DOS/Windows Executable Files [*.COM][*.EXE]'
                                                  : 17 === t
                                                    ? 'Compressed Binary File [*.ZIP] (PKWare Inc)'
                                                    : 18 === t
                                                      ? 'Audio Interchange File Format AIFF (Apple Computer Inc)'
                                                      : 19 === t
                                                        ? 'RIFF Wave (Microsoft Corporation)'
                                                        : 20 === t
                                                          ? 'Freehand (Macromedia/Aldus)'
                                                          : 21 === t
                                                            ? 'Hypertext Markup Language "HTML" (The Internet Society)'
                                                            : 22 === t
                                                              ? 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC'
                                                              : 23 === t
                                                                ? 'MPEG 2 Audio Layer 3, ISO/IEC'
                                                                : 24 === t
                                                                  ? 'Portable Document File (*.PDF) Adobe'
                                                                  : 25 === t
                                                                    ? 'News Industry Text Format (NITF)'
                                                                    : 26 === t
                                                                      ? 'Tape Archive (*.TAR)'
                                                                      : 27 === t
                                                                        ? 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)'
                                                                        : 28 === t
                                                                          ? 'Ritzaus Bureau NITF version (RBNITF DTD)'
                                                                          : 29 === t
                                                                            ? 'Corel Draw [*.CDR]'
                                                                            : 'Unknown format '.concat(
                                                                                t,
                                                                              );
              }
              return p(e);
            },
          },
          713: {
            name: 'ObjectData Preview File Format Version',
            description: function (e, t) {
              var n = {
                  '00': { '00': '1' },
                  '01': { '01': '1', '02': '2', '03': '3', '04': '4' },
                  '02': { '04': '4' },
                  '03': { '01': '5.0', '02': '6.0' },
                  '04': { '01': '1.40' },
                  '05': { '01': '2' },
                  '06': { '01': '1' },
                  '11': { '01': '1.02' },
                  '20': { '01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5' },
                  '21': { '02': '2.0' },
                },
                r = p(e);
              if (t['ObjectData Preview File Format']) {
                var i = p(t['ObjectData Preview File Format'].value);
                if (n[i] && n[i][r]) return n[i][r];
              }
              return r;
            },
          },
          714: 'ObjectData Preview Data',
          1802: {
            name: 'Size Mode',
            description: function (e) {
              return e[0].toString();
            },
          },
          1812: {
            name: 'Max Subfile Size',
            description: function (e) {
              for (var t = 0, n = 0; n < e.length; n++) t = (t << 8) + e[n];
              return t.toString();
            },
          },
          1882: {
            name: 'ObjectData Size Announced',
            description: function (e) {
              for (var t = 0, n = 0; n < e.length; n++) t = (t << 8) + e[n];
              return t.toString();
            },
          },
          1887: {
            name: 'Maximum ObjectData Size',
            description: function (e) {
              for (var t = 0, n = 0; n < e.length; n++) t = (t << 8) + e[n];
              return t.toString();
            },
          },
        },
      },
      qr = function (e, t) {
        var n = (function () {
          if ('undefined' != typeof TextDecoder) return TextDecoder;
        })();
        if (void 0 !== n && void 0 !== e)
          try {
            return new n(e).decode(t instanceof DataView ? t.buffer : Uint8Array.from(t));
          } catch (e) {}
        return (function (e) {
          try {
            return decodeURIComponent(escape(e));
          } catch (t) {
            return e;
          }
        })(
          t
            .map(function (e) {
              return String.fromCharCode(e);
            })
            .join(''),
        );
      },
      $r = {
        read: function (e, t, n) {
          try {
            if (Array.isArray(e))
              return Me(new DataView(Uint8Array.from(e).buffer), { size: e.length }, 0, n);
            var r = (function (e, t) {
              for (; t + 12 <= e.byteLength; ) {
                var n = xe(e, t);
                if (Te(n)) return { naaBlock: n, dataOffset: t + n.headerSize };
                t += n.headerSize + n.size + Oe(n);
              }
              throw Error('No IPTC NAA resource block.');
            })(e, t);
            return Me(e, r.naaBlock, r.dataOffset, n);
          } catch (e) {
            return {};
          }
        },
      },
      Zr = {
        'tiff:Orientation': function (e) {
          return '1' === e
            ? 'Horizontal (normal)'
            : '2' === e
              ? 'Mirror horizontal'
              : '3' === e
                ? 'Rotate 180'
                : '4' === e
                  ? 'Mirror vertical'
                  : '5' === e
                    ? 'Mirror horizontal and rotate 270 CW'
                    : '6' === e
                      ? 'Rotate 90 CW'
                      : '7' === e
                        ? 'Mirror horizontal and rotate 90 CW'
                        : '8' === e
                          ? 'Rotate 270 CW'
                          : e;
        },
        'tiff:ResolutionUnit': function (e) {
          return Ar.ResolutionUnit(parseInt(e, 10));
        },
        'tiff:XResolution': function (e) {
          return Ne(Ar.XResolution, e);
        },
        'tiff:YResolution': function (e) {
          return Ne(Ar.YResolution, e);
        },
        'exif:ApertureValue': function (e) {
          return Ne(Ar.ApertureValue, e);
        },
        'exif:GPSLatitude': _e,
        'exif:GPSLongitude': _e,
        'exif:FNumber': function (e) {
          return Ne(Ar.FNumber, e);
        },
        'exif:FocalLength': function (e) {
          return Ne(Ar.FocalLength, e);
        },
        'exif:FocalPlaneResolutionUnit': function (e) {
          return Ar.FocalPlaneResolutionUnit(parseInt(e, 10));
        },
        'exif:ColorSpace': function (e) {
          return Ar.ColorSpace(
            (function (e) {
              return '0x' === e.substring(0, 2) ? parseInt(e.substring(2), 16) : parseInt(e, 10);
            })(e),
          );
        },
        'exif:ComponentsConfiguration': function (e, t) {
          if (/^\d, \d, \d, \d$/.test(t)) {
            var n = t.split(', ').map(function (e) {
              return e.charCodeAt(0);
            });
            return Ar.ComponentsConfiguration(n);
          }
          return t;
        },
        'exif:Contrast': function (e) {
          return Ar.Contrast(parseInt(e, 10));
        },
        'exif:CustomRendered': function (e) {
          return Ar.CustomRendered(parseInt(e, 10));
        },
        'exif:ExposureMode': function (e) {
          return Ar.ExposureMode(parseInt(e, 10));
        },
        'exif:ExposureProgram': function (e) {
          return Ar.ExposureProgram(parseInt(e, 10));
        },
        'exif:ExposureTime': function (e) {
          return Le(e)
            ? Ar.ExposureTime(
                e.split('/').map(function (e) {
                  return parseInt(e, 10);
                }),
              )
            : e;
        },
        'exif:MeteringMode': function (e) {
          return Ar.MeteringMode(parseInt(e, 10));
        },
        'exif:Saturation': function (e) {
          return Ar.Saturation(parseInt(e, 10));
        },
        'exif:SceneCaptureType': function (e) {
          return Ar.SceneCaptureType(parseInt(e, 10));
        },
        'exif:Sharpness': function (e) {
          return Ar.Sharpness(parseInt(e, 10));
        },
        'exif:ShutterSpeedValue': function (e) {
          return Ne(Ar.ShutterSpeedValue, e);
        },
        'exif:WhiteBalance': function (e) {
          return Ar.WhiteBalance(parseInt(e, 10));
        },
      },
      Qr = {
        xmp: 'http://ns.adobe.com/xap/1.0/',
        tiff: 'http://ns.adobe.com/tiff/1.0/',
        exif: 'http://ns.adobe.com/exif/1.0/',
        dc: 'http://purl.org/dc/elements/1.1/',
        xmpMM: 'http://ns.adobe.com/xap/1.0/mm/',
        stEvt: 'http://ns.adobe.com/xap/1.0/sType/ResourceEvent#',
        stRef: 'http://ns.adobe.com/xap/1.0/sType/ResourceRef#',
        photoshop: 'http://ns.adobe.com/photoshop/1.0/',
      },
      ei = {
        read: function (e, t, n) {
          var r = {};
          if ('string' == typeof e) return (Xe(r, e, n), r);
          var i,
            o =
              ((i = (function (e, t) {
                if (0 === t.length) return [];
                var n = [We(e, t.slice(0, 1))];
                return (t.length > 1 && n.push(We(e, t.slice(1))), n);
              })(e, t)),
              (function (e) {
                if (Array.isArray(e)) return e;
              })(i) ||
                (function (e) {
                  var t =
                    null == e
                      ? null
                      : ('undefined' != typeof Symbol && e[Symbol.iterator]) || e['@@iterator'];
                  if (null != t) {
                    var n,
                      r,
                      i,
                      o,
                      a = [],
                      u = 1,
                      c = 0;
                    try {
                      for (
                        i = (t = t.call(e)).next;
                        !(u = (n = i.call(t)).done) && (a.push(n.value), 2 !== a.length);
                        u = 1
                      );
                    } catch (e) {
                      ((c = 1), (r = e));
                    } finally {
                      try {
                        if (!u && null != t.return && ((o = t.return()), Object(o) !== o)) return;
                      } finally {
                        if (c) throw r;
                      }
                    }
                    return a;
                  }
                })(i) ||
                (function (e) {
                  if (e) {
                    if ('string' == typeof e) return Ge(e, 2);
                    var t = {}.toString.call(e).slice(8, -1);
                    return (
                      'Object' === t && e.constructor && (t = e.constructor.name),
                      'Map' === t || 'Set' === t
                        ? Array.from(e)
                        : 'Arguments' === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)
                          ? Ge(e, 2)
                          : void 0
                    );
                  }
                })(i) ||
                (function () {
                  throw new TypeError(
                    'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
                  );
                })()),
            a = o[0],
            u = o[1],
            c = Xe(r, a, n);
          if (u) {
            var f = Xe(r, u, n);
            c || f || (delete r._raw, Xe(r, We(e, t), n));
          }
          return r;
        },
      },
      ti = (function (e) {
        function t(e) {
          var n;
          return (
            (function (e, t) {
              if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function');
            })(this, t),
            ((n = (function (e, t, n) {
              return (
                (t = He(t)),
                (function (e, t) {
                  if (t && ('object' == Be(t) || 'function' == typeof t)) return t;
                  if (void 0 !== t)
                    throw new TypeError('Derived constructors may only return object or undefined');
                  return (function (e) {
                    if (void 0 === e)
                      throw new ReferenceError(
                        "this hasn't been initialised - super() hasn't been called",
                      );
                    return e;
                  })(e);
                })(e, ze() ? Reflect.construct(t, n || [], He(e).constructor) : t.apply(e, n))
              );
            })(this, t, [e])).name = 'ParseError'),
            n
          );
        }
        return (
          (function (e, t) {
            if ('function' != typeof t && null !== t)
              throw new TypeError('Super expression must either be null or a function');
            ((e.prototype = Object.create(t && t.prototype, {
              constructor: { value: e, writable: 1, configurable: 1 },
            })),
              Object.defineProperty(e, 'prototype', { writable: 0 }),
              t && Ve(e, t));
          })(t, e),
          Object.defineProperty((n = t), 'prototype', { writable: 0 }),
          n
        );
        var n;
      })(je(Error)),
      ni = {
        2000: {
          name: 'PathInformation',
          description: function (e) {
            for (var t = {}, n = [], r = 0; r < e.byteLength; r += 26) {
              var i = Br.getShortAt(e, r);
              ri[i] &&
                (t[i] || (t[i] = ri[i].description),
                n.push({ type: i, path: ri[i].path(e, r + 2) }));
            }
            return JSON.stringify({ types: t, paths: n });
          },
        },
        2999: {
          name: 'ClippingPathName',
          description: function (e) {
            return ((t = a(e, 0)),
            (function (e) {
              if (Array.isArray(e)) return e;
            })(t) ||
              (function (e) {
                var t =
                  null == e
                    ? null
                    : ('undefined' != typeof Symbol && e[Symbol.iterator]) || e['@@iterator'];
                if (null != t) {
                  var n,
                    r,
                    i,
                    o,
                    a = [],
                    u = 1,
                    c = 0;
                  try {
                    for (
                      i = (t = t.call(e)).next;
                      !(u = (n = i.call(t)).done) && (a.push(n.value), 2 !== a.length);
                      u = 1
                    );
                  } catch (e) {
                    ((c = 1), (r = e));
                  } finally {
                    try {
                      if (!u && null != t.return && ((o = t.return()), Object(o) !== o)) return;
                    } finally {
                      if (c) throw r;
                    }
                  }
                  return a;
                }
              })(t) ||
              (function (e) {
                if (e) {
                  if ('string' == typeof e) return yt(e, 2);
                  var t = {}.toString.call(e).slice(8, -1);
                  return (
                    'Object' === t && e.constructor && (t = e.constructor.name),
                    'Map' === t || 'Set' === t
                      ? Array.from(e)
                      : 'Arguments' === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)
                        ? yt(e, 2)
                        : void 0
                  );
                }
              })(t) ||
              (function () {
                throw new TypeError(
                  'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
                );
              })())[1];
            var t;
          },
        },
      },
      ri = vt(
        vt(
          vt(
            vt(
              vt(
                vt(
                  vt(
                    vt(
                      vt({}, 0, {
                        description: 'Closed subpath length',
                        path: function (e, t) {
                          return [Br.getShortAt(e, t)];
                        },
                      }),
                      1,
                      { description: 'Closed subpath Bezier knot, linked', path: St },
                    ),
                    2,
                    { description: 'Closed subpath Bezier knot, unlinked', path: St },
                  ),
                  3,
                  {
                    description: 'Open subpath length',
                    path: function (e, t) {
                      return [Br.getShortAt(e, t)];
                    },
                  },
                ),
                4,
                { description: 'Open subpath Bezier knot, linked', path: St },
              ),
              5,
              { description: 'Open subpath Bezier knot, unlinked', path: St },
            ),
            6,
            {
              description: 'Path fill rule',
              path: function () {
                return [];
              },
            },
          ),
          8,
          {
            description: 'Initial fill rule',
            path: function (e, t) {
              return [Br.getShortAt(e, t)];
            },
          },
        ),
        7,
        {
          description: 'Clipboard',
          path: function (e, t) {
            return [
              [It(e, t, 8), It(e, t + 4, 8), It(e, t + 8, 8), It(e, t + 12, 8)],
              It(e, t + 16, 8),
            ];
          },
        },
      ),
      ii = {
        read: function (e, t) {
          for (var i = n(new Uint8Array(e).buffer), o = {}, a = 0; a < e.length; ) {
            var u = r(i, a, ci);
            a += ci;
            var c = Br.getShortAt(i, a),
              f = Ut(i, (a += ai)),
              s = f.tagName;
            a += f.tagNameSize;
            var l = Br.getLongAt(i, a);
            if (((a += ui), u === oi)) {
              var d = n(i.buffer, a, l),
                p = { id: c, value: r(d, 0, l) };
              if (ni[c]) {
                try {
                  p.description = ni[c].description(d);
                } catch (e) {
                  p.description = '<no description formatter>';
                }
                o[s || ni[c].name] = p;
              } else t && (o['undefined-'.concat(c)] = p);
            }
            a += l + (l % 2);
          }
          return o;
        },
      },
      oi = '8BIM',
      ai = 2,
      ui = 4,
      ci = oi.length,
      fi = {
        desc: { name: 'ICC Description' },
        cprt: { name: 'ICC Copyright' },
        dmdd: { name: 'ICC Device Model Description' },
        vued: { name: 'ICC Viewing Conditions Description' },
        dmnd: { name: 'ICC Device Manufacturer for Display' },
        tech: { name: 'Technology' },
      },
      si = {
        4: {
          name: 'Preferred CMM type',
          value: function (e, t) {
            return r(e, t, 4);
          },
          description: function (e) {
            return null !== e ? Pt(e) : '';
          },
        },
        8: {
          name: 'Profile Version',
          value: function (e, t) {
            return (
              e.getUint8(t).toString(10) +
              '.' +
              (e.getUint8(t + 1) >> 4).toString(10) +
              '.' +
              (e.getUint8(t + 1) % 16).toString(10)
            );
          },
        },
        12: {
          name: 'Profile/Device class',
          value: function (e, t) {
            return r(e, t, 4);
          },
          description: function (e) {
            switch (e.toLowerCase()) {
              case 'scnr':
                return 'Input Device profile';
              case 'mntr':
                return 'Display Device profile';
              case 'prtr':
                return 'Output Device profile';
              case 'link':
                return 'DeviceLink profile';
              case 'abst':
                return 'Abstract profile';
              case 'spac':
                return 'ColorSpace profile';
              case 'nmcl':
                return 'NamedColor profile';
              case 'cenc':
                return 'ColorEncodingSpace profile';
              case 'mid ':
                return 'MultiplexIdentification profile';
              case 'mlnk':
                return 'MultiplexLink profile';
              case 'mvis':
                return 'MultiplexVisualization profile';
              default:
                return e;
            }
          },
        },
        16: {
          name: 'Color Space',
          value: function (e, t) {
            return r(e, t, 4);
          },
        },
        20: {
          name: 'Connection Space',
          value: function (e, t) {
            return r(e, t, 4);
          },
        },
        24: {
          name: 'ICC Profile Date',
          value: function (e, t) {
            return (function (e, t) {
              var n = e.getUint16(t),
                r = e.getUint16(t + 2) - 1,
                i = e.getUint16(t + 4),
                o = e.getUint16(t + 6),
                a = e.getUint16(t + 8),
                u = e.getUint16(t + 10);
              return new Date(Date.UTC(n, r, i, o, a, u));
            })(e, t).toISOString();
          },
        },
        36: {
          name: 'ICC Signature',
          value: function (e, t) {
            return (
              (n = e.buffer.slice(t, t + 4)),
              String.fromCharCode.apply(null, new Uint8Array(n))
            );
            var n;
          },
        },
        40: {
          name: 'Primary Platform',
          value: function (e, t) {
            return r(e, t, 4);
          },
          description: function (e) {
            return Pt(e);
          },
        },
        48: {
          name: 'Device Manufacturer',
          value: function (e, t) {
            return r(e, t, 4);
          },
          description: function (e) {
            return Pt(e);
          },
        },
        52: {
          name: 'Device Model Number',
          value: function (e, t) {
            return r(e, t, 4);
          },
        },
        64: {
          name: 'Rendering Intent',
          value: function (e, t) {
            return e.getUint32(t);
          },
          description: function (e) {
            switch (e) {
              case 0:
                return 'Perceptual';
              case 1:
                return 'Relative Colorimetric';
              case 2:
                return 'Saturation';
              case 3:
                return 'Absolute Colorimetric';
              default:
                return e;
            }
          },
        },
        80: {
          name: 'Profile Creator',
          value: function (e, t) {
            return r(e, t, 4);
          },
        },
      },
      li = {
        read: function (e, t, n) {
          return n && t[0].compressionMethod !== Sn
            ? (function (e, t) {
                return 0 !== t[0].compressionMethod
                  ? {}
                  : d(
                      new DataView(e.buffer.slice(t[0].offset, t[0].offset + t[0].length)),
                      t[0].compressionMethod,
                      'utf-8',
                      'dataview',
                    )
                      .then(Et)
                      .catch(function () {
                        return {};
                      });
              })(e, t)
            : (function (e, t) {
                try {
                  for (
                    var n = t.reduce(function (e, t) {
                        return e + t.length;
                      }, 0),
                      r = new Uint8Array(n),
                      i = 0,
                      o = (function (e) {
                        return Array.isArray(e)
                          ? new DataView(Uint8Array.from(e).buffer).buffer
                          : e.buffer;
                      })(e),
                      a = function (e) {
                        var n = t.find(function (t) {
                          return t.chunkNumber === e;
                        });
                        if (!n) throw Error('ICC chunk '.concat(e, ' not found'));
                        var a = o.slice(n.offset, n.offset + n.length),
                          u = new Uint8Array(a);
                        (r.set(u, i), (i += u.length));
                      },
                      u = 1;
                    u <= t.length;
                    u++
                  )
                    a(u);
                  return Et(new DataView(r.buffer));
                } catch (e) {
                  return {};
                }
              })(e, t);
        },
      },
      di = 84,
      pi = 128,
      mi = 'acsp',
      gi = 'desc',
      hi = 'mluc',
      vi = 'text',
      yi = 'sig ',
      Si = 12,
      bi = {
        read: function (e, t, n, r, i) {
          var o = ne(e, kr, t, t + n, r, i);
          return (
            o.ShotInfo &&
              delete (o = c(
                {},
                o,
                (function (e) {
                  var t,
                    n = {};
                  return (
                    void 0 !== e[27] &&
                      (n.AutoRotate = {
                        value: e[27],
                        description:
                          ((t = e[27]),
                          0 === t
                            ? 'None'
                            : 1 === t
                              ? 'Rotate 90 CW'
                              : 2 === t
                                ? 'Rotate 180'
                                : 3 === t
                                  ? 'Rotate 270 CW'
                                  : 'Unknown'),
                      }),
                    n
                  );
                })(o.ShotInfo.value),
              )).ShotInfo,
            o
          );
        },
        SHOT_INFO_AUTO_ROTATE: 27,
      },
      Ii = { K3_III: 78420 },
      Ci = { CAMERA_ORIENTATION: 1, ROLL_ANGLE: 3, PITCH_ANGLE: 5 },
      Ui = {
        read: function (e, t, n, r) {
          var i = Un(e, t + n + 8),
            o = t + n,
            a = ne(e, Dr, o, o + 10, i, r);
          return (
            (function (e) {
              return e.PentaxModelID && e.PentaxModelID.value === Ii.K3_III && e.LevelInfo;
            })(a) &&
              ((a = c(
                {},
                a,
                (function (e, t, n) {
                  var r = {};
                  if (t + 7 > e.byteLength) return r;
                  var i,
                    o = e.getInt8(t + Ci.CAMERA_ORIENTATION);
                  r.CameraOrientation = {
                    value: o,
                    description:
                      ((i = o),
                      0 === i
                        ? 'Horizontal (normal)'
                        : 1 === i
                          ? 'Rotate 270 CW'
                          : 2 === i
                            ? 'Rotate 180'
                            : 3 === i
                              ? 'Rotate 90 CW'
                              : 4 === i
                                ? 'Upwards'
                                : 5 === i
                                  ? 'Downwards'
                                  : 'Unknown'),
                  };
                  var a = e.getInt16(t + Ci.ROLL_ANGLE, n === Cn);
                  r.RollAngle = { value: a, description: Tt(a) };
                  var u = e.getInt16(t + Ci.PITCH_ANGLE, n === Cn);
                  return ((r.PitchAngle = { value: u, description: Ot(u) }), r);
                })(e, o + a.LevelInfo.__offset, i),
              )),
              delete a.LevelInfo),
            a
          );
        },
        PENTAX_IFD_OFFSET: 10,
        MODEL_ID: Ii,
        LIK3III: Ci,
      },
      Pi = {
        read: function (e, t) {
          return {
            'Image Width': Mt(e, t),
            'Image Height': Ft(e, t),
            'Bit Depth': Rt(e, t),
            'Color Type': kt(e, t),
            'Compression': Dt(e, t),
            'Filter': Nt(e, t),
            'Interlace': Lt(e, t),
          };
        },
      },
      Ai = {
        read: function (e, t, n, r) {
          for (var i = {}, o = [], a = 0; a < t.length; a++) {
            var u = t[a],
              c = Bt(e, u.offset, u.length, u.type, n);
            if (c instanceof Promise)
              o.push(
                c.then(function (e) {
                  var t,
                    n,
                    i,
                    o = e.name,
                    a = e.value,
                    u = e.description;
                  try {
                    if (bn.USE_EXIF && Wt(o, a)) return { __exif: Hr.read(Jt(a), Ri, r).tags };
                    if (bn.USE_IPTC && Xt(o, a)) return { __iptc: $r.read(Jt(a), 0, r) };
                    if (o && !Wt(o, a) && !Xt(o, a))
                      return (
                        (t = {}),
                        (i = { value: a, description: u }),
                        (n = (function (e) {
                          var t = (function (e) {
                            if ('object' != _t(e) || !e) return e;
                            var t = e[Symbol.toPrimitive];
                            if (void 0 !== t) {
                              var n = t.call(e, 'string');
                              if ('object' != _t(n)) return n;
                              throw new TypeError('@@toPrimitive must return a primitive value.');
                            }
                            return e + '';
                          })(e);
                          return 'symbol' == _t(t) ? t : t + '';
                        })((n = o))) in t
                          ? Object.defineProperty(t, n, {
                              value: i,
                              enumerable: 1,
                              configurable: 1,
                              writable: 1,
                            })
                          : (t[n] = i),
                        t
                      );
                  } catch (e) {}
                  return {};
                }),
              );
            else {
              var f = c.name,
                s = c.value,
                l = c.description;
              f && (i[f] = { value: s, description: l });
            }
          }
          return { readTags: i, readTagsPromise: o.length > 0 ? Promise.all(o) : void 0 };
        },
      },
      Ei = 'STATE_KEYWORD',
      wi = 'STATE_COMPRESSION',
      xi = 'STATE_LANG',
      Ti = 'STATE_TRANSLATED_KEYWORD',
      Oi = 'STATE_TEXT',
      Mi = 1,
      Fi = 1,
      Ri = 6,
      ki = {
        read: function (e, t) {
          for (var n = {}, i = 0; i < t.length; i++) {
            var o = Br.getLongAt(e, t[i] + ur),
              a = r(e, t[i] + cr, ar);
            a === mr
              ? ((n['Pixels Per Unit X'] = Yt(e, t[i], o)),
                (n['Pixels Per Unit Y'] = Kt(e, t[i], o)),
                (n['Pixel Units'] = qt(e, t[i], o)))
              : a === gr && (n['Modify Date'] = $t(e, t[i], o));
          }
          return n;
        },
      },
      Di = {
        read: function (e, t) {
          var n = {},
            r = Br.getByteAt(e, t);
          return (
            (n.Alpha = (function (e) {
              var t = 16 & e;
              return { value: t ? 1 : 0, description: t ? 'Yes' : 'No' };
            })(r)),
            (n.Animation = (function (e) {
              var t = 2 & e;
              return { value: t ? 1 : 0, description: t ? 'Yes' : 'No' };
            })(r)),
            (n.ImageWidth = en(e, t + Ni)),
            (n.ImageHeight = en(e, t + Li)),
            n
          );
        },
      },
      Ni = 4,
      Li = 7,
      _i = {
        read: function (e) {
          return {
            'GIF Version': tn(e),
            'Image Width': nn(e),
            'Image Height': rn(e),
            'Global Color Map': on(e),
            'Bits Per Pixel': un(e),
            'Color Resolution Depth': an(e),
          };
        },
      },
      Bi = [6, 7, 99],
      Gi = {
        get: function (e, t, n) {
          if (
            (i = t) &&
            (void 0 === i.Compression || Bi.includes(i.Compression.value)) &&
            i.JPEGInterchangeFormat &&
            i.JPEGInterchangeFormat.value &&
            i.JPEGInterchangeFormatLength &&
            i.JPEGInterchangeFormatLength.value
          ) {
            t.type = 'image/jpeg';
            var r = n + t.JPEGInterchangeFormat.value;
            ((t.image = e.buffer.slice(r, r + t.JPEGInterchangeFormatLength.value)),
              f(t, 'base64', function () {
                return s(this.image);
              }));
          }
          var i;
          return t;
        },
      },
      ji = {
        get: function (e, t) {
          var n = {},
            r = 0,
            i = cn(e, 'FocalLength', t),
            o = cn(e, 'FocalLengthIn35mmFilm', t),
            a = (function (e, t) {
              if (e && t)
                try {
                  var n = t / (e[0] / e[1]);
                  return { value: n, description: n.toFixed(1) };
                } catch (e) {}
            })(i, o);
          a && ((n.ScaleFactorTo35mmEquivalent = a), (r = 1));
          var u = (function (e) {
            if (e)
              try {
                var t = 2 * Math.atan(36 / (2 * e)) * (180 / Math.PI);
                return { value: t, description: t.toFixed(1) + ' deg' };
              } catch (e) {}
          })(o);
          if ((u && ((n.FieldOfView = u), (r = 1)), r)) return n;
        },
      };
    fn.prototype = Error();
    var zi = { MetadataMissingError: fn },
      Vi = { load: sn, loadView: dn, errors: zi },
      Hi = zi;
    return vn;
  })();
});
