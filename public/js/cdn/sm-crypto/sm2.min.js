!(function (t, r) {
  'object' == typeof exports && 'object' == typeof module
    ? (module.exports = r())
    : 'function' == typeof define && define.amd
      ? define([], r)
      : 'object' == typeof exports
        ? (exports.sm2 = r())
        : (t.sm2 = r());
})('undefined' != typeof self ? self : this, function () {
  return (function (t) {
    function r(e) {
      if (i[e]) return i[e].exports;
      var n = (i[e] = { i: e, l: !1, exports: {} });
      return (t[e].call(n.exports, n, n.exports, r), (n.l = !0), n.exports);
    }
    var i = {};
    return (
      (r.m = t),
      (r.c = i),
      (r.d = function (t, i, e) {
        r.o(t, i) || Object.defineProperty(t, i, { configurable: !1, enumerable: !0, get: e });
      }),
      (r.n = function (t) {
        var i =
          t && t.__esModule
            ? function () {
                return t.default;
              }
            : function () {
                return t;
              };
        return (r.d(i, 'a', i), i);
      }),
      (r.o = function (t, r) {
        return Object.prototype.hasOwnProperty.call(t, r);
      }),
      (r.p = ''),
      r((r.s = 2))
    );
  })([
    function (t, r, i) {
      (function () {
        function r(t, r, i) {
          null != t &&
            ('number' == typeof t
              ? this.fromNumber(t, r, i)
              : null == r && 'string' != typeof t
                ? this.fromString(t, 256)
                : this.fromString(t, r));
        }
        function i() {
          return new r(null);
        }
        function e(t, r, i, e, n, o) {
          for (; --o >= 0; ) {
            var s = r * this[t++] + i[e] + n;
            ((n = Math.floor(s / 67108864)), (i[e++] = 67108863 & s));
          }
          return n;
        }
        function n(t, r, i, e, n, o) {
          for (var s = 32767 & r, u = r >> 15; --o >= 0; ) {
            var h = 32767 & this[t],
              a = this[t++] >> 15,
              f = u * h + a * s;
            ((h = s * h + ((32767 & f) << 15) + i[e] + (1073741823 & n)),
              (n = (h >>> 30) + (f >>> 15) + u * a + (n >>> 30)),
              (i[e++] = 1073741823 & h));
          }
          return n;
        }
        function o(t, r, i, e, n, o) {
          for (var s = 16383 & r, u = r >> 14; --o >= 0; ) {
            var h = 16383 & this[t],
              a = this[t++] >> 14,
              f = u * h + a * s;
            ((h = s * h + ((16383 & f) << 14) + i[e] + n),
              (n = (h >> 28) + (f >> 14) + u * a),
              (i[e++] = 268435455 & h));
          }
          return n;
        }
        function s(t) {
          return cr.charAt(t);
        }
        function u(t, r) {
          var i = pr[t.charCodeAt(r)];
          return null == i ? -1 : i;
        }
        function h(t) {
          for (var r = this.t - 1; r >= 0; --r) t[r] = this[r];
          ((t.t = this.t), (t.s = this.s));
        }
        function a(t) {
          ((this.t = 1),
            (this.s = t < 0 ? -1 : 0),
            t > 0 ? (this[0] = t) : t < -1 ? (this[0] = t + this.DV) : (this.t = 0));
        }
        function f(t) {
          var r = i();
          return (r.fromInt(t), r);
        }
        function l(t, i) {
          var e;
          if (16 == i) e = 4;
          else if (8 == i) e = 3;
          else if (256 == i) e = 8;
          else if (2 == i) e = 1;
          else if (32 == i) e = 5;
          else {
            if (4 != i) return void this.fromRadix(t, i);
            e = 2;
          }
          ((this.t = 0), (this.s = 0));
          for (var n = t.length, o = !1, s = 0; --n >= 0; ) {
            var h = 8 == e ? 255 & t[n] : u(t, n);
            h < 0
              ? '-' == t.charAt(n) && (o = !0)
              : ((o = !1),
                0 == s
                  ? (this[this.t++] = h)
                  : s + e > this.DB
                    ? ((this[this.t - 1] |= (h & ((1 << (this.DB - s)) - 1)) << s),
                      (this[this.t++] = h >> (this.DB - s)))
                    : (this[this.t - 1] |= h << s),
                (s += e) >= this.DB && (s -= this.DB));
          }
          (8 == e &&
            0 != (128 & t[0]) &&
            ((this.s = -1), s > 0 && (this[this.t - 1] |= ((1 << (this.DB - s)) - 1) << s)),
            this.clamp(),
            o && r.ZERO.subTo(this, this));
        }
        function c() {
          for (var t = this.s & this.DM; this.t > 0 && this[this.t - 1] == t; ) --this.t;
        }
        function p(t) {
          if (this.s < 0) return '-' + this.negate().toString(t);
          var r;
          if (16 == t) r = 4;
          else if (8 == t) r = 3;
          else if (2 == t) r = 1;
          else if (32 == t) r = 5;
          else {
            if (4 != t) return this.toRadix(t);
            r = 2;
          }
          var i,
            e = (1 << r) - 1,
            n = !1,
            o = '',
            u = this.t,
            h = this.DB - ((u * this.DB) % r);
          if (u-- > 0)
            for (h < this.DB && (i = this[u] >> h) > 0 && ((n = !0), (o = s(i))); u >= 0; )
              (h < r
                ? ((i = (this[u] & ((1 << h) - 1)) << (r - h)),
                  (i |= this[--u] >> (h += this.DB - r)))
                : ((i = (this[u] >> (h -= r)) & e), h <= 0 && ((h += this.DB), --u)),
                i > 0 && (n = !0),
                n && (o += s(i)));
          return n ? o : '0';
        }
        function v() {
          var t = i();
          return (r.ZERO.subTo(this, t), t);
        }
        function y() {
          return this.s < 0 ? this.negate() : this;
        }
        function m(t) {
          var r = this.s - t.s;
          if (0 != r) return r;
          var i = this.t;
          if (0 != (r = i - t.t)) return this.s < 0 ? -r : r;
          for (; --i >= 0; ) if (0 != (r = this[i] - t[i])) return r;
          return 0;
        }
        function g(t) {
          var r,
            i = 1;
          return (
            0 != (r = t >>> 16) && ((t = r), (i += 16)),
            0 != (r = t >> 8) && ((t = r), (i += 8)),
            0 != (r = t >> 4) && ((t = r), (i += 4)),
            0 != (r = t >> 2) && ((t = r), (i += 2)),
            0 != (r = t >> 1) && ((t = r), (i += 1)),
            i
          );
        }
        function d() {
          return this.t <= 0
            ? 0
            : this.DB * (this.t - 1) + g(this[this.t - 1] ^ (this.s & this.DM));
        }
        function T(t, r) {
          var i;
          for (i = this.t - 1; i >= 0; --i) r[i + t] = this[i];
          for (i = t - 1; i >= 0; --i) r[i] = 0;
          ((r.t = this.t + t), (r.s = this.s));
        }
        function F(t, r) {
          for (var i = t; i < this.t; ++i) r[i - t] = this[i];
          ((r.t = Math.max(this.t - t, 0)), (r.s = this.s));
        }
        function b(t, r) {
          var i,
            e = t % this.DB,
            n = this.DB - e,
            o = (1 << n) - 1,
            s = Math.floor(t / this.DB),
            u = (this.s << e) & this.DM;
          for (i = this.t - 1; i >= 0; --i)
            ((r[i + s + 1] = (this[i] >> n) | u), (u = (this[i] & o) << e));
          for (i = s - 1; i >= 0; --i) r[i] = 0;
          ((r[s] = u), (r.t = this.t + s + 1), (r.s = this.s), r.clamp());
        }
        function w(t, r) {
          r.s = this.s;
          var i = Math.floor(t / this.DB);
          if (i >= this.t) r.t = 0;
          else {
            var e = t % this.DB,
              n = this.DB - e,
              o = (1 << e) - 1;
            r[0] = this[i] >> e;
            for (var s = i + 1; s < this.t; ++s)
              ((r[s - i - 1] |= (this[s] & o) << n), (r[s - i] = this[s] >> e));
            (e > 0 && (r[this.t - i - 1] |= (this.s & o) << n), (r.t = this.t - i), r.clamp());
          }
        }
        function B(t, r) {
          for (var i = 0, e = 0, n = Math.min(t.t, this.t); i < n; )
            ((e += this[i] - t[i]), (r[i++] = e & this.DM), (e >>= this.DB));
          if (t.t < this.t) {
            for (e -= t.s; i < this.t; ) ((e += this[i]), (r[i++] = e & this.DM), (e >>= this.DB));
            e += this.s;
          } else {
            for (e += this.s; i < t.t; ) ((e -= t[i]), (r[i++] = e & this.DM), (e >>= this.DB));
            e -= t.s;
          }
          ((r.s = e < 0 ? -1 : 0),
            e < -1 ? (r[i++] = this.DV + e) : e > 0 && (r[i++] = e),
            (r.t = i),
            r.clamp());
        }
        function x(t, i) {
          var e = this.abs(),
            n = t.abs(),
            o = e.t;
          for (i.t = o + n.t; --o >= 0; ) i[o] = 0;
          for (o = 0; o < n.t; ++o) i[o + e.t] = e.am(0, n[o], i, o, 0, e.t);
          ((i.s = 0), i.clamp(), this.s != t.s && r.ZERO.subTo(i, i));
        }
        function D(t) {
          for (var r = this.abs(), i = (t.t = 2 * r.t); --i >= 0; ) t[i] = 0;
          for (i = 0; i < r.t - 1; ++i) {
            var e = r.am(i, r[i], t, 2 * i, 0, 1);
            (t[i + r.t] += r.am(i + 1, 2 * r[i], t, 2 * i + 1, e, r.t - i - 1)) >= r.DV &&
              ((t[i + r.t] -= r.DV), (t[i + r.t + 1] = 1));
          }
          (t.t > 0 && (t[t.t - 1] += r.am(i, r[i], t, 2 * i, 0, 1)), (t.s = 0), t.clamp());
        }
        function I(t, e, n) {
          var o = t.abs();
          if (!(o.t <= 0)) {
            var s = this.abs();
            if (s.t < o.t) return (null != e && e.fromInt(0), void (null != n && this.copyTo(n)));
            null == n && (n = i());
            var u = i(),
              h = this.s,
              a = t.s,
              f = this.DB - g(o[o.t - 1]);
            f > 0 ? (o.lShiftTo(f, u), s.lShiftTo(f, n)) : (o.copyTo(u), s.copyTo(n));
            var l = u.t,
              c = u[l - 1];
            if (0 != c) {
              var p = c * (1 << this.F1) + (l > 1 ? u[l - 2] >> this.F2 : 0),
                v = this.FV / p,
                y = (1 << this.F1) / p,
                m = 1 << this.F2,
                d = n.t,
                T = d - l,
                F = null == e ? i() : e;
              for (
                u.dlShiftTo(T, F),
                  n.compareTo(F) >= 0 && ((n[n.t++] = 1), n.subTo(F, n)),
                  r.ONE.dlShiftTo(l, F),
                  F.subTo(u, u);
                u.t < l;

              )
                u[u.t++] = 0;
              for (; --T >= 0; ) {
                var b = n[--d] == c ? this.DM : Math.floor(n[d] * v + (n[d - 1] + m) * y);
                if ((n[d] += u.am(0, b, n, T, 0, l)) < b)
                  for (u.dlShiftTo(T, F), n.subTo(F, n); n[d] < --b; ) n.subTo(F, n);
              }
              (null != e && (n.drShiftTo(l, e), h != a && r.ZERO.subTo(e, e)),
                (n.t = l),
                n.clamp(),
                f > 0 && n.rShiftTo(f, n),
                h < 0 && r.ZERO.subTo(n, n));
            }
          }
        }
        function q(t) {
          var e = i();
          return (
            this.abs().divRemTo(t, null, e),
            this.s < 0 && e.compareTo(r.ZERO) > 0 && t.subTo(e, e),
            e
          );
        }
        function S(t) {
          this.m = t;
        }
        function E(t) {
          return t.s < 0 || t.compareTo(this.m) >= 0 ? t.mod(this.m) : t;
        }
        function A(t) {
          return t;
        }
        function P(t) {
          t.divRemTo(this.m, null, t);
        }
        function O(t, r, i) {
          (t.multiplyTo(r, i), this.reduce(i));
        }
        function R(t, r) {
          (t.squareTo(r), this.reduce(r));
        }
        function M() {
          if (this.t < 1) return 0;
          var t = this[0];
          if (0 == (1 & t)) return 0;
          var r = 3 & t;
          return (
            (r = (r * (2 - (15 & t) * r)) & 15),
            (r = (r * (2 - (255 & t) * r)) & 255),
            (r = (r * (2 - (((65535 & t) * r) & 65535))) & 65535),
            (r = (r * (2 - ((t * r) % this.DV))) % this.DV),
            r > 0 ? this.DV - r : -r
          );
        }
        function C(t) {
          ((this.m = t),
            (this.mp = t.invDigit()),
            (this.mpl = 32767 & this.mp),
            (this.mph = this.mp >> 15),
            (this.um = (1 << (t.DB - 15)) - 1),
            (this.mt2 = 2 * t.t));
        }
        function H(t) {
          var e = i();
          return (
            t.abs().dlShiftTo(this.m.t, e),
            e.divRemTo(this.m, null, e),
            t.s < 0 && e.compareTo(r.ZERO) > 0 && this.m.subTo(e, e),
            e
          );
        }
        function k(t) {
          var r = i();
          return (t.copyTo(r), this.reduce(r), r);
        }
        function V(t) {
          for (; t.t <= this.mt2; ) t[t.t++] = 0;
          for (var r = 0; r < this.m.t; ++r) {
            var i = 32767 & t[r],
              e =
                (i * this.mpl + (((i * this.mph + (t[r] >> 15) * this.mpl) & this.um) << 15)) &
                t.DM;
            for (i = r + this.m.t, t[i] += this.m.am(0, e, t, r, 0, this.m.t); t[i] >= t.DV; )
              ((t[i] -= t.DV), t[++i]++);
          }
          (t.clamp(), t.drShiftTo(this.m.t, t), t.compareTo(this.m) >= 0 && t.subTo(this.m, t));
        }
        function N(t, r) {
          (t.squareTo(r), this.reduce(r));
        }
        function j(t, r, i) {
          (t.multiplyTo(r, i), this.reduce(i));
        }
        function L() {
          return 0 == (this.t > 0 ? 1 & this[0] : this.s);
        }
        function z(t, e) {
          if (t > 4294967295 || t < 1) return r.ONE;
          var n = i(),
            o = i(),
            s = e.convert(this),
            u = g(t) - 1;
          for (s.copyTo(n); --u >= 0; )
            if ((e.sqrTo(n, o), (t & (1 << u)) > 0)) e.mulTo(o, s, n);
            else {
              var h = n;
              ((n = o), (o = h));
            }
          return e.revert(n);
        }
        function K(t, r) {
          var i;
          return ((i = t < 256 || r.isEven() ? new S(r) : new C(r)), this.exp(t, i));
        }
        function Z() {
          var t = i();
          return (this.copyTo(t), t);
        }
        function U() {
          if (this.s < 0) {
            if (1 == this.t) return this[0] - this.DV;
            if (0 == this.t) return -1;
          } else {
            if (1 == this.t) return this[0];
            if (0 == this.t) return 0;
          }
          return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0];
        }
        function _() {
          return 0 == this.t ? this.s : (this[0] << 24) >> 24;
        }
        function X() {
          return 0 == this.t ? this.s : (this[0] << 16) >> 16;
        }
        function Y(t) {
          return Math.floor((Math.LN2 * this.DB) / Math.log(t));
        }
        function G() {
          return this.s < 0 ? -1 : this.t <= 0 || (1 == this.t && this[0] <= 0) ? 0 : 1;
        }
        function J(t) {
          if ((null == t && (t = 10), 0 == this.signum() || t < 2 || t > 36)) return '0';
          var r = this.chunkSize(t),
            e = Math.pow(t, r),
            n = f(e),
            o = i(),
            s = i(),
            u = '';
          for (this.divRemTo(n, o, s); o.signum() > 0; )
            ((u = (e + s.intValue()).toString(t).substr(1) + u), o.divRemTo(n, o, s));
          return s.intValue().toString(t) + u;
        }
        function Q(t, i) {
          (this.fromInt(0), null == i && (i = 10));
          for (
            var e = this.chunkSize(i), n = Math.pow(i, e), o = !1, s = 0, h = 0, a = 0;
            a < t.length;
            ++a
          ) {
            var f = u(t, a);
            f < 0
              ? '-' == t.charAt(a) && 0 == this.signum() && (o = !0)
              : ((h = i * h + f),
                ++s >= e && (this.dMultiply(n), this.dAddOffset(h, 0), (s = 0), (h = 0)));
          }
          (s > 0 && (this.dMultiply(Math.pow(i, s)), this.dAddOffset(h, 0)),
            o && r.ZERO.subTo(this, this));
        }
        function W(t, i, e) {
          if ('number' == typeof i)
            if (t < 2) this.fromInt(1);
            else
              for (
                this.fromNumber(t, e),
                  this.testBit(t - 1) || this.bitwiseTo(r.ONE.shiftLeft(t - 1), st, this),
                  this.isEven() && this.dAddOffset(1, 0);
                !this.isProbablePrime(i);

              )
                (this.dAddOffset(2, 0),
                  this.bitLength() > t && this.subTo(r.ONE.shiftLeft(t - 1), this));
          else {
            var n = new Array(),
              o = 7 & t;
            ((n.length = 1 + (t >> 3)),
              i.nextBytes(n),
              o > 0 ? (n[0] &= (1 << o) - 1) : (n[0] = 0),
              this.fromString(n, 256));
          }
        }
        function $() {
          var t = this.t,
            r = new Array();
          r[0] = this.s;
          var i,
            e = this.DB - ((t * this.DB) % 8),
            n = 0;
          if (t-- > 0)
            for (
              e < this.DB &&
              (i = this[t] >> e) != (this.s & this.DM) >> e &&
              (r[n++] = i | (this.s << (this.DB - e)));
              t >= 0;

            )
              (e < 8
                ? ((i = (this[t] & ((1 << e) - 1)) << (8 - e)),
                  (i |= this[--t] >> (e += this.DB - 8)))
                : ((i = (this[t] >> (e -= 8)) & 255), e <= 0 && ((e += this.DB), --t)),
                0 != (128 & i) && (i |= -256),
                0 == n && (128 & this.s) != (128 & i) && ++n,
                (n > 0 || i != this.s) && (r[n++] = i));
          return r;
        }
        function tt(t) {
          return 0 == this.compareTo(t);
        }
        function rt(t) {
          return this.compareTo(t) < 0 ? this : t;
        }
        function it(t) {
          return this.compareTo(t) > 0 ? this : t;
        }
        function et(t, r, i) {
          var e,
            n,
            o = Math.min(t.t, this.t);
          for (e = 0; e < o; ++e) i[e] = r(this[e], t[e]);
          if (t.t < this.t) {
            for (n = t.s & this.DM, e = o; e < this.t; ++e) i[e] = r(this[e], n);
            i.t = this.t;
          } else {
            for (n = this.s & this.DM, e = o; e < t.t; ++e) i[e] = r(n, t[e]);
            i.t = t.t;
          }
          ((i.s = r(this.s, t.s)), i.clamp());
        }
        function nt(t, r) {
          return t & r;
        }
        function ot(t) {
          var r = i();
          return (this.bitwiseTo(t, nt, r), r);
        }
        function st(t, r) {
          return t | r;
        }
        function ut(t) {
          var r = i();
          return (this.bitwiseTo(t, st, r), r);
        }
        function ht(t, r) {
          return t ^ r;
        }
        function at(t) {
          var r = i();
          return (this.bitwiseTo(t, ht, r), r);
        }
        function ft(t, r) {
          return t & ~r;
        }
        function lt(t) {
          var r = i();
          return (this.bitwiseTo(t, ft, r), r);
        }
        function ct() {
          for (var t = i(), r = 0; r < this.t; ++r) t[r] = this.DM & ~this[r];
          return ((t.t = this.t), (t.s = ~this.s), t);
        }
        function pt(t) {
          var r = i();
          return (t < 0 ? this.rShiftTo(-t, r) : this.lShiftTo(t, r), r);
        }
        function vt(t) {
          var r = i();
          return (t < 0 ? this.lShiftTo(-t, r) : this.rShiftTo(t, r), r);
        }
        function yt(t) {
          if (0 == t) return -1;
          var r = 0;
          return (
            0 == (65535 & t) && ((t >>= 16), (r += 16)),
            0 == (255 & t) && ((t >>= 8), (r += 8)),
            0 == (15 & t) && ((t >>= 4), (r += 4)),
            0 == (3 & t) && ((t >>= 2), (r += 2)),
            0 == (1 & t) && ++r,
            r
          );
        }
        function mt() {
          for (var t = 0; t < this.t; ++t) if (0 != this[t]) return t * this.DB + yt(this[t]);
          return this.s < 0 ? this.t * this.DB : -1;
        }
        function gt(t) {
          for (var r = 0; 0 != t; ) ((t &= t - 1), ++r);
          return r;
        }
        function dt() {
          for (var t = 0, r = this.s & this.DM, i = 0; i < this.t; ++i) t += gt(this[i] ^ r);
          return t;
        }
        function Tt(t) {
          var r = Math.floor(t / this.DB);
          return r >= this.t ? 0 != this.s : 0 != (this[r] & (1 << t % this.DB));
        }
        function Ft(t, i) {
          var e = r.ONE.shiftLeft(t);
          return (this.bitwiseTo(e, i, e), e);
        }
        function bt(t) {
          return this.changeBit(t, st);
        }
        function wt(t) {
          return this.changeBit(t, ft);
        }
        function Bt(t) {
          return this.changeBit(t, ht);
        }
        function xt(t, r) {
          for (var i = 0, e = 0, n = Math.min(t.t, this.t); i < n; )
            ((e += this[i] + t[i]), (r[i++] = e & this.DM), (e >>= this.DB));
          if (t.t < this.t) {
            for (e += t.s; i < this.t; ) ((e += this[i]), (r[i++] = e & this.DM), (e >>= this.DB));
            e += this.s;
          } else {
            for (e += this.s; i < t.t; ) ((e += t[i]), (r[i++] = e & this.DM), (e >>= this.DB));
            e += t.s;
          }
          ((r.s = e < 0 ? -1 : 0),
            e > 0 ? (r[i++] = e) : e < -1 && (r[i++] = this.DV + e),
            (r.t = i),
            r.clamp());
        }
        function Dt(t) {
          var r = i();
          return (this.addTo(t, r), r);
        }
        function It(t) {
          var r = i();
          return (this.subTo(t, r), r);
        }
        function qt(t) {
          var r = i();
          return (this.multiplyTo(t, r), r);
        }
        function St() {
          var t = i();
          return (this.squareTo(t), t);
        }
        function Et(t) {
          var r = i();
          return (this.divRemTo(t, r, null), r);
        }
        function At(t) {
          var r = i();
          return (this.divRemTo(t, null, r), r);
        }
        function Pt(t) {
          var r = i(),
            e = i();
          return (this.divRemTo(t, r, e), new Array(r, e));
        }
        function Ot(t) {
          ((this[this.t] = this.am(0, t - 1, this, 0, 0, this.t)), ++this.t, this.clamp());
        }
        function Rt(t, r) {
          if (0 != t) {
            for (; this.t <= r; ) this[this.t++] = 0;
            for (this[r] += t; this[r] >= this.DV; )
              ((this[r] -= this.DV), ++r >= this.t && (this[this.t++] = 0), ++this[r]);
          }
        }
        function Mt() {}
        function Ct(t) {
          return t;
        }
        function Ht(t, r, i) {
          t.multiplyTo(r, i);
        }
        function kt(t, r) {
          t.squareTo(r);
        }
        function Vt(t) {
          return this.exp(t, new Mt());
        }
        function Nt(t, r, i) {
          var e,
            n = Math.min(this.t + t.t, r);
          for (i.s = 0, i.t = n; n > 0; ) i[--n] = 0;
          for (e = i.t - this.t; n < e; ++n) i[n + this.t] = this.am(0, t[n], i, n, 0, this.t);
          for (e = Math.min(t.t, r); n < e; ++n) this.am(0, t[n], i, n, 0, r - n);
          i.clamp();
        }
        function jt(t, r, i) {
          --r;
          var e = (i.t = this.t + t.t - r);
          for (i.s = 0; --e >= 0; ) i[e] = 0;
          for (e = Math.max(r - this.t, 0); e < t.t; ++e)
            i[this.t + e - r] = this.am(r - e, t[e], i, 0, 0, this.t + e - r);
          (i.clamp(), i.drShiftTo(1, i));
        }
        function Lt(t) {
          ((this.r2 = i()),
            (this.q3 = i()),
            r.ONE.dlShiftTo(2 * t.t, this.r2),
            (this.mu = this.r2.divide(t)),
            (this.m = t));
        }
        function zt(t) {
          if (t.s < 0 || t.t > 2 * this.m.t) return t.mod(this.m);
          if (t.compareTo(this.m) < 0) return t;
          var r = i();
          return (t.copyTo(r), this.reduce(r), r);
        }
        function Kt(t) {
          return t;
        }
        function Zt(t) {
          for (
            t.drShiftTo(this.m.t - 1, this.r2),
              t.t > this.m.t + 1 && ((t.t = this.m.t + 1), t.clamp()),
              this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3),
              this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);
            t.compareTo(this.r2) < 0;

          )
            t.dAddOffset(1, this.m.t + 1);
          for (t.subTo(this.r2, t); t.compareTo(this.m) >= 0; ) t.subTo(this.m, t);
        }
        function Ut(t, r) {
          (t.squareTo(r), this.reduce(r));
        }
        function _t(t, r, i) {
          (t.multiplyTo(r, i), this.reduce(i));
        }
        function Xt(t, r) {
          var e,
            n,
            o = t.bitLength(),
            s = f(1);
          if (o <= 0) return s;
          ((e = o < 18 ? 1 : o < 48 ? 3 : o < 144 ? 4 : o < 768 ? 5 : 6),
            (n = o < 8 ? new S(r) : r.isEven() ? new Lt(r) : new C(r)));
          var u = new Array(),
            h = 3,
            a = e - 1,
            l = (1 << e) - 1;
          if (((u[1] = n.convert(this)), e > 1)) {
            var c = i();
            for (n.sqrTo(u[1], c); h <= l; ) ((u[h] = i()), n.mulTo(c, u[h - 2], u[h]), (h += 2));
          }
          var p,
            v,
            y = t.t - 1,
            m = !0,
            d = i();
          for (o = g(t[y]) - 1; y >= 0; ) {
            for (
              o >= a
                ? (p = (t[y] >> (o - a)) & l)
                : ((p = (t[y] & ((1 << (o + 1)) - 1)) << (a - o)),
                  y > 0 && (p |= t[y - 1] >> (this.DB + o - a))),
                h = e;
              0 == (1 & p);

            )
              ((p >>= 1), --h);
            if (((o -= h) < 0 && ((o += this.DB), --y), m)) (u[p].copyTo(s), (m = !1));
            else {
              for (; h > 1; ) (n.sqrTo(s, d), n.sqrTo(d, s), (h -= 2));
              (h > 0 ? n.sqrTo(s, d) : ((v = s), (s = d), (d = v)), n.mulTo(d, u[p], s));
            }
            for (; y >= 0 && 0 == (t[y] & (1 << o)); )
              (n.sqrTo(s, d), (v = s), (s = d), (d = v), --o < 0 && ((o = this.DB - 1), --y));
          }
          return n.revert(s);
        }
        function Yt(t) {
          var r = this.s < 0 ? this.negate() : this.clone(),
            i = t.s < 0 ? t.negate() : t.clone();
          if (r.compareTo(i) < 0) {
            var e = r;
            ((r = i), (i = e));
          }
          var n = r.getLowestSetBit(),
            o = i.getLowestSetBit();
          if (o < 0) return r;
          for (n < o && (o = n), o > 0 && (r.rShiftTo(o, r), i.rShiftTo(o, i)); r.signum() > 0; )
            ((n = r.getLowestSetBit()) > 0 && r.rShiftTo(n, r),
              (n = i.getLowestSetBit()) > 0 && i.rShiftTo(n, i),
              r.compareTo(i) >= 0
                ? (r.subTo(i, r), r.rShiftTo(1, r))
                : (i.subTo(r, i), i.rShiftTo(1, i)));
          return (o > 0 && i.lShiftTo(o, i), i);
        }
        function Gt(t) {
          if (t <= 0) return 0;
          var r = this.DV % t,
            i = this.s < 0 ? t - 1 : 0;
          if (this.t > 0)
            if (0 == r) i = this[0] % t;
            else for (var e = this.t - 1; e >= 0; --e) i = (r * i + this[e]) % t;
          return i;
        }
        function Jt(t) {
          var i = t.isEven();
          if ((this.isEven() && i) || 0 == t.signum()) return r.ZERO;
          for (
            var e = t.clone(), n = this.clone(), o = f(1), s = f(0), u = f(0), h = f(1);
            0 != e.signum();

          ) {
            for (; e.isEven(); )
              (e.rShiftTo(1, e),
                i
                  ? ((o.isEven() && s.isEven()) || (o.addTo(this, o), s.subTo(t, s)),
                    o.rShiftTo(1, o))
                  : s.isEven() || s.subTo(t, s),
                s.rShiftTo(1, s));
            for (; n.isEven(); )
              (n.rShiftTo(1, n),
                i
                  ? ((u.isEven() && h.isEven()) || (u.addTo(this, u), h.subTo(t, h)),
                    u.rShiftTo(1, u))
                  : h.isEven() || h.subTo(t, h),
                h.rShiftTo(1, h));
            e.compareTo(n) >= 0
              ? (e.subTo(n, e), i && o.subTo(u, o), s.subTo(h, s))
              : (n.subTo(e, n), i && u.subTo(o, u), h.subTo(s, h));
          }
          return 0 != n.compareTo(r.ONE)
            ? r.ZERO
            : h.compareTo(t) >= 0
              ? h.subtract(t)
              : h.signum() < 0
                ? (h.addTo(t, h), h.signum() < 0 ? h.add(t) : h)
                : h;
        }
        function Qt(t) {
          var r,
            i = this.abs();
          if (1 == i.t && i[0] <= gr[gr.length - 1]) {
            for (r = 0; r < gr.length; ++r) if (i[0] == gr[r]) return !0;
            return !1;
          }
          if (i.isEven()) return !1;
          for (r = 1; r < gr.length; ) {
            for (var e = gr[r], n = r + 1; n < gr.length && e < dr; ) e *= gr[n++];
            for (e = i.modInt(e); r < n; ) if (e % gr[r++] == 0) return !1;
          }
          return i.millerRabin(t);
        }
        function Wt(t) {
          var e = this.subtract(r.ONE),
            n = e.getLowestSetBit();
          if (n <= 0) return !1;
          var o = e.shiftRight(n);
          (t = (t + 1) >> 1) > gr.length && (t = gr.length);
          for (var s = i(), u = 0; u < t; ++u) {
            s.fromInt(gr[Math.floor(Math.random() * gr.length)]);
            var h = s.modPow(o, this);
            if (0 != h.compareTo(r.ONE) && 0 != h.compareTo(e)) {
              for (var a = 1; a++ < n && 0 != h.compareTo(e); )
                if (((h = h.modPowInt(2, this)), 0 == h.compareTo(r.ONE))) return !1;
              if (0 != h.compareTo(e)) return !1;
            }
          }
          return !0;
        }
        function $t(t) {
          ((yr[mr++] ^= 255 & t),
            (yr[mr++] ^= (t >> 8) & 255),
            (yr[mr++] ^= (t >> 16) & 255),
            (yr[mr++] ^= (t >> 24) & 255),
            mr >= wr && (mr -= wr));
        }
        function tr() {
          $t(new Date().getTime());
        }
        function rr() {
          if (null == vr) {
            for (tr(), vr = ur(), vr.init(yr), mr = 0; mr < yr.length; ++mr) yr[mr] = 0;
            mr = 0;
          }
          return vr.next();
        }
        function ir(t) {
          var r;
          for (r = 0; r < t.length; ++r) t[r] = rr();
        }
        function er() {}
        function nr() {
          ((this.i = 0), (this.j = 0), (this.S = new Array()));
        }
        function or(t) {
          var r, i, e;
          for (r = 0; r < 256; ++r) this.S[r] = r;
          for (i = 0, r = 0; r < 256; ++r)
            ((i = (i + this.S[r] + t[r % t.length]) & 255),
              (e = this.S[r]),
              (this.S[r] = this.S[i]),
              (this.S[i] = e));
          ((this.i = 0), (this.j = 0));
        }
        function sr() {
          var t;
          return (
            (this.i = (this.i + 1) & 255),
            (this.j = (this.j + this.S[this.i]) & 255),
            (t = this.S[this.i]),
            (this.S[this.i] = this.S[this.j]),
            (this.S[this.j] = t),
            this.S[(t + this.S[this.i]) & 255]
          );
        }
        function ur() {
          return new nr();
        }
        var hr,
          ar = 'undefined' != typeof navigator;
        (ar && 'Microsoft Internet Explorer' == navigator.appName
          ? ((r.prototype.am = n), (hr = 30))
          : ar && 'Netscape' != navigator.appName
            ? ((r.prototype.am = e), (hr = 26))
            : ((r.prototype.am = o), (hr = 28)),
          (r.prototype.DB = hr),
          (r.prototype.DM = (1 << hr) - 1),
          (r.prototype.DV = 1 << hr),
          (r.prototype.FV = Math.pow(2, 52)),
          (r.prototype.F1 = 52 - hr),
          (r.prototype.F2 = 2 * hr - 52));
        var fr,
          lr,
          cr = '0123456789abcdefghijklmnopqrstuvwxyz',
          pr = new Array();
        for (fr = '0'.charCodeAt(0), lr = 0; lr <= 9; ++lr) pr[fr++] = lr;
        for (fr = 'a'.charCodeAt(0), lr = 10; lr < 36; ++lr) pr[fr++] = lr;
        for (fr = 'A'.charCodeAt(0), lr = 10; lr < 36; ++lr) pr[fr++] = lr;
        ((S.prototype.convert = E),
          (S.prototype.revert = A),
          (S.prototype.reduce = P),
          (S.prototype.mulTo = O),
          (S.prototype.sqrTo = R),
          (C.prototype.convert = H),
          (C.prototype.revert = k),
          (C.prototype.reduce = V),
          (C.prototype.mulTo = j),
          (C.prototype.sqrTo = N),
          (r.prototype.copyTo = h),
          (r.prototype.fromInt = a),
          (r.prototype.fromString = l),
          (r.prototype.clamp = c),
          (r.prototype.dlShiftTo = T),
          (r.prototype.drShiftTo = F),
          (r.prototype.lShiftTo = b),
          (r.prototype.rShiftTo = w),
          (r.prototype.subTo = B),
          (r.prototype.multiplyTo = x),
          (r.prototype.squareTo = D),
          (r.prototype.divRemTo = I),
          (r.prototype.invDigit = M),
          (r.prototype.isEven = L),
          (r.prototype.exp = z),
          (r.prototype.toString = p),
          (r.prototype.negate = v),
          (r.prototype.abs = y),
          (r.prototype.compareTo = m),
          (r.prototype.bitLength = d),
          (r.prototype.mod = q),
          (r.prototype.modPowInt = K),
          (r.ZERO = f(0)),
          (r.ONE = f(1)),
          (Mt.prototype.convert = Ct),
          (Mt.prototype.revert = Ct),
          (Mt.prototype.mulTo = Ht),
          (Mt.prototype.sqrTo = kt),
          (Lt.prototype.convert = zt),
          (Lt.prototype.revert = Kt),
          (Lt.prototype.reduce = Zt),
          (Lt.prototype.mulTo = _t),
          (Lt.prototype.sqrTo = Ut));
        var vr,
          yr,
          mr,
          gr = [
            2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,
            89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179,
            181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271,
            277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379,
            383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479,
            487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,
            601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,
            709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823,
            827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941,
            947, 953, 967, 971, 977, 983, 991, 997,
          ],
          dr = (1 << 26) / gr[gr.length - 1];
        if (
          ((r.prototype.chunkSize = Y),
          (r.prototype.toRadix = J),
          (r.prototype.fromRadix = Q),
          (r.prototype.fromNumber = W),
          (r.prototype.bitwiseTo = et),
          (r.prototype.changeBit = Ft),
          (r.prototype.addTo = xt),
          (r.prototype.dMultiply = Ot),
          (r.prototype.dAddOffset = Rt),
          (r.prototype.multiplyLowerTo = Nt),
          (r.prototype.multiplyUpperTo = jt),
          (r.prototype.modInt = Gt),
          (r.prototype.millerRabin = Wt),
          (r.prototype.clone = Z),
          (r.prototype.intValue = U),
          (r.prototype.byteValue = _),
          (r.prototype.shortValue = X),
          (r.prototype.signum = G),
          (r.prototype.toByteArray = $),
          (r.prototype.equals = tt),
          (r.prototype.min = rt),
          (r.prototype.max = it),
          (r.prototype.and = ot),
          (r.prototype.or = ut),
          (r.prototype.xor = at),
          (r.prototype.andNot = lt),
          (r.prototype.not = ct),
          (r.prototype.shiftLeft = pt),
          (r.prototype.shiftRight = vt),
          (r.prototype.getLowestSetBit = mt),
          (r.prototype.bitCount = dt),
          (r.prototype.testBit = Tt),
          (r.prototype.setBit = bt),
          (r.prototype.clearBit = wt),
          (r.prototype.flipBit = Bt),
          (r.prototype.add = Dt),
          (r.prototype.subtract = It),
          (r.prototype.multiply = qt),
          (r.prototype.divide = Et),
          (r.prototype.remainder = At),
          (r.prototype.divideAndRemainder = Pt),
          (r.prototype.modPow = Xt),
          (r.prototype.modInverse = Jt),
          (r.prototype.pow = Vt),
          (r.prototype.gcd = Yt),
          (r.prototype.isProbablePrime = Qt),
          (r.prototype.square = St),
          (r.prototype.Barrett = Lt),
          null == yr)
        ) {
          var Tr;
          if (((yr = new Array()), (mr = 0), 'undefined' != typeof window && window.crypto))
            if (window.crypto.getRandomValues) {
              var Fr = new Uint8Array(32);
              for (window.crypto.getRandomValues(Fr), Tr = 0; Tr < 32; ++Tr) yr[mr++] = Fr[Tr];
            } else if ('Netscape' == navigator.appName && navigator.appVersion < '5') {
              var br = window.crypto.random(32);
              for (Tr = 0; Tr < br.length; ++Tr) yr[mr++] = 255 & br.charCodeAt(Tr);
            }
          for (; mr < wr; )
            ((Tr = Math.floor(65536 * Math.random())),
              (yr[mr++] = Tr >>> 8),
              (yr[mr++] = 255 & Tr));
          ((mr = 0), tr());
        }
        ((er.prototype.nextBytes = ir), (nr.prototype.init = or), (nr.prototype.next = sr));
        var wr = 256;
        t.exports = { default: r, BigInteger: r, SecureRandom: er };
      }).call(this);
    },
    function (t, r, i) {
      'use strict';
      function e(t) {
        if (Array.isArray(t)) {
          for (var r = 0, i = Array(t.length); r < t.length; r++) i[r] = t[r];
          return i;
        }
        return Array.from(t);
      }
      function n(t, r) {
        var i = 31 & r;
        return (t << i) | (t >>> (32 - i));
      }
      function o(t, r) {
        for (var i = [], e = t.length - 1; e >= 0; e--) i[e] = 255 & (t[e] ^ r[e]);
        return i;
      }
      function s(t) {
        return t ^ n(t, 9) ^ n(t, 17);
      }
      function u(t) {
        return t ^ n(t, 15) ^ n(t, 23);
      }
      function h(t) {
        var r = 8 * t.length,
          i = r % 512;
        i = i >= 448 ? 512 - (i % 448) - 1 : 448 - i - 1;
        for (var o = new Array((i - 7) / 8), h = new Array(8), a = 0, c = o.length; a < c; a++)
          o[a] = 0;
        for (var p = 0, v = h.length; p < v; p++) h[p] = 0;
        r = r.toString(2);
        for (var y = 7; y >= 0; y--)
          if (r.length > 8) {
            var m = r.length - 8;
            ((h[y] = parseInt(r.substr(m), 2)), (r = r.substr(0, m)));
          } else r.length > 0 && ((h[y] = parseInt(r, 2)), (r = ''));
        for (
          var g = new Uint8Array([].concat(e(t), [128], o, h)),
            d = new DataView(g.buffer, 0),
            T = g.length / 64,
            F = new Uint32Array([
              1937774191, 1226093241, 388252375, 3666478592, 2842636476, 372324522, 3817729613,
              2969243214,
            ]),
            b = 0;
          b < T;
          b++
        ) {
          (f.fill(0), l.fill(0));
          for (var w = 16 * b, B = 0; B < 16; B++) f[B] = d.getUint32(4 * (w + B), !1);
          for (var x = 16; x < 68; x++)
            f[x] = u(f[x - 16] ^ f[x - 9] ^ n(f[x - 3], 15)) ^ n(f[x - 13], 7) ^ f[x - 6];
          for (var D = 0; D < 64; D++) l[D] = f[D] ^ f[D + 4];
          for (
            var I = F[0],
              q = F[1],
              S = F[2],
              E = F[3],
              A = F[4],
              P = F[5],
              O = F[6],
              R = F[7],
              M = void 0,
              C = void 0,
              H = void 0,
              k = void 0,
              V = void 0,
              N = 0;
            N < 64;
            N++
          )
            ((V = N >= 0 && N <= 15 ? 2043430169 : 2055708042),
              (M = n(n(I, 12) + A + n(V, N), 7)),
              (C = M ^ n(I, 12)),
              (H = (N >= 0 && N <= 15 ? I ^ q ^ S : (I & q) | (I & S) | (q & S)) + E + C + l[N]),
              (k = (N >= 0 && N <= 15 ? A ^ P ^ O : (A & P) | (~A & O)) + R + M + f[N]),
              (E = S),
              (S = n(q, 9)),
              (q = I),
              (I = H),
              (R = O),
              (O = n(P, 19)),
              (P = A),
              (A = s(k)));
          ((F[0] ^= I),
            (F[1] ^= q),
            (F[2] ^= S),
            (F[3] ^= E),
            (F[4] ^= A),
            (F[5] ^= P),
            (F[6] ^= O),
            (F[7] ^= R));
        }
        for (var j = [], L = 0, z = F.length; L < z; L++) {
          var K = F[L];
          j.push((4278190080 & K) >>> 24, (16711680 & K) >>> 16, (65280 & K) >>> 8, 255 & K);
        }
        return j;
      }
      function a(t, r) {
        for (r.length > c && (r = h(r)); r.length < c; ) r.push(0);
        var i = o(r, p),
          n = o(r, v),
          s = h([].concat(e(i), e(t)));
        return h([].concat(e(n), e(s)));
      }
      for (
        var f = new Uint32Array(68),
          l = new Uint32Array(64),
          c = 64,
          p = new Uint8Array(c),
          v = new Uint8Array(c),
          y = 0;
        y < c;
        y++
      )
        ((p[y] = 54), (v[y] = 92));
      t.exports = { sm3: h, hmac: a };
    },
    function (t, r, i) {
      'use strict';
      function e(t) {
        if (Array.isArray(t)) {
          for (var r = 0, i = Array(t.length); r < t.length; r++) i[r] = t[r];
          return i;
        }
        return Array.from(t);
      }
      function n(t, r) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        ((t = 'string' == typeof t ? m.hexToArray(m.utf8ToHex(t)) : Array.prototype.slice.call(t)),
          (r = m.getGlobalCurve().decodePointHex(r)));
        var n = m.generateKeyPairHex(),
          o = new c(n.privateKey, 16),
          s = n.publicKey;
        s.length > 128 && (s = s.substr(s.length - 128));
        var u = r.multiply(o),
          h = m.hexToArray(m.leftPad(u.getX().toBigInteger().toRadix(16), 64)),
          a = m.hexToArray(m.leftPad(u.getY().toBigInteger().toRadix(16), 64)),
          f = m.arrayToHex(g([].concat(h, t, a))),
          l = 1,
          p = 0,
          v = [],
          y = [].concat(h, a),
          d = function () {
            ((v = g([].concat(e(y), [(l >> 24) & 255, (l >> 16) & 255, (l >> 8) & 255, 255 & l]))),
              l++,
              (p = 0));
          };
        d();
        for (var T = 0, F = t.length; T < F; T++) (p === v.length && d(), (t[T] ^= 255 & v[p++]));
        var b = m.arrayToHex(t);
        return i === w ? s + b + f : s + f + b;
      }
      function o(t, r) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
          n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
          o = n.output,
          s = void 0 === o ? 'string' : o;
        r = new c(r, 16);
        var u = t.substr(128, 64),
          h = t.substr(192);
        i === w && ((u = t.substr(t.length - 64)), (h = t.substr(128, t.length - 128 - 64)));
        var a = m.hexToArray(h),
          f = m.getGlobalCurve().decodePointHex('04' + t.substr(0, 128)),
          l = f.multiply(r),
          p = m.hexToArray(m.leftPad(l.getX().toBigInteger().toRadix(16), 64)),
          v = m.hexToArray(m.leftPad(l.getY().toBigInteger().toRadix(16), 64)),
          y = 1,
          d = 0,
          T = [],
          F = [].concat(p, v),
          b = function () {
            ((T = g([].concat(e(F), [(y >> 24) & 255, (y >> 16) & 255, (y >> 8) & 255, 255 & y]))),
              y++,
              (d = 0));
          };
        b();
        for (var B = 0, x = a.length; B < x; B++) (d === T.length && b(), (a[B] ^= 255 & T[d++]));
        return m.arrayToHex(g([].concat(p, a, v))) === u.toLowerCase()
          ? 'array' === s
            ? a
            : m.arrayToUtf8(a)
          : 'array' === s
            ? []
            : '';
      }
      function s(t, r) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
          e = i.pointPool,
          n = i.der,
          o = i.hash,
          s = i.publicKey,
          u = i.userId,
          l = 'string' == typeof t ? m.utf8ToHex(t) : m.arrayToHex(t);
        o && ((s = s || a(r)), (l = h(l, s, u)));
        var p = new c(r, 16),
          y = new c(l, 16),
          g = null,
          d = null,
          T = null;
        do {
          do {
            var F = void 0;
            ((F = e && e.length ? e.pop() : f()), (g = F.k), (d = y.add(F.x1).mod(b)));
          } while (d.equals(c.ZERO) || d.add(g).equals(b));
          T = p
            .add(c.ONE)
            .modInverse(b)
            .multiply(g.subtract(d.multiply(p)))
            .mod(b);
        } while (T.equals(c.ZERO));
        return n ? v(d, T) : m.leftPad(d.toString(16), 64) + m.leftPad(T.toString(16), 64);
      }
      function u(t, r, i) {
        var e = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
          n = e.der,
          o = e.hash,
          s = e.userId,
          u = 'string' == typeof t ? m.utf8ToHex(t) : m.arrayToHex(t);
        o && (u = h(u, i, s));
        var a = void 0,
          f = void 0;
        if (n) {
          var l = y(r);
          ((a = l.r), (f = l.s));
        } else ((a = new c(r.substring(0, 64), 16)), (f = new c(r.substring(64), 16)));
        var p = F.decodePointHex(i),
          v = new c(u, 16),
          g = a.add(f).mod(b);
        if (g.equals(c.ZERO)) return !1;
        var d = T.multiply(f).add(p.multiply(g)),
          w = v.add(d.getX().toBigInteger()).mod(b);
        return a.equals(w);
      }
      function h(t, r) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : '1234567812345678';
        i = m.utf8ToHex(i);
        var e = m.leftPad(T.curve.a.toBigInteger().toRadix(16), 64),
          n = m.leftPad(T.curve.b.toBigInteger().toRadix(16), 64),
          o = m.leftPad(T.getX().toBigInteger().toRadix(16), 64),
          s = m.leftPad(T.getY().toBigInteger().toRadix(16), 64),
          u = void 0,
          h = void 0;
        if (128 === r.length) ((u = r.substr(0, 64)), (h = r.substr(64, 64)));
        else {
          var a = T.curve.decodePointHex(r);
          ((u = m.leftPad(a.getX().toBigInteger().toRadix(16), 64)),
            (h = m.leftPad(a.getY().toBigInteger().toRadix(16), 64)));
        }
        var f = m.hexToArray(i + e + n + o + s + u + h),
          l = 4 * i.length;
        (f.unshift(255 & l), f.unshift((l >> 8) & 255));
        var c = g(f);
        return m.arrayToHex(g(c.concat(m.hexToArray(t))));
      }
      function a(t) {
        var r = T.multiply(new c(t, 16));
        return (
          '04' +
          m.leftPad(r.getX().toBigInteger().toString(16), 64) +
          m.leftPad(r.getY().toBigInteger().toString(16), 64)
        );
      }
      function f() {
        var t = m.generateKeyPairHex(),
          r = F.decodePointHex(t.publicKey);
        return ((t.k = new c(t.privateKey, 16)), (t.x1 = r.getX().toBigInteger()), t);
      }
      var l = i(0),
        c = l.BigInteger,
        p = i(3),
        v = p.encodeDer,
        y = p.decodeDer,
        m = i(4),
        g = i(1).sm3,
        d = m.generateEcparam(),
        T = d.G,
        F = d.curve,
        b = d.n,
        w = 0;
      t.exports = {
        generateKeyPairHex: m.generateKeyPairHex,
        compressPublicKeyHex: m.compressPublicKeyHex,
        comparePublicKeyHex: m.comparePublicKeyHex,
        doEncrypt: n,
        doDecrypt: o,
        doSignature: s,
        doVerifySignature: u,
        getPublicKeyFromPrivateKey: a,
        getPoint: f,
        verifyPublicKey: m.verifyPublicKey,
      };
    },
    function (t, r, i) {
      'use strict';
      function e(t, r) {
        if (!t)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !r || ('object' != typeof r && 'function' != typeof r) ? t : r;
      }
      function n(t, r) {
        if ('function' != typeof r && null !== r)
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof r,
          );
        ((t.prototype = Object.create(r && r.prototype, {
          constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 },
        })),
          r && (Object.setPrototypeOf ? Object.setPrototypeOf(t, r) : (t.__proto__ = r)));
      }
      function o(t, r) {
        if (!(t instanceof r)) throw new TypeError('Cannot call a class as a function');
      }
      function s(t) {
        var r = t.toString(16);
        if ('-' !== r[0]) r.length % 2 == 1 ? (r = '0' + r) : r.match(/^[0-7]/) || (r = '00' + r);
        else {
          r = r.substr(1);
          var i = r.length;
          i % 2 == 1 ? (i += 1) : r.match(/^[0-7]/) || (i += 2);
          for (var e = '', n = 0; n < i; n++) e += 'f';
          ((e = new c(e, 16)), (r = e.xor(t).add(c.ONE)), (r = r.toString(16).replace(/^-/, '')));
        }
        return r;
      }
      function u(t, r) {
        return +t[r + 2] < 8 ? 1 : 128 & +t.substr(r + 2, 2);
      }
      function h(t, r) {
        var i = u(t, r),
          e = t.substr(r + 2, 2 * i);
        return e ? (+e[0] < 8 ? new c(e, 16) : new c(e.substr(2), 16)).intValue() : -1;
      }
      function a(t, r) {
        return r + 2 * (u(t, r) + 1);
      }
      var f = (function () {
          function t(t, r) {
            for (var i = 0; i < r.length; i++) {
              var e = r[i];
              ((e.enumerable = e.enumerable || !1),
                (e.configurable = !0),
                'value' in e && (e.writable = !0),
                Object.defineProperty(t, e.key, e));
            }
          }
          return function (r, i, e) {
            return (i && t(r.prototype, i), e && t(r, e), r);
          };
        })(),
        l = i(0),
        c = l.BigInteger,
        p = (function () {
          function t() {
            (o(this, t), (this.tlv = null), (this.t = '00'), (this.l = '00'), (this.v = ''));
          }
          return (
            f(t, [
              {
                key: 'getEncodedHex',
                value: function () {
                  return (
                    this.tlv ||
                      ((this.v = this.getValue()),
                      (this.l = this.getLength()),
                      (this.tlv = this.t + this.l + this.v)),
                    this.tlv
                  );
                },
              },
              {
                key: 'getLength',
                value: function () {
                  var t = this.v.length / 2,
                    r = t.toString(16);
                  return (
                    r.length % 2 == 1 && (r = '0' + r),
                    t < 128 ? r : (128 + r.length / 2).toString(16) + r
                  );
                },
              },
              {
                key: 'getValue',
                value: function () {
                  return '';
                },
              },
            ]),
            t
          );
        })(),
        v = (function (t) {
          function r(t) {
            o(this, r);
            var i = e(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this));
            return ((i.t = '02'), t && (i.v = s(t)), i);
          }
          return (
            n(r, t),
            f(r, [
              {
                key: 'getValue',
                value: function () {
                  return this.v;
                },
              },
            ]),
            r
          );
        })(p),
        y = (function (t) {
          function r(t) {
            o(this, r);
            var i = e(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this));
            return ((i.t = '30'), (i.asn1Array = t), i);
          }
          return (
            n(r, t),
            f(r, [
              {
                key: 'getValue',
                value: function () {
                  return (
                    (this.v = this.asn1Array
                      .map(function (t) {
                        return t.getEncodedHex();
                      })
                      .join('')),
                    this.v
                  );
                },
              },
            ]),
            r
          );
        })(p);
      t.exports = {
        encodeDer: function (t, r) {
          var i = new v(t),
            e = new v(r);
          return new y([i, e]).getEncodedHex();
        },
        decodeDer: function (t) {
          var r = a(t, 0),
            i = a(t, r),
            e = h(t, r),
            n = t.substr(i, 2 * e),
            o = i + n.length,
            s = a(t, o),
            u = h(t, o),
            f = t.substr(s, 2 * u);
          return { r: new c(n, 16), s: new c(f, 16) };
        },
      };
    },
    function (t, r, i) {
      'use strict';
      function e() {
        return b;
      }
      function n() {
        var t = new y('FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF', 16),
          r = new y('FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFC', 16),
          i = new y('28E9FA9E9D9F5E344D5A9E4BCF6509A7F39789F515AB8F92DDBCBD414D940E93', 16),
          e = new d(t, r, i);
        return {
          curve: e,
          G: e.decodePointHex(
            '0432C4AE2C1F1981195F9904466A39C9948FE30BBFF2660BE1715A4589334C74C7BC3736A2F4F6779C59BDCEE36B692153D0A9877CC62A474002DF32E52139F0A0',
          ),
          n: new y('FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFF7203DF6B21C6052B53BBF40939D54123', 16),
        };
      }
      function o(t, r, i) {
        var e = t ? new y(t, r, i) : new y(B.bitLength(), T),
          n = e.mod(B.subtract(y.ONE)).add(y.ONE),
          o = h(n.toString(16), 64),
          s = w.multiply(n);
        return {
          privateKey: o,
          publicKey:
            '04' +
            h(s.getX().toBigInteger().toString(16), 64) +
            h(s.getY().toBigInteger().toString(16), 64),
        };
      }
      function s(t) {
        if (130 !== t.length) throw new Error('Invalid public key to compress');
        var r = (t.length - 2) / 2,
          i = t.substr(2, r),
          e = new y(t.substr(r + 2, r), 16),
          n = '03';
        return (e.mod(new y('2')).equals(y.ZERO) && (n = '02'), n + i);
      }
      function u(t) {
        t = unescape(encodeURIComponent(t));
        for (var r = t.length, i = [], e = 0; e < r; e++)
          i[e >>> 2] |= (255 & t.charCodeAt(e)) << (24 - (e % 4) * 8);
        for (var n = [], o = 0; o < r; o++) {
          var s = (i[o >>> 2] >>> (24 - (o % 4) * 8)) & 255;
          (n.push((s >>> 4).toString(16)), n.push((15 & s).toString(16)));
        }
        return n.join('');
      }
      function h(t, r) {
        return t.length >= r ? t : new Array(r - t.length + 1).join('0') + t;
      }
      function a(t) {
        return t
          .map(function (t) {
            return ((t = t.toString(16)), 1 === t.length ? '0' + t : t);
          })
          .join('');
      }
      function f(t) {
        for (var r = [], i = 0, e = 0; e < 2 * t.length; e += 2)
          ((r[e >>> 3] |= parseInt(t[i], 10) << (24 - (e % 8) * 4)), i++);
        try {
          for (var n = [], o = 0; o < t.length; o++) {
            var s = (r[o >>> 2] >>> (24 - (o % 4) * 8)) & 255;
            n.push(String.fromCharCode(s));
          }
          return decodeURIComponent(escape(n.join('')));
        } catch (t) {
          throw new Error('Malformed UTF-8 data');
        }
      }
      function l(t) {
        var r = [],
          i = t.length;
        (i % 2 != 0 && (t = h(t, i + 1)), (i = t.length));
        for (var e = 0; e < i; e += 2) r.push(parseInt(t.substr(e, 2), 16));
        return r;
      }
      function c(t) {
        var r = b.decodePointHex(t);
        if (!r) return !1;
        var i = r.getX();
        return r
          .getY()
          .square()
          .equals(i.multiply(i.square()).add(i.multiply(b.a)).add(b.b));
      }
      function p(t, r) {
        var i = b.decodePointHex(t);
        if (!i) return !1;
        var e = b.decodePointHex(r);
        return !!e && i.equals(e);
      }
      var v = i(0),
        y = v.BigInteger,
        m = v.SecureRandom,
        g = i(5),
        d = g.ECCurveFp,
        T = new m(),
        F = n(),
        b = F.curve,
        w = F.G,
        B = F.n;
      t.exports = {
        getGlobalCurve: e,
        generateEcparam: n,
        generateKeyPairHex: o,
        compressPublicKeyHex: s,
        utf8ToHex: u,
        leftPad: h,
        arrayToHex: a,
        arrayToUtf8: f,
        hexToArray: l,
        verifyPublicKey: c,
        comparePublicKeyHex: p,
      };
    },
    function (t, r, i) {
      'use strict';
      function e(t, r) {
        if (!(t instanceof r)) throw new TypeError('Cannot call a class as a function');
      }
      var n = (function () {
          function t(t, r) {
            for (var i = 0; i < r.length; i++) {
              var e = r[i];
              ((e.enumerable = e.enumerable || !1),
                (e.configurable = !0),
                'value' in e && (e.writable = !0),
                Object.defineProperty(t, e.key, e));
            }
          }
          return function (r, i, e) {
            return (i && t(r.prototype, i), e && t(r, e), r);
          };
        })(),
        o = i(0),
        s = o.BigInteger,
        u = new s('2'),
        h = new s('3'),
        a = (function () {
          function t(r, i) {
            (e(this, t), (this.x = i), (this.q = r));
          }
          return (
            n(t, [
              {
                key: 'equals',
                value: function (t) {
                  return t === this || (this.q.equals(t.q) && this.x.equals(t.x));
                },
              },
              {
                key: 'toBigInteger',
                value: function () {
                  return this.x;
                },
              },
              {
                key: 'negate',
                value: function () {
                  return new t(this.q, this.x.negate().mod(this.q));
                },
              },
              {
                key: 'add',
                value: function (r) {
                  return new t(this.q, this.x.add(r.toBigInteger()).mod(this.q));
                },
              },
              {
                key: 'subtract',
                value: function (r) {
                  return new t(this.q, this.x.subtract(r.toBigInteger()).mod(this.q));
                },
              },
              {
                key: 'multiply',
                value: function (r) {
                  return new t(this.q, this.x.multiply(r.toBigInteger()).mod(this.q));
                },
              },
              {
                key: 'divide',
                value: function (r) {
                  return new t(
                    this.q,
                    this.x.multiply(r.toBigInteger().modInverse(this.q)).mod(this.q),
                  );
                },
              },
              {
                key: 'square',
                value: function () {
                  return new t(this.q, this.x.square().mod(this.q));
                },
              },
            ]),
            t
          );
        })(),
        f = (function () {
          function t(r, i, n, o) {
            (e(this, t),
              (this.curve = r),
              (this.x = i),
              (this.y = n),
              (this.z = null == o ? s.ONE : o),
              (this.zinv = null));
          }
          return (
            n(t, [
              {
                key: 'getX',
                value: function () {
                  return (
                    null === this.zinv && (this.zinv = this.z.modInverse(this.curve.q)),
                    this.curve.fromBigInteger(
                      this.x.toBigInteger().multiply(this.zinv).mod(this.curve.q),
                    )
                  );
                },
              },
              {
                key: 'getY',
                value: function () {
                  return (
                    null === this.zinv && (this.zinv = this.z.modInverse(this.curve.q)),
                    this.curve.fromBigInteger(
                      this.y.toBigInteger().multiply(this.zinv).mod(this.curve.q),
                    )
                  );
                },
              },
              {
                key: 'equals',
                value: function (t) {
                  return (
                    t === this ||
                    (this.isInfinity()
                      ? t.isInfinity()
                      : t.isInfinity()
                        ? this.isInfinity()
                        : !!t.y
                            .toBigInteger()
                            .multiply(this.z)
                            .subtract(this.y.toBigInteger().multiply(t.z))
                            .mod(this.curve.q)
                            .equals(s.ZERO) &&
                          t.x
                            .toBigInteger()
                            .multiply(this.z)
                            .subtract(this.x.toBigInteger().multiply(t.z))
                            .mod(this.curve.q)
                            .equals(s.ZERO))
                  );
                },
              },
              {
                key: 'isInfinity',
                value: function () {
                  return (
                    (null === this.x && null === this.y) ||
                    (this.z.equals(s.ZERO) && !this.y.toBigInteger().equals(s.ZERO))
                  );
                },
              },
              {
                key: 'negate',
                value: function () {
                  return new t(this.curve, this.x, this.y.negate(), this.z);
                },
              },
              {
                key: 'add',
                value: function (r) {
                  if (this.isInfinity()) return r;
                  if (r.isInfinity()) return this;
                  var i = this.x.toBigInteger(),
                    e = this.y.toBigInteger(),
                    n = this.z,
                    o = r.x.toBigInteger(),
                    u = r.y.toBigInteger(),
                    h = r.z,
                    a = this.curve.q,
                    f = i.multiply(h).mod(a),
                    l = o.multiply(n).mod(a),
                    c = f.subtract(l),
                    p = e.multiply(h).mod(a),
                    v = u.multiply(n).mod(a),
                    y = p.subtract(v);
                  if (s.ZERO.equals(c))
                    return s.ZERO.equals(y) ? this.twice() : this.curve.infinity;
                  var m = f.add(l),
                    g = n.multiply(h).mod(a),
                    d = c.square().mod(a),
                    T = c.multiply(d).mod(a),
                    F = g.multiply(y.square()).subtract(m.multiply(d)).mod(a),
                    b = c.multiply(F).mod(a),
                    w = y.multiply(d.multiply(f).subtract(F)).subtract(p.multiply(T)).mod(a),
                    B = T.multiply(g).mod(a);
                  return new t(
                    this.curve,
                    this.curve.fromBigInteger(b),
                    this.curve.fromBigInteger(w),
                    B,
                  );
                },
              },
              {
                key: 'twice',
                value: function () {
                  if (this.isInfinity()) return this;
                  if (!this.y.toBigInteger().signum()) return this.curve.infinity;
                  var r = this.x.toBigInteger(),
                    i = this.y.toBigInteger(),
                    e = this.z,
                    n = this.curve.q,
                    o = this.curve.a.toBigInteger(),
                    s = r.square().multiply(h).add(o.multiply(e.square())).mod(n),
                    u = i.shiftLeft(1).multiply(e).mod(n),
                    a = i.square().mod(n),
                    f = a.multiply(r).multiply(e).mod(n),
                    l = u.square().mod(n),
                    c = s.square().subtract(f.shiftLeft(3)).mod(n),
                    p = u.multiply(c).mod(n),
                    v = s
                      .multiply(f.shiftLeft(2).subtract(c))
                      .subtract(l.shiftLeft(1).multiply(a))
                      .mod(n),
                    y = u.multiply(l).mod(n);
                  return new t(
                    this.curve,
                    this.curve.fromBigInteger(p),
                    this.curve.fromBigInteger(v),
                    y,
                  );
                },
              },
              {
                key: 'multiply',
                value: function (t) {
                  if (this.isInfinity()) return this;
                  if (!t.signum()) return this.curve.infinity;
                  for (
                    var r = t.multiply(h), i = this.negate(), e = this, n = r.bitLength() - 2;
                    n > 0;
                    n--
                  ) {
                    e = e.twice();
                    var o = r.testBit(n);
                    o !== t.testBit(n) && (e = e.add(o ? this : i));
                  }
                  return e;
                },
              },
            ]),
            t
          );
        })(),
        l = (function () {
          function t(r, i, n) {
            (e(this, t),
              (this.q = r),
              (this.a = this.fromBigInteger(i)),
              (this.b = this.fromBigInteger(n)),
              (this.infinity = new f(this, null, null)));
          }
          return (
            n(t, [
              {
                key: 'equals',
                value: function (t) {
                  return (
                    t === this || (this.q.equals(t.q) && this.a.equals(t.a) && this.b.equals(t.b))
                  );
                },
              },
              {
                key: 'fromBigInteger',
                value: function (t) {
                  return new a(this.q, t);
                },
              },
              {
                key: 'decodePointHex',
                value: function (t) {
                  switch (parseInt(t.substr(0, 2), 16)) {
                    case 0:
                      return this.infinity;
                    case 2:
                    case 3:
                      var r = this.fromBigInteger(new s(t.substr(2), 16)),
                        i = this.fromBigInteger(
                          r
                            .multiply(r.square())
                            .add(r.multiply(this.a))
                            .add(this.b)
                            .toBigInteger()
                            .modPow(this.q.divide(new s('4')).add(s.ONE), this.q),
                        );
                      return (
                        i
                          .toBigInteger()
                          .mod(u)
                          .equals(new s(t.substr(0, 2), 16).subtract(u)) || (i = i.negate()),
                        new f(this, r, i)
                      );
                    case 4:
                    case 6:
                    case 7:
                      var e = (t.length - 2) / 2,
                        n = t.substr(2, e),
                        o = t.substr(e + 2, e);
                      return new f(
                        this,
                        this.fromBigInteger(new s(n, 16)),
                        this.fromBigInteger(new s(o, 16)),
                      );
                    default:
                      return null;
                  }
                },
              },
            ]),
            t
          );
        })();
      t.exports = { ECPointFp: f, ECCurveFp: l };
    },
  ]);
});
